{"version":3,"sources":["webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx"],"names":["queryString","require","PagePolitika","props","state","is_load","city_name","match","params","cityName","title","description","page","itemsStore","this","_isMounted","document","querySelector","classList","remove","window","scrollTo","fetchData","then","data","content","replace","setState","Helmet","name","Grid","container","className","item","xs","style","paddingBottom","Typography","variant","component","page_h","spacing","md","sm","xl","dangerouslySetInnerHTML","__html","propsData","path","type","city_id","split","axios","method","url","headers","stringify","response","json","error","console","log","React"],"mappings":"gSAMA,IAAMA,EAAcC,EAAQ,MAOfC,EAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYC,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAKC,MAAQ,CACTC,SAAS,EACTC,UAAWH,EAAMI,MAAMC,OAAOC,SAC9BC,MAAO,GACPC,YAAa,GACbC,KAAM,MAGVC,YAAmBV,EAAMI,MAAMC,OAAOC,UAXvB,EAHvB,mDA4CI,WACIK,KAAKC,YAAa,IA7C1B,+BAgDI,WAAmB,WACfD,KAAKC,YAAa,EAEdC,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1DC,OAAOC,SAAS,EAAG,GACnBR,YAAmB,gBAEnBX,EAAaoB,UAAU,IAAIR,KAAKV,MAAME,WAAWiB,MAAM,SAAAC,GACnDA,EAAKZ,KAAKa,QAAUD,EAAKZ,KAAKa,QAAQC,QAClC,gBACA,aAAa,EAAKtB,MAAME,UAAU,KAGtC,EAAKqB,SAAU,CACXjB,MAAOc,EAAKZ,KAAKF,MACjBC,YAAaa,EAAKZ,KAAKD,YACvBC,KAAMY,EAAKZ,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACgB,EAAA,EAAD,KACI,6BAAQd,KAAKV,MAAMM,OACnB,wBAAMmB,KAAK,cAAcJ,QAASX,KAAKV,MAAMO,eAGjD,gBAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,8BACtB,gBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEC,cAAe,KACvC,gBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAOzB,KAAKV,MAAMQ,KAAOE,KAAKV,MAAMQ,KAAK4B,OAAS,KAGvF1B,KAAKV,MAAMQ,MAAQE,KAAKV,MAAMQ,KAAKa,QACjC,gBAACK,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACU,QAAS,EAAGC,GAAI,GAAIC,GAAI,GAAIT,GAAI,GAAIU,GAAI,GAAIZ,UAAU,gBAAgBa,wBAAyB,CAACC,OAAQhC,KAAKV,MAAMQ,KAAKa,WAE7I,UAvFxB,wBAiBI,SAAiBsB,GACb,IAtBUC,EAsBNxB,EAAO,CACPyB,KAAM,gBACNC,SAxBMF,EAwBYD,EAvBnBC,EAAKG,MAAM,KAAK,IAwBfvC,KAAM,8BAGV,OAAOwC,IAAM,CACTC,OAAQ,OACRC,IAAI,2CACJC,QAAS,CAAE,eAAgB,qCAC3B/B,KAAMxB,EAAYwD,UAAUhC,KAC7BD,MAAK,SAAAkC,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIC,EAAOD,EAAQ,KAEnB,MAAO,CACH/C,MAAOgD,EAAK9C,KAAKF,MACjBC,YAAa+C,EAAK9C,KAAKD,YACvBC,KAAM8C,EAAK9C,UAZhB,OAeE,SAAU+C,GACfC,QAAQC,IAAIF,UAxCxB,GAAkCG","file":"pagePolitika.e9eaa5da046f81411818.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}"],"sourceRoot":""}