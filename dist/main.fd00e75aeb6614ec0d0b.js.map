{"version":3,"file":"main.fd00e75aeb6614ec0d0b.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButtonStart'>\n                <Button variant=\"contained\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nfunction IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n}))(Tooltip);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" >\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Hidden smUp>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        const width = window.innerWidth;\n\n        const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"contained\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n\n\n                } );\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden mdUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden smDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden mdUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Hidden xsDown>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ padding: '30px 16px', display: 'flex', width: '100%' }}>\n                                                        <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ display: 'flex', padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Hidden lgUp>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                        { this.state.openItem.items.length == 1 ? null :\n                                            <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                        }\n\n                                        <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                            { this.state.openItem.items.map( (item, key) =>\n                                                <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                        <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                            <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                            <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                            <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                        </div>\n                                                    </div>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                        <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) }\n                                        </div>\n                                        \n                                        \n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                            <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                                { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                        :\n                                                    null\n                                                }\n                                                { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                    null\n                                                        :\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                }\n                                                <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                            </div>\n                                        </div>\n                                        \n                                        <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                            {this.state.openModalPCSetItems.map( (item, key) =>\n                                                <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                        { item.img_app.length == 0 || !item.img_app ?\n                                                            <picture>\n                                                                <source \n                                                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                    type=\"image/webp\" \n                                                                />\n                                                                <img \n                                                                    src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                    alt={item.name}\n                                                                    title={item.name}\n                                                                    style={{ width: '100%', height: 'auto' }}\n                                                                />\n                                                            </picture>\n                                                                :\n                                                            <picture>\n                                                                <source srcset={`\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                                <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                            </picture>\n                                                        }\n                                                    </div>\n                                                    <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden only={['xs', 'sm', 'lg', 'xl']}>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                                ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                            } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            size=\"small\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            size=\"small\"\n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                        id=\"PROMONAME\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    onKeyPress={this.enterPromoMobile}\n                                    id=\"PromoMobile\"\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, IconRuble } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 300)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        console.log( cartItems )\n\n        cartItems.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            cartItems[ key ]['img_new'] = this_item['img_new'];\n            cartItems[ key ]['img_new_update'] = this_item['img_new_update'];\n            cartItems[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice()\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                console.log( newCart )\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }}/>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        <div>\n                                            { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                            <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden mdUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden smDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden mdUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Hidden mdUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden mdUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","MiniActionsCartButton","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Intl","NumberFormat","width","height","fill","marginLeft","paddingBottom","ActionsCartButton","firebaseAPP","Badge","new","color","hit","state","size","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","IconInfoWhite","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","HtmlTooltip","withStyles","theme","tooltip","maxWidth","typography","pxToRem","border","Tooltip","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","Hidden","smUp","paddingLeft","alignContent","xs","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","index","nextEl","prevEl","slidePrev","slideNext","prev","next","Ruble","IconClose","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","Typography","overflow","CardActions","flexWrap","ButtonGroup","Button","CardItemBot","nextProps","nextState","href","gutterBottom","info_weight","ShoppingCartOutlined","icon","faMinus","faPlus","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","page_h","cat","main_link","spacing","margin","sm","md","xl","mdUp","Backdrop","zIndex","CircularProgress","smDown","xsDown","lg","Dialog","fullScreen","TransitionComponent","disableTypography","IconButton","itemId","lgUp","fullWidth","handleClosePC","only","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","value","role","hidden","a11yProps","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","mdDown","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","keyCode","Boolean","undefined","handleClick","Popover","anchorPosition","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","sx","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}