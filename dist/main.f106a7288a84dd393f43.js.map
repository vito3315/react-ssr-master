{"version":3,"file":"main.f106a7288a84dd393f43.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport function IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButtonStart'>\n                <Button variant=\"contained\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      //backgroundColor: '#f5f5f9',\n      //color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material/Box';\n\n//import LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconClose } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n\n\n\n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            //modules: [Navigation, Pagination, A11y, Autoplay],\n\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            //autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                //clickable: true,\n                \n            },\n\n            /*pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},*/\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    render() {\n\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"} style={{ overflow: 'hidden', position: 'relative' }}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" />\n                        <div className=\"swiper-button-next\" />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        //const width = window.innerWidth;\n\n        let width = 0;\n        let GRID = 0;\n\n        //const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 1280;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 320;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"outlined\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                if( this._isMounted === true ){\n                    this.setState( {\n                        page: data.page,\n                        title: data.title,\n                        description: data.description,\n\n\n                    } );\n                }\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat()\n                })\n            }\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItem city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    \n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Box>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    \n                    <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Box>\n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Box>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Grid>\n                                            \n                                                <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Grid>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </DialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Dialog disableElevation maxWidth={'md'} sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog disableElevation maxWidth={'lg'} sx={{ display: { xs: 'none', lg: 'block' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Dialog sx={{ display: { xs: 'block', md: 'none' } }} disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                    { this.state.openItem.items.length == 1 ? null :\n                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                    }\n\n                                    <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                        { this.state.openItem.items.map( (item, key) =>\n                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                    </div>\n                                                </div>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) }\n                                    </div>\n                                    \n                                    \n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'block', sm: 'none' } }} disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                        <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                            { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                                    :\n                                                null\n                                            }\n                                            { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                null\n                                                    :\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                            }\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog sx={{ display: { xs: 'none', lg: 'block' } }} disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@mui/material/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport AppBar from '@mui/material/AppBar';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'none', lg: 'block' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'block', lg: 'none' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                        size=\"small\"\n                                    />\n                                    <TextField \n                                        InputProps={{ readOnly: true }} \n                                        label=\"Номер телефона\" \n                                        value={this.state.info.user.login} \n                                        className=\"input\" \n                                        size=\"small\"\n                                    />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField \n                                            label=\"Дата рождения\" \n                                            className=\"input\" \n                                            InputProps={{ readOnly: true }} \n                                            value={this.state.info.user.date_bir} \n                                            size=\"small\"\n                                        />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\" size=\"small\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                    size=\"small\"\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                  size=\"small\"\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                        size=\"small\"\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={\n                                            <Checkbox \n                                                checked={ parseInt(this.state.spam) == 1 ? true : false } \n                                                name=\"checkedC\" \n                                                sx={{\n                                                    '&.Mui-checked': {\n                                                        color: '#c03',\n                                                    },\n                                                }}\n                                            />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </DialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel \n                                        key={key} \n                                        value={item.id} \n                                        control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } \n                                        label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                        </ButtonGroup>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport AppBar from '@mui/material/AppBar';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nimport Input from '@mui/material/Input';\n\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\">\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >{this.state.count}</Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                \n                \n                <Grid item container sx={{ display: { xs: 'none', sm: 'flex' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={ \n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Accordion>\n                            <AccordionSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className=\"newAddr\">\n                                <div>\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"newAddrStreet\"\n                                        size=\"small\"\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                        options={this.state.all_addr.map((option) => option.value)}\n                                        renderInput={(params) => (\n                                            <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                        )}\n                                    />\n                                    <TextField \n                                        label=\"Дом\" \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        value={this.state.newAddrHome} \n                                        onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField \n                                        label=\"Подъезд\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrPD} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Этаж\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrET} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Квартира\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrKV} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />  \n                                </div>\n                                <div>\n                                    <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                        <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                        <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                    </ButtonGroup>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1}>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </TabPanel>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className='_comment_'>\n                            <TextField\n                                id=\"outlined-multiline-flexible\"\n                                label=\"Комментарий курьеру\"\n                                multiline\n                                rowsMax={2}\n                                value={this.state.orderComment}\n                                onChange={this.changeComment}\n                                variant=\"outlined\" \n                                size={'small'} \n                                type={ 'text' }\n                            />\n\n                        </div>\n                            :\n                        null\n                    }\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Оплата</FormLabel>\n                            <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                {this.state.renderPay.map((item, key) => \n                                    <FormControlLabel key={key} value={item.type} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={item.title} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                            <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                <FormControlLabel value='1' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Как можно быстрее\" />\n                                <FormControlLabel value='2' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Предзаказ\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    {this.state.orderTimes == 2 ?\n                        <div>\n                            <FormControl style={{ width: '30%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                    displayEmpty\n                                    value={this.state.orderPredDay}\n                                    onChange={this.changePredDay}\n                                    inputProps={{\n                                    id: 'age-native-simple',\n                                    }}\n                                >\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '20%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    displayEmpty\n                                    size='small'\n                                    value={this.state.orderPredTime}\n                                    onChange={this.changePredTime}\n                                    inputProps={{\n                                    id: 'age-native-simple1',\n                                    }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                            :\n                        null\n                    }\n                    \n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                    </div>\n                    <div>\n                        <table className=\"tableCart\">\n                            <tbody>\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <tr className=\"rowAboutDop\">\n                                    <td colSpan='3'>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                        <br />\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                    </td>\n                                </tr>\n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Доставка:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Итого:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"orderSdacha\">\n                            <div>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                    <Input\n                                        type=\"number\"\n                                        id=\"standard-adornment-weight\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>    \n                            :\n                        null\n                    }\n                    <div className=\"promoOrder\">\n                        <div>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                    id=\"PROMONAME\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                </Grid>\n            \n            \n                <Grid item container sx={{ display: { xs: 'flex', sm: 'none' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                this.state.orderAddr.city_name+', '+\n                                this.state.orderAddr.street+' '+\n                                this.state.orderAddr.home+\n                                \n                                ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                    : ''}</Typography>\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                        <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                        </div>\n                    </TabPanel>\n                    \n                    <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                    </div>\n                    <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                    </div>\n                    <div style={{ marginTop: 15 }}>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.orderPromo}\n                                onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                onKeyPress={this.enterPromoMobile}\n                                id=\"PromoMobile\"\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.orderPromoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                    </div>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Комментарий курьеру\"\n                                    multiline\n                                    rowsMax={2}\n                                    value={this.state.orderComment}\n                                    onChange={this.changeComment}\n                                    variant=\"outlined\" \n                                    size={'small'} \n                                    type={ 'text' }\n                                />\n                            </form>\n                        </div>\n                            :\n                        null\n                    }\n                                            \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type=\"number\"\n                                    style={{ width: '100%' }}\n                                    value={this.state.orderSdacha}\n                                    onChange={this.changeSdacha}\n                                    endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                    label=\"Подготовить сдачу с\"\n                                />\n                            </FormControl>\n                        </div>\n                        :\n                        null\n                    }\n                    \n                    <div>\n                        <div className=\"tableMobile\">\n                            {this.state.cartItems_main.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            {this.state.cartItems_promo.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            <div className=\"boxItem rowAboutDop\">\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                <br />\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                            </div>\n                            \n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            \n                        </div>\n                        \n                        \n                    </div>\n                \n                    <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                        <div style={{ padding: '5px 0px' }}>\n                            <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div style={{ paddingBottom: 5 }}>\n                            <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </Grid>\n                \n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, IconRuble } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 300)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        console.log( cartItems )\n\n        cartItems.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            cartItems[ key ]['img_new'] = this_item['img_new'];\n            cartItems[ key ]['img_new_update'] = this_item['img_new_update'];\n            cartItems[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice()\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                console.log( newCart )\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    //anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }}/>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        <div>\n                                            { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                            <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\" component=\"h1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","IconClose","MiniActionsCartButton","ButtonGroup","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Button","Intl","NumberFormat","width","height","marginLeft","paddingBottom","ActionsCartButton","firebaseAPP","Badge","new","color","hit","state","size","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","Typography","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","maxWidth","typography","pxToRem","border","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","sx","xs","sm","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","paddingLeft","alignContent","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","pagination","navigation","nextEl","prevEl","overflow","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","CardActions","flexWrap","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","index","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","href","page_h","cat","main_link","spacing","margin","md","xl","Backdrop","zIndex","CircularProgress","lg","Dialog","fullScreen","TransitionComponent","DialogTitle","disableTypography","IconButton","itemId","fullWidth","handleClosePC","DialogContent","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","icon","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","value","role","hidden","a11yProps","Ruble","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","nextProps","nextState","img","imgUpdate","faGift","faMinus","faPlus","gutterBottom","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","ShoppingCartOutlined","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","keyCode","Boolean","undefined","handleClick","Popover","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}