{"version":3,"file":"main.7485572d837dfbf6efa6.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/mikhailvinokurov/Documents/GitHub/react-ssr-master/node_modules/moment/locale|sync|/ru/"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            console.log( 'item', item )\n            console.log( 'max_count', max_count )\n\n            max_count = max_count / check_dop;\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token') );  \n        }, 300 )\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@material-ui/core/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        /*if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }*/\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Box component=\"div\" className=\"pcItem\" >\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 2;\n        let this_count = this.state.data.length;\n        \n        if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }\n        \n        \n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            console.log( 'city', city ) \n            \n            if( city == 'samara' && parseInt(this.state.item['id']) == 238 ){\n                this.setState({\n                    //old_price: 715,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 238 ){\n                this.setState({\n                    //old_price: 675,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                console.log( 'city', city ) \n                \n                if( city == 'samara' && parseInt(this.state.item['id']) == 238 ){\n                    this.setState({\n                        //old_price: 715,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 238 ){\n                    this.setState({\n                        //old_price: 675,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginLeft: 0, width: '100%' }}>\n                            <div>\n                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography>\n                            </div>\n                            { this.state.is_old_price === false ? null :\n                                <Typography className=\"CardPriceItem_old\" variant=\"h5\" component=\"span\">{this.state.old_price} <Ruble /></Typography>\n                            }\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={6} sm={6} md={6} xl={6} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                                //ref={el => this.elementSource = el}\n                            />\n                            <img \n                                //ref={el => this.elementImg = el}\n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6} xl={6} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <div>\n                                { this.state.is_old_price === false ? null :\n                                    <Typography gutterBottom className=\"CardPriceItem_old\" variant=\"h5\" component=\"span\">{this.state.old_price} <Ruble width=\"20\" viewBox=\"100 -100 800 300\" /></Typography>\n                                }\n                                <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            </div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n                } );\n            } );\n        }\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden mdUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden smDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden mdUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <Hidden xsDown>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Hidden>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            \n                            <MuiDialogContent className=\"modalActiiContent\">\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </MuiDialogContent>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                        sum_div: point['sum_div'], \n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            let search = window.location.search;\n            \n            if( search.length > 0 ){\n                \n                if(search.indexOf('orderId') > 0){\n                    let order_pay = window.location.search;\n                \n                    let p1 = order_pay.split('&');\n            \t\tlet bank = p1[0].split('bank=');\n            \t\tbank = bank[1];\n\n            \t\tlet order_id = p1[1].split('orderId=');\n                    order_id = order_id[1];\n                    \n                    this.checkPay(bank, order_id);\n                    \n                    let state = { },\n                        title = '',\n                        url = window.location.pathname;\n\n                    window.history.pushState(state, title, url)\n                }\n                \n                if(search.indexOf('trueOrder') > 0){\n                    let state = { },\n                        title = '',\n                        url = window.location.pathname;\n\n                    window.history.pushState(state, title, url)\n                }\n            }\n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        this.setState({ hasError: true })\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        console.log( 'changePayMobile', type )\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Тип оплаты не выбран'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            size=\"small\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            size=\"small\"\n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                        id=\"PROMONAME\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    onKeyPress={this.enterPromoMobile}\n                                    id=\"PromoMobile\"\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv )\n                                        } />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\">\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\"> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 59\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden mdUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden smDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden mdUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden mdUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden mdUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Hidden mdUp>\n                            <Hidden only=\"xs\">\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n\n\n                            <Hidden only=\"sm\">\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n                        </Hidden>\n                            :\n                        null\n                    }\n                 \n                    \n                    {this.state.activePage == 'cart' ? null\n                            :\n                        <Hidden mdUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","console","log","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","state","is_load","city_name","itemLink","linkItem","title","data","description","_isMounted","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","Helmet","content","Box","component","className","Grid","container","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","Hidden","smUp","textAlign","margin","flexWrap","wordWrap","propsData","page","axios","url","response","cats","all","error","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","Card","CardContent","cursor","openItem","is_new","top","right","padding","CardActions","marginLeft","sm","md","xl","CardItemBot","nextProps","nextState","href","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","innerWidth","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","baners","aktia_id","to","exact","borderRadius","onDragStart","removeEventListener","history","pushState","touchStart","touchEnd","startMove","pageY","handleClose","page_h","cat","main_link","spacing","mdUp","Backdrop","open","CircularProgress","smDown","xsDown","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","dangerouslySetInnerHTML","__html","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","def_type","renderPay","pays","dev","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","dop_text","fontWeight","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","handleClick","transformOrigin","textDecoration","openLogin","HeaderCat","Header","load","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","openCity","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","user_name","sms1","number","join","slice","grecaptcha","execute","token","timerId","setInterval","clearInterval","sms2","cod","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","whiteSpace","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","opacity","stores","firebaseAPP","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAnalytics","getPerformance","globalState","only","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}