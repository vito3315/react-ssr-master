{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","console","log","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","kkal","protein","fat","carbohydrates","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","className","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","component","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","allergens","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","smUp","textAlign","flexWrap","wordWrap","spacing","propsData","axios","url","response","error","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","CardContent","cursor","openItem","is_new","top","right","padding","paddingBottom","CardActions","marginLeft","sm","md","xl","Transition","ref","Slide","direction","Home","hash","duration","smooth","offset","getElementById","getBoundingClientRect","location","act_id","innerWidth","openItemPC","history","replace","pathname","banners_pc","banners_mobile","aktia_id","to","exact","borderRadius","onDragStart","testData","openModal","openModalPC","addEventListener","touchStart","touchEnd","removeEventListener","startMove","pageY","handleClose","margin","it","Backdrop","open","CircularProgress","cat","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","marginRight","Actii","actii","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","page_h","dangerouslySetInnerHTML","__html","closeDialog","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","type_order_addr_new","time_order_name","time_order","is_preorder","text_time","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","pic_point","choosePic","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","saveDataCustomAddr","id_addr","changePredDay","this_pay","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","Boolean","undefined","aria-describedby","handleClick","transformOrigin","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","sms1","number","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","animate","scrollLeft","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"UAAIA,E,4XCEEC,EAAcC,EAAQ,MAs0BtBC,EAAa,I,WArCjB,aAAc,WACZ,IADY,oCA7xBN,KA6xBM,yBA5xBD,KA4xBC,uBA3xBH,KA2xBG,0BA1xBA,KA0xBA,sBAzxBJ,KAyxBI,uBAxxBH,IAwxBG,sBAvxBJ,IAuxBI,uBArxBH,KAqxBG,yBApxBD,KAoxBC,oBAlxBN,OAkxBM,wBAjxBF,OAixBE,uBAhxBH,KAgxBG,yBA9wBD,KA8wBC,wBA5wBF,KA4wBE,yBA3wBD,KA2wBC,wBA1wBF,KA0wBE,yBAxwBF,SAACC,GACX,EAAKC,QAAUC,SAAUF,OAuwBb,uBAhwBJ,SAACA,GACT,EAAKG,UAAYC,KAAKC,UAAUL,OA+vBpB,4BAxvBC,SAACA,GACd,EAAKM,WAAaF,KAAKC,UAAUL,OAuvBrB,yBAhvBF,SAACO,GACX,EAAKC,WAAaD,MA+uBN,uBAvuBJ,SAACA,GACT,EAAKE,SAAWF,MAsuBJ,2BA/tBA,SAACG,GACb,EAAKC,SAAWD,MA8tBJ,uBAvtBJ,SAACE,GACT,EAAKA,WAAaA,MAstBN,wBA/sBH,SAACC,EAAWC,GACrB,EAAKD,UAAYA,EACjB,EAAKE,YAAYD,GAEK,oBAAXE,QACTC,aAAaC,QAAQ,QAASL,OA0sBpB,wBApqBH,SAACM,EAAOC,GACjB,EAAKD,MAAQA,EAEbF,aAAaC,QAAQ,aAAcE,OAiqBvB,0BA9TD,SAACpB,GACZ,EAAKqB,QAAUjB,KAAKC,UAAUL,OA6TlB,6BAtTE,SAACA,GACf,EAAKsB,WAAalB,KAAKC,UAAUL,OAqTrB,8BA9SG,SAACA,GAChB,EAAKuB,YAAcnB,KAAKC,UAAUL,OA6StB,wBAtSH,SAACA,GACV,IAAIwB,EAAM,EACNC,EAAW,EAEXC,EAAiB,EAAKC,gBAW1B,GATAF,EAAWzB,EAAM4B,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAE3EA,EAAM,EAENC,GAAYC,EAAeE,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAErF,EAAKO,YAAYN,GAEjB,EAAKzB,MAAQI,KAAKC,UAAUL,GACN,oBAAXgB,OAAwB,CACjC,IAAIgB,EAAUhC,EAAMiC,QAAQ,SAACH,GAAD,OAAUA,EAAKI,MAAQ,KACnDF,EAAU5B,KAAKC,UAAU2B,GAEzBf,aAAaC,QAAQ,UAAWc,QAmRtB,4BA/QC,SAAChC,GACd,IAAImC,EAAW/B,KAAKC,UAAUL,GAC9B,EAAKoC,UAAYD,EACK,oBAAXnB,QACTC,aAAaC,QAAQ,WAAYiB,OA2QvB,2BA7PA,SAACnC,GACb,EAAKqC,SAAWjC,KAAKC,UAAUL,MA6PT,oBAAXgB,OAAwB,CACjC,GAAIC,aAAaqB,QAAQ,WAAY,CACnC,IAAIC,EAAOnC,KAAKoC,MAAMvB,aAAaqB,QAAQ,YACvCG,EAAW,GAEfF,EAAKG,SAAQ,SAAAZ,GACXW,EAASE,KAAK,CACZvB,KAAMU,EAAKV,KACXwB,QAASd,EAAKc,QACdV,MAAOJ,EAAKI,MACZW,UAAW3C,SAAU4B,EAAKe,WAC1BC,UAAW5C,SAAU4B,EAAKe,WAAc3C,SAAU4B,EAAKI,YAI3Da,KAAKC,SAAUP,GAEbxB,aAAaqB,QAAQ,UACvBS,KAAKE,SAAUhC,aAAaqB,QAAQ,UAElCrB,aAAaqB,QAAQ,cACvBS,KAAKZ,SAAWlB,aAAaqB,QAAQ,aAEnCrB,aAAaqB,QAAQ,eACvBY,YAAW,WACT,EAAKC,aAAclC,aAAaqB,QAAQ,iBACvC,MAMPc,QAAoBL,M,wCAryBtB,WACE,OAAOA,KAAK9C,U,qBAOd,WACE,OAAgC,GAAzB8C,KAAK5C,UAAUkD,OAAc,GAAKjD,KAAKoC,MAAMO,KAAK5C,WAAW,K,0BAOtE,WACE,OAAiC,GAA1B4C,KAAKzC,WAAW+C,OAAc,GAAKjD,KAAKoC,MAAMO,KAAKzC,YAAY,K,uBAOxE,WAEE,OAAOyC,KAAKvC,YAAcuC,KAAKvC,WAAW6C,OAAS,EAAIN,KAAKvC,WAAa,U,qBAO3E,WACE,OAAOuC,KAAKtC,W,yBAOd,WACE,OAAOsC,KAAKpC,W,qBAOd,WACE,OAAOoC,KAAKnC,a,yBAYd,WACE,OAAOmC,KAAKjC,UAAYiC,KAAKjC,SAASuC,OAAS,EAAIN,KAAKjC,SAAW,K,yBAGrE,SAAYA,GACViC,KAAKjC,SAAWA,I,sBAGlB,WACE,OAAOiC,KAAKlC,Y,0BAGd,SAAayC,GACXC,MAAM,2CAA4C,CAChDC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,EAAYQ,UAAU,CACxBsD,KAAM,gBACNC,QAAS7D,EAAW8D,UACpBC,WAAYR,MAEjBS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5BlE,EAAWmE,SAAU9D,KAAKC,UAAU4D,GAAOX,IAGpB,IAFLvD,EAAWoE,aAEbC,IACdnD,aAAaoD,WAAW,mB,sBAa9B,WACE,OAAOjE,KAAKoC,MAAMO,KAAK5B,OAAO,K,wBAIhC,WACE,IAAImD,EAAYvE,EAAWwE,cAC3BxE,EAAWyE,cAAc,IAEzB,IAAIhD,EAAM,EACNC,EAAW,EACXgD,EAAWH,EAAUI,YAAkD,GAApCxE,SAAUoE,EAAUI,YAAwBJ,EAAUK,aAAe,IAAML,EAAUM,cAA7C,EAE3EC,EAAa9B,KAAK+B,WAClB9C,EAAUe,KAAKgC,WACf1C,EAAWU,KAAKiC,cAEhBC,EAAc,GAElBjD,EAAQU,SAAS,SAACwC,EAASC,GACzBF,EAAYtC,KAAK,CACfvB,KAAM8D,EAAQ9D,KACdwB,QAASsC,EAAQtC,QACjBV,MAAOgD,EAAQhD,MACfW,UAAWqC,EAAQrC,UACnBC,UAAW5C,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,YAI9DF,EAAUiD,EAEVlC,KAAKC,SAAShB,GAEd,IAAIN,EAAiB,GACrBD,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAE7E,IAIqD,IAJjD4D,EAAa,EACbC,EAAe,EACfC,EAAe,GAEfhB,EAAUiB,WAAoC,GAAvBjB,EAAUiB,aACnCH,EAAU,UAAGlF,SAAUoE,EAAUiB,kBAAvB,QAAsC,EAChDF,EAAef,EAAUkB,UAAYtF,SAAUoE,EAAUkB,UAAUC,UAAa,EAChFH,EAAY,UAAGpF,SAAUoE,EAAUoB,iBAAvB,QAAqC,GAGnD,IAAIC,EAAYC,IAAOnB,GAASoB,OAAO,cACnCC,EAAYF,IAAOnB,GAASoB,OAAO,QACnCE,EAAW7F,SAAS0F,IAAOnB,GAASoB,OAAO,MAY/C,GAVe,GAAXpB,GACFkB,EAAYC,IAAO,IAAII,MAAQH,OAAO,cACtCC,EAAYF,IAAO,IAAII,MAAQH,OAAO,QACtCE,EAAW7F,SAAS0F,IAAO,IAAII,MAAQH,OAAO,QAE9CF,EAAYC,IAAOnB,GAASoB,OAAO,cACnCC,EAAYF,IAAOnB,GAASoB,OAAO,QACnCE,EAAW7F,SAAS0F,IAAOnB,GAASoB,OAAO,OAGzChB,EAAY,CACd,IAAKA,EAAWoB,aACd,MAAO,CACL7B,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,OAIV,GAAItB,EAAWuB,OAAOC,KAAKC,KAAOzB,EAAWuB,OAAOC,KAAKE,OACnDZ,GAAad,EAAWuB,OAAOC,KAAKC,KAAOX,GAAad,EAAWuB,OAAOC,KAAKE,KAGjF,MAAO,CACLnC,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,OAKZ,GAAkC,GAA9BtB,EAAWuB,OAAOI,KAAKF,KAA0C,GAA9BzB,EAAWuB,OAAOI,KAAKD,OACxDT,GAAajB,EAAWuB,OAAOI,KAAKF,KAAOR,GAAajB,EAAWuB,OAAOI,KAAKD,KAGjF,MAAO,CACLnC,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,OAKZ,GAAkC,GAA9BtB,EAAWuB,OAAOX,YACD,GAAdL,GAAmBC,GAAgBR,EAAWuB,OAAOX,UAA4B,GAAdL,GAAmBE,GAAgBT,EAAWuB,OAAOX,UAG3H,MAAO,CACLrB,IAAI,EACJ8B,KAAM,kGAKZ,KAAkC,GAA9BrB,EAAWuB,OAAOK,KAAKH,KAA0C,GAA9BzB,EAAWuB,OAAOK,KAAKF,KACxD9E,GAAYoD,EAAWuB,OAAOK,KAAKH,MAAQzB,EAAWuB,OAAOK,KAAKF,KAAO9E,GAA0C,GAA9BoD,EAAWuB,OAAOK,KAAKF,MAG9G,MAAO,CACLnC,IAAI,EACJ8B,KAAM,sFAKZ,GAAIrB,EAAWuB,OAAOM,MACgC,GAAhDxG,SAAS2E,EAAWuB,OAAOM,KAAMX,IACnC,MAAO,CACL3B,IAAI,EACJ8B,KAAM,qGAKZ,GAAIrB,EAAWuB,OAAOhB,cAE0B,GAA5ClF,SAAU2E,EAAWuB,OAAOhB,aAEiB,GAA5ClF,SAAU2E,EAAWuB,OAAOhB,aAAmC,GAAdA,GAEL,GAA5ClF,SAAU2E,EAAWuB,OAAOhB,aAAmC,GAAdA,GAGlD,MAAO,CACLhB,IAAI,EACJ8B,KAAM,mFAKZ,GAAIrB,EAAWuB,OAAOO,YAC4B,GAA5CzG,SAAU2E,EAAWuB,OAAOO,YAC9B,MAAO,CACLvC,IAAI,EACJ8B,KAAM,qIAKZ,GAAIrB,EAAWuB,OAAOpG,MAAMqD,OAAS,EAAG,CACtC,IAAIuD,EAAQ,EAWZ,GARA/B,EAAWuB,OAAOpG,MAAM6G,KAAI,SAACC,GACf7B,EAAY8B,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAWkE,MAGtDF,OAIA/B,EAAWuB,OAAOpG,MAAMqD,QAAUuD,EACpC,MAAO,CACLxC,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,OAOZ,IAAIrD,EAAY,EACZkE,EAAa,EACbC,EAAY,KAGhB,OAAyC,GAArC/G,SAAS2E,EAAWqC,eAEoB,GAAtChH,SAAS2E,EAAWsC,KAAKC,YAC3BJ,EAAa9G,SAAS2E,EAAWsC,KAAKH,YAEtChF,EAAQU,SAAS,SAACwC,EAASC,GACzB8B,EAAY5E,EAAS0E,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMnC,EAAQtC,WAExB,GAA5B1C,SAAS+G,EAAUtD,OAA0C,GAA5BzD,SAAS+G,EAAUtD,OACtDkB,EAAWsC,KAAKG,YAAY5E,SAAS,SAAC6E,GAChCrH,SAASgF,EAAQtC,UAAY1C,SAASqH,KAEI,GAAxCrH,SAAS2E,EAAWsC,KAAKK,YAGvBR,EAAa,KACflE,EAAa5C,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAAUhC,SAAS8G,KAE9D,IACflE,EAAY,GAGdkE,GAAe9G,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAE9DF,EAASmD,GAAWrC,UAAYA,IAKlCA,EAAY5C,SAASgF,EAAQpC,WAAe5C,SAASgF,EAAQpC,WAAa,IAAO5C,SAAS8G,GAC1FhF,EAASmD,GAAWrC,UAAY5C,SAAS4C,YASX,GAAtC5C,SAAS2E,EAAWsC,KAAKC,YAC3BJ,EAAa9G,SAAS2E,EAAWsC,KAAKH,YAEtChF,EAAQU,SAAS,SAACwC,EAASC,GACzB8B,EAAY5E,EAAS0E,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMnC,EAAQtC,WAExB,GAA5B1C,SAAS+G,EAAUtD,OAA0C,GAA5BzD,SAAS+G,EAAUtD,OACtDkB,EAAWsC,KAAKG,YAAY5E,SAAS,SAAC6E,GAChCrH,SAAS+G,EAAUQ,SAAWvH,SAASqH,KAEG,GAAxCrH,SAAS2E,EAAWsC,KAAKK,YAGvBR,EAAa,KACflE,EAAa5C,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAAUhC,SAAS8G,KAE9D,IACflE,EAAY,GAGdkE,GAAe9G,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAE9DF,EAASmD,GAAWrC,UAAYA,IAIlCA,EAAY5C,SAASgF,EAAQpC,WAAe5C,SAASgF,EAAQpC,WAAa,IAAO5C,SAAS8G,GAC1FhF,EAASmD,GAAWrC,UAAY5C,SAAS4C,YASX,GAAtC5C,SAAS2E,EAAWsC,KAAKC,YAC3BJ,EAAa9G,SAAS2E,EAAWsC,KAAKH,YAEtChF,EAAQU,SAAS,SAACwC,EAASC,GACzB8B,EAAY5E,EAAS0E,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMnC,EAAQtC,WAExB,GAA5B1C,SAAS+G,EAAUtD,OAA0C,GAA5BzD,SAAS+G,EAAUtD,QACV,GAAxCzD,SAAS2E,EAAWsC,KAAKK,YAGvBR,EAAa,KACflE,EAAa5C,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAAUhC,SAAS8G,KAE9D,IACflE,EAAY,GAGdkE,GAAe9G,SAASgF,EAAQrC,WAAa3C,SAASgF,EAAQhD,OAE9DF,EAASmD,GAAWrC,UAAYA,IAIlCA,EAAY5C,SAASgF,EAAQpC,WAAe5C,SAASgF,EAAQpC,WAAa,IAAO5C,SAAS8G,GAC1FhF,EAASmD,GAAWrC,UAAY5C,SAAS4C,SAMjDtB,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAI,YAAeN,GAEnEzB,EAAWgC,YAAYN,GAEhB,CACL2C,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,QAK+B,GAArCjG,SAAS2E,EAAWqC,gBACtBrC,EAAW6C,UAAUhF,SAAQ,SAACiF,GAC5BV,EAAY5E,EAAS0E,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMM,EAAG/E,WAEnDlB,EAAeiB,KAAK,CAClBC,QAAS+E,EAAG/E,QACZV,MAAOyF,EAAGzF,MACVW,UAAWoE,EAAS,MACpBnE,UAAW6E,EAAGjH,WAIlBc,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAE7EA,EAAM,EAENC,GAAYC,EAAeE,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAErFzB,EAAWyE,cAAc9C,GACzB3B,EAAWgC,YAAYN,IAIgB,GAArCvB,SAAS2E,EAAWqC,eAClBrC,EAAW+C,eAAevE,OAAS,IACrCrB,EAAQU,SAAS,SAACwC,EAASC,GACzBN,EAAW+C,eAAelF,SAAS,SAAC6E,GAC9BrH,SAASgF,EAAQtC,UAAY1C,SAASqH,EAASF,MACjDrF,EAASmD,GAAW0C,cAAgB3H,SAASqH,EAAS7G,OACtDsB,EAASmD,GAAWrC,UAAY5C,SAASqH,EAAS7G,OAASR,SAASgF,EAAQhD,cAKlFV,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAM3B,SAAS4B,EAAI,aAAgBN,GAC7EzB,EAAWgC,YAAYN,IAI3BsB,KAAKC,SAAShB,GAEP,CACLoC,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,OAGR,MAAO,CACL/B,IAAI,EACJ8B,KAAMrB,EAAWsB,WAAX,MACN2B,KAAMjD,K,wBASZ,WACE,OAA8B,GAAvB9B,KAAK1B,QAAQgC,OAAc,GAAKjD,KAAKoC,MAAMO,KAAK1B,SAAS,K,2BAOlE,WACE,OAAiC,GAA1B0B,KAAKzB,WAAW+B,OAAc,GAAKjD,KAAKoC,MAAMO,KAAKzB,YAAY,K,4BAOxE,WACE,OAAkC,GAA3ByB,KAAKxB,YAAY8B,OAAc,GAAKjD,KAAKoC,MAAMO,KAAKxB,aAAa,K,yBAkC1E,WACE,GAAsB,oBAAXP,OACT,OAAIC,aAAaqB,QAAQ,YAChBlC,KAAKoC,MAAOvB,aAAaqB,QAAQ,aAEjC,K,sBASb,WACE,OAA4B,GAArBS,KAAK/C,MAAMqD,OAAc,GAAKjD,KAAKoC,MAAMO,KAAK/C,OAAO,K,yBAG9D,WACE,OAA+B,GAAxB+C,KAAKV,SAASgB,OAAc,GAAKjD,KAAKoC,MAAMO,KAAKV,UAAU,K,qBAGpE,SAAQgF,GACN,IAAIrF,EAAUjC,EAAWgF,WACrBgD,EAAYhI,EAAWiF,cACvB7D,EAAQpB,EAAW+E,WAEvB,KAAIiD,EAAU1E,OAAS,GA+CrB,OAAO,EA9CP,IAAI2E,EAAYhG,EAAQ+E,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAWyE,KACpDY,EAAS,EAETD,IACFC,EAASD,EAAU9F,OAGrB,IAAIgG,EAAYH,EAAUhB,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMA,KAErD,GAAGa,EAAU,CACX,IAAIhG,EAAQ+F,EAAS,EACjBvH,EAAQwH,EAAS,MAEjBC,EAAYpI,EAAWqI,gBAAiBlI,SAASmH,IAErD,OAAInH,SAASiI,IAAcjG,GACLF,EAAQqG,MAAM,SAACvG,GAAD,OAAUA,EAAKc,SAAWyE,KAUxDrF,EAAQU,SAAQ,SAACZ,EAAMwG,GACjBxG,EAAKc,SAAWyE,IAClBrF,EAAQsG,GAAR,MAAwBpG,EACxBF,EAAQsG,GAAR,UAA4BpG,EAAQxB,MAXxCsB,EAAQW,KAAK,CACXvB,KAAM8G,EAAU9G,KAChBwB,QAASyE,EACTnF,MAAOA,EACPW,UAAWnC,EACXoC,UAAWZ,EAAQxB,IAWzBX,EAAWiD,SAAShB,GAEhBb,GACFpB,EAAWoE,aAGNjC,GAGFA,EAAQ,K,uBAOrB,SAAUmF,GACR,IAAIrF,EAAUjC,EAAWgF,WACrBgD,EAAYhI,EAAWiF,cACvB7D,EAAQpB,EAAW+E,WAEvB,GAAIiD,EAAU1E,OAAS,EAAG,CACxB,IAAI2E,EAAYhG,EAAQ+E,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAWyE,KAExD,IAAKW,EACH,OAAO,EAGT,IAAIE,EAAYH,EAAUhB,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMA,KACjDnF,EAAQhC,SAAS8H,EAAU9F,OAAS,EACpCxB,EAAQwH,EAAS,MAqBrB,OAnBIhG,GAAS,IACXA,EAAQ,GAGNA,GAAS,IACXF,EAAQ6E,KAAK,SAAC/E,EAAMwG,GACdxG,EAAKc,SAAWyE,IAClBrF,EAAQsG,GAAR,MAAwBpG,EACxBF,EAAQsG,GAAR,UAA4BpG,EAAQxB,MAIxCX,EAAWiD,SAAShB,IAGlBb,GACFpB,EAAWoE,aAGNjC,EAEP,OAAO,I,6BAIX,WACE,IAAIF,EAAUjC,EAAWgF,WACrBgD,EAAYhI,EAAWiF,cAE3B,IAAK+C,GAAiC,GAApBA,EAAU1E,OAC1B,MAAO,GAGT,IAAIkF,EAAc,EACdC,EAAc,EAEdrI,EAAYJ,EAAW0I,UAE3B,GAAwB,GAApBtI,EAAUkD,OACZ,MAAO,GAGTrB,EAAQU,SAAQ,SAAAiF,GACd,IAAIV,EAAYc,EAAUhB,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMM,EAAG/E,WAExD,IAAKqE,EACH,MAAO,GAG4B,IAAjC/G,SAAS+G,EAAS,QACpBsB,GAAerI,SAASyH,EAAGzF,OAEW,KAAlChC,SAAS+G,EAAS,SAAwD,IAAlC/G,SAAS+G,EAAS,SAAuD,IAAlC/G,SAAS+G,EAAS,SAAuD,IAAlC/G,SAAS+G,EAAS,UAC1IuB,GAAetI,SAASyH,EAAGzF,WAKjC,IAAIwG,EAAgB,GAEhBF,EAAc,GAAoB,GAAfD,IACrBG,EAAgBvI,EAAS,OAGR,GAAfqI,GAAoBD,EAAc,IACpCG,EAAgBvI,EAAS,OAGvBqI,EAAc,GAAKD,EAAc,IACnCG,EAAgB,GAAH,eAAOvI,EAAS,QAAhB,OAA8BA,EAAS,SAGnC,GAAfqI,GAAmC,GAAfD,IACtBG,EAAgB,GAAH,eAAOvI,EAAS,QAAhB,OAA8BA,EAAS,SAGtD,IAAIwI,EAAU,GACVC,EAAa,GA8BjB,OA5BA5G,EAAQU,SAAQ,SAAAiF,GACd,IAAIV,EAAYc,EAAUhB,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMM,EAAG/E,WAExD,IAAKqE,EACH,MAAO,GAG4B,GAAjC/G,SAAS+G,EAAS,SACpB0B,EAAQhG,KAAMsE,MAIlB0B,EAAQjG,SAAS,SAACmG,GAChB,IAAIC,GAAY,EAEhBJ,EAAchG,SAAS,SAACqG,GAClB7I,SAAU6I,EAAS1B,KAAQnH,SAAU2I,EAAKxB,MAC5CyB,GAAY,MAIXA,GACHF,EAAWjG,KAAMkG,MAIrBH,EAAgB,GAAH,eAAOA,GAAkBE,K,6BAKxC,SAAgBhG,GACd,IAAIoG,EAAoB,GACpBC,EAAU,GAEVjH,EAAUjC,EAAWgF,WACrBzE,EAAaP,EAAWmJ,eAE5B,IAAK5I,EACH,OAAO,GAGT0B,EAAQU,SAAQ,SAACyG,EAAWb,GAC1BhI,EAAWoC,SAAS,SAACZ,GACf5B,SAASiJ,EAAS,UAAgBjJ,SAAS4B,EAAI,gBACjDA,EAAI,cAAoB5B,SAASiJ,EAAS,OAE1CH,EAAkBrG,KAAMb,GACxBmH,EAAQtG,KAAMzC,SAAS4B,EAAI,iBAKjCmH,GAAU,OAAI,IAAIG,IAAIH,IAEtB,IAAII,EAAe,GAEnBJ,EAAQvG,SAAS,SAAC4G,EAAWhB,GAC3BU,EAAkBtG,SAAS,SAAC6G,GAC1B,GAAIrJ,SAASoJ,IAAcpJ,SAASqJ,EAAS,SAAc,CACzD,IAAI3C,GAAQ,EAEZyC,EAAa3G,SAAS,SAACiF,EAAI6B,GACrBtJ,SAAUyH,EAAE,UAAiBzH,SAASoJ,KACxC1C,GAAQ,EACRyC,EAAaG,GAAb,OAA4BD,EAAS,cAAoBA,EAAS,cAIjE3C,GACHyC,EAAa1G,KAAK,CAChBC,QAAS1C,SAASoJ,GAClBpH,MAAOqH,EAAS,cAAoBA,EAAS,mBAOvD,IAAIpB,EAAY,GAQhB,OANAkB,EAAa3G,SAAQ,SAAAiF,GACfzH,SAAUyH,EAAE,UAAiBzH,SAAS0C,KACxCuF,EAAYjI,SAASyH,EAAE,WAIpBQ,M,MA0CX,U,uJC5zBA,IAAMtI,GAAcC,EAAQ,MAU5B,SAAS2J,GAAMC,GACX,OACI,uBAAKC,MAAQD,EAAMC,MAAQD,EAAMC,MAAQ,KAAMC,OAAO,KAAKC,QAAUH,EAAMG,QAAUH,EAAMG,QAAU,eAAgBC,MAAM,8BACvH,yBACI,wBAAMzC,GAAG,QAAQ0C,EAAE,qxBAMnC,SAASC,GAASN,GAAO,IACbO,EAAqCP,EAArCO,SAAUC,EAA2BR,EAA3BQ,MAAOC,EAAoBT,EAApBS,MAAUC,GADd,OACwBV,EADxB,8BAGrB,OACE,+BACEW,KAAK,WACLC,OAAQJ,IAAUC,EAClB9C,GAAE,0BAAqB8C,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GACP,2BACGF,IAaf,SAASO,GAAUL,GACf,MAAO,CACL9C,GAAI,cAAF,OAAgB8C,GAClB,0CAAoCA,IAQ1C,SAASM,GAASC,GACd,OAAOA,EAAKC,MAAM,KAAK,GAlB3BX,GAASY,UAAY,CACjBX,SAAUY,SACVV,MAAOU,mBACPX,MAAOW,oBAiGJ,IAAMC,GAAb,6B,IAAA,G,EAAA,E,gaAMI,WAAYpB,GAAO,4BACf,cAAMA,IADS,gCALN,IAKM,2BAJV,OAIU,8BAFP,IAEO,+BA8IP,SAACqB,EAAOC,GAChB,EAAKC,SAAS,CACVC,QAASF,OA7IbG,QAAQC,IAAK,EAAK1B,MAAM5H,MAExB,EAAKuJ,MAAQ,CACTvJ,KAAM,EAAK4H,MAAM5H,KAAO,EAAK4H,MAAM5H,KAAO,GAC1CwJ,SAAS,EACTpJ,MAAO,EACPqJ,UAAY,EAAK7B,MAAM5H,KAAqC,GAA9B4H,EAAM8B,MAAMC,OAAOhL,SACjDiL,SAAW,EAAKhC,MAAM5H,KAAqC,GAA9B4H,EAAM8B,MAAMC,OAAOC,SAChDC,MAAO,GACPC,YAAa,GACbV,QAAS,GAGR,EAAKxB,MAAM5H,MACZ/B,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAjB3B,EANvB,mDAuDI,WACIsC,KAAK8I,YAAa,IAxD1B,+BA2DI,WAAmB,WAqCf,GApCA9I,KAAK8I,YAAa,GAElBC,SAAQ,WACJ,GAAI,EAAKD,WAAY,CACjB,IAAI/J,EAAO/B,gBAAyBgH,MAAM,SAACjF,GAAD,OAAUA,EAAKiK,MAAQ,EAAKV,MAAMK,YAE5E,GAAI5J,EAAM,CACN,EAAKmJ,SAAS,CACVnJ,KAAMA,IAGe,GAArBA,EAAK9B,MAAMqD,QAAwC,IAAxBnD,SAAS4B,EAAK6B,OAAuC,IAAxBzD,SAAS4B,EAAK6B,OACtE7B,EAAK9B,MAAM2C,KAAK,CACZqJ,KAAMlK,EAAKkK,KACXC,QAASnK,EAAKmK,QACdC,IAAKpK,EAAKoK,IACVC,cAAerK,EAAKqK,cACpB/K,KAAM,KAId,EAAK6J,SAAS,CACVK,SAAS,IAGb,IAEInC,EAFUpJ,aAEUkC,QAAQ,SAACH,GAAD,OAAUA,EAAKc,SAAWd,EAAI,MAAS,GAEvE,EAAKmJ,SAAS,CACV/I,MAAOiH,EAAYA,EAAUjH,MAAQ,SAMjDa,KAAK2G,MAAM5H,KAAM,CAEjBgJ,EAAKsB,UAAU,IAAIrJ,KAAKsI,MAAME,UAAU,SAASxI,KAAKsI,MAAMK,UAAU3H,MAAM,SAAAsI,GACxE,EAAKpB,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,iBAIK,GAAhC7I,KAAKsI,MAAMvJ,KAAK9B,MAAMqD,QAAmD,IAAnCnD,SAAS6C,KAAKsI,MAAMvJ,KAAK6B,OAAkD,IAAnCzD,SAAS6C,KAAKsI,MAAMvJ,KAAK6B,OACvGZ,KAAKsI,MAAMvJ,KAAK9B,MAAM2C,KAAK,CACvBqJ,KAAMjJ,KAAKsI,MAAMvJ,KAAKkK,KACtBC,QAASlJ,KAAKsI,MAAMvJ,KAAKmK,QACzBC,IAAKnJ,KAAKsI,MAAMvJ,KAAKoK,IACrBC,cAAepJ,KAAKsI,MAAMvJ,KAAKqK,cAC/B/K,KAAM,KAId2B,KAAKkI,SAAS,CACVK,SAAS,IAGb,IACIxJ,EADU/B,aACKgH,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAX,MAEnDiB,KAAKkI,SAAS,CACV/I,MAAOJ,EAAOA,EAAKI,MAAQ,IAI9Ba,KAAK2G,MAAM5H,OACRyK,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,WApI/B,iBA0II,WACI,IAAImC,EAAQnC,UAAmBgD,KAAKsI,MAAMvJ,KAAX,IAC/BiB,KAAKkI,SAAS,CAAE/I,MAAOA,MA5I/B,mBA+II,WACI,IAAIA,EAAQnC,YAAqBgD,KAAKsI,MAAMvJ,KAAX,IACjCiB,KAAKkI,SAAS,CAAE/I,MAAOA,MAjJ/B,oBA0JI,WACI,OAAIa,KAAKsI,MAAMC,QAmBX,2BACI,gBAACsB,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACkB,EAAA,EAAD,CAAQC,QAAM,GACV,gBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,yBAAyBC,MAAO,CAAEC,YAAa,KAAMC,aAAc,OACzF,gBAACL,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,EAAGH,MAAO,CAAEE,aAAc,GAAIE,QAAS,OAAQC,WAAY,SAAUC,WAAY,KAC5F,+BACI,0BACIC,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,gBAAgB5K,KAAKsI,MAAMvJ,KAAK8L,eAC5GjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,eAAe5K,KAAKsI,MAAMvJ,KAAK8L,eACxGE,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,KACvB+L,MAAO,CAAEY,UAAW,SAIhC,gBAACf,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,EAAGH,MAAO,CAAEC,YAAa,GAAIY,SAAU,aAClD,gBAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMnL,KAAKsI,MAAMvJ,KAAKV,MACzD,gBAAC,IAAD,CAAY6M,QAAQ,KAAKf,UAAU,mBAAmBgB,UAAU,QAAQnL,KAAKsI,MAAMvJ,KAAKqM,aAExF,gBAACC,EAAA,EAAD,CAAQJ,SAAS,SAASb,MAAO,CAAEkB,gBAAiB,OAAQC,MAAO,OAAQC,OAAQ,EAAGd,WAAY,IAAMe,UAAW,GAC/G,gBAACC,EAAA,EAAD,CAAMC,aAAW,sBAAsBxB,UAAU,WAAWhD,MAAOnH,KAAKsI,MAAMH,QAASyD,SAAU5L,KAAK6L,UAAUC,KAAK9L,MAAOoK,MAAO,CAAE2B,eAAgB,WACjJ,gBAACC,GAAA,GAAD,QAAKC,MAAM,UAAaxE,GAAU,GAAlC,CAAsCyE,eAAe,KACrD,gBAACF,GAAA,GAAD,QAAKC,MAAM,oBAAuBxE,GAAU,GAA5C,CAAgDyE,eAAe,KAC1B,GAApClM,KAAKsI,MAAMvJ,KAAKoN,UAAU7L,OAAc,KACrC,gBAAC0L,GAAA,GAAD,QAAKC,MAAM,aAAgBxE,GAAU,GAArC,CAAyCyE,eAAe,OAIpE,gBAACjF,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,EAAGgD,MAAO,CAAExD,MAAO,OAAQwF,UAAW,GAAIC,aAAc,KAChG,uBAAKjC,MAAO,CAAEkC,UAAW,IAAKC,SAAU,QAAUpC,UAA2C,GAAhCnK,KAAKsI,MAAMvJ,KAAK9B,MAAMqD,OAAc,yCAA2C,0CACxI,6BACI,6BAEI,0BACI,0BAAI,gBAAC,IAAD,CAAY4K,QAAQ,KAAKf,UAAU,mBAAmBgB,UAAU,QAAhE,+BAEPnL,KAAKsI,MAAMvJ,KAAK9B,MAAM6G,KAAI,SAAC/E,EAAMwG,GAAP,OACvB,sBAAIA,IAAKA,GACL,0BACI,uBAAK4E,UAAU,eACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,OAEpD,uBAAK8L,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,UACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmK,QAAhD,OAEJ,uBAAKiB,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,SACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKoK,IAAhD,OAEJ,uBAAKgB,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,aACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqK,cAAhD,OAEJ,uBAAKe,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,oBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKkK,KAAhD,mBAShC,gBAAChC,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,EAAGgD,MAAO,CAAEgC,UAAW,GAAIC,aAAc,KAC/ErM,KAAKsI,MAAMvJ,KAAK9B,MAAMqD,OAAS,EAC7B,uBAAK8J,MAAO,CAAEkC,UAAW,IAAKE,UAAW,OAAQC,UAAW,WACvDzM,KAAKsI,MAAMvJ,KAAK9B,MAAM6G,KAAI,SAAC/E,EAAMwG,GAAP,OACvB,uBAAKA,IAAKA,EAAK6E,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOjC,WAAY,WACvE,2BAASL,MAAO,CAAEvD,OAAQ,OAAQD,MAAO,IAAK4D,QAAS,UACnD,0BACIG,OAAQ,4CAA4C5L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eACtFjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C/L,EAAK6L,QAAQ,eAAe7L,EAAK8L,eAClFE,IAAKhM,EAAKV,KACVuK,MAAO7J,EAAKV,KACZ+L,MAAO,CAAEvD,OAAQ,OAAQD,MAAO,WAGxC,uBAAKuD,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,eAAepL,EAAKV,MACxE,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,YAAYpL,EAAK4N,gBAMrF,gBAAC,IAAD,CAAYC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,YAAYnK,KAAKsI,MAAMvJ,KAAK4N,WAGrG,gBAAC1F,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,GAA5C,aAIA,uBAAKgD,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOX,eAAgB,gBAAiBd,SAAU,WAAY4B,QAAS,GAAIjG,MAAO,QAE5H,uBAAKuD,UAAU,SAAS2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OAC3C,gBAAC,IAAD,CAAYkL,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,iBAAiBC,MAAO,CAAEC,YAAa,IAAqC,GAA9BlN,SAAS6C,KAAKsI,MAAMnJ,OAAchC,SAAS6C,KAAKsI,MAAMvJ,KAAKpB,OAASR,SAAS6C,KAAKsI,MAAMvJ,KAAKpB,OAASR,SAAS6C,KAAKsI,MAAMnJ,QAC5N,gBAACuH,GAAD,CAAOI,QAAQ,cAAcF,MAAM,OAEnC,gBAACoG,EAAA,EAAD,CAA0BzB,MAAM,aAWhC,gBAAC0B,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,kBAAkBC,MAAO,CAAE+C,OAAQ,SACvH,gBAACC,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,OACzE,gBAAC,IAAD,CAAiBsN,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,gBAAgBC,MAAO,CAAEoD,SAAU,WAAaxN,KAAKsI,MAAMnJ,QAEtG,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACvE,gBAAC,IAAD,CAAiBsN,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,gBAS9E,gBAACzD,EAAA,EAAD,CAAQ2D,MAAI,GACR,gBAACzD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,yBAAyBC,MAAO,CAAEC,YAAa,KAAMC,aAAc,KAAMzD,OAAQ,UACvG,gBAACoD,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAEE,aAAc,KACtC,2BAAShG,GAAG,aACR,0BACIqG,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,gBAAgB5K,KAAKsI,MAAMvJ,KAAK8L,eAC5GjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,eAAe5K,KAAKsI,MAAMvJ,KAAK8L,eACxGE,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,KACvB+L,MAAO,CAAEvD,OAAQ,OAAQD,MAAO,OAAQ8D,WAAY,OAI5D,gBAAC,IAAD,CAAYQ,QAAQ,KAAKC,UAAU,KAAKf,MAAO,CAAEuD,UAAW,WAAa3N,KAAKsI,MAAMvJ,KAAKV,OAE7F,gBAAC4L,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAEa,SAAU,aAClC,gBAACI,EAAA,EAAD,CAAQJ,SAAS,SAASb,MAAO,CAAEkB,gBAAiB,OAAQC,MAAO,OAAQC,OAAQ,GAAKC,UAAW,GAC/F,gBAACC,EAAA,EAAD,CAAMC,aAAW,sBAAsBxB,UAAU,WAAWhD,MAAOnH,KAAKsI,MAAMH,QAASyD,SAAU5L,KAAK6L,UAAUC,KAAK9L,MAAOoK,MAAO,CAAE2B,eAAgB,WACjJ,gBAACC,GAAA,GAAD,QAAKC,MAAM,UAAaxE,GAAU,GAAlC,CAAsCyE,eAAe,KACrD,gBAACF,GAAA,GAAD,QAAKC,MAAM,oBAAuBxE,GAAU,GAA5C,CAAgDyE,eAAe,KAC1B,GAApClM,KAAKsI,MAAMvJ,KAAKoN,UAAU7L,OAAc,KACrC,gBAAC0L,GAAA,GAAD,QAAKC,MAAM,aAAgBxE,GAAU,GAArC,CAAyCyE,eAAe,OAIpE,gBAACjF,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,EAAGgD,MAAO,CAAExD,MAAO,OAAQwF,UAAW,GAAIC,aAAc,GAAIrB,UAAW,SAC/G,uBAAKZ,MAAO,CAAEkC,UAAW,OAAQzF,OAAQ,OAAQ0F,SAAU,QAAUpC,UAA2C,GAAhCnK,KAAKsI,MAAMvJ,KAAK9B,MAAMqD,OAAc,yCAA2C,0CAC3J,6BACI,6BAEMN,KAAKsI,MAAMvJ,KAAKqM,YAAY9K,OAAS,EACnC,0BACI,0BAAI,gBAAC,IAAD,CAAY4K,QAAQ,KAAKf,UAAU,mBAAmBgB,UAAU,QAAhE,QAA6EnL,KAAKsI,MAAMvJ,KAAKqM,eAGrG,KAIJ,0BACI,0BAAI,gBAAC,IAAD,CAAYF,QAAQ,KAAKf,UAAU,mBAAmBgB,UAAU,QAAhE,+BAEPnL,KAAKsI,MAAMvJ,KAAK9B,MAAM6G,KAAI,SAAC/E,EAAMwG,GAAP,OACvB,sBAAIA,IAAKA,GACL,0BACI,uBAAK4E,UAAU,eACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,OAEpD,uBAAK8L,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,UACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmK,QAAhD,OAEJ,uBAAKiB,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,SACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKoK,IAAhD,OAEJ,uBAAKgB,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,aACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqK,cAAhD,OAEJ,uBAAKe,UAAU,gBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,oBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKkK,KAAhD,mBAShC,gBAAChC,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,EAAGgD,MAAO,CAAEgC,UAAW,GAAIC,aAAc,GAAIrB,UAAW,SAC9FhL,KAAKsI,MAAMvJ,KAAK9B,MAAMqD,OAAS,EAC7B,uBAAK8J,MAAO,CAAEkC,UAAW,OAAQzF,OAAQ,OAAQ2F,UAAW,OAAQC,UAAW,WAC1EzM,KAAKsI,MAAMvJ,KAAK9B,MAAM6G,KAAI,SAAC/E,EAAMwG,GAAP,OACvB,uBAAKA,IAAKA,EAAK6E,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOjC,WAAY,WACvE,2BAASL,MAAO,CAAEvD,OAAQ,OAAQD,MAAO,GAAI4D,QAAS,UAClD,0BACIG,OAAQ,4CAA4C5L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eACtFjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C/L,EAAK6L,QAAQ,eAAe7L,EAAK8L,eAClFE,IAAKhM,EAAKV,KACVuK,MAAO7J,EAAKV,KACZ+L,MAAO,CAAEvD,OAAQ,OAAQD,MAAO,WAGxC,uBAAKuD,UAAU,eAAeC,MAAO,CAAExD,MAAO,OAAQ2F,SAAU,SAAUqB,SAAU,OAAQtD,aAAc,KACtG,gBAAC,IAAD,CAAYY,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,cAAcC,MAAO,CAAExD,MAAO,SAAW7H,EAAKV,MAClG,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,WAAWC,MAAO,CAAExD,MAAO,OAAQiH,SAAU,WAAa9O,EAAK4N,gBAMnI,uBAAKvC,MAAO,CAAEkC,UAAW,OAAQzF,OAAQ,OAAQ0F,SAAU,SACvD,gBAAC,IAAD,CAAYK,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,YAAYnK,KAAKsI,MAAMvJ,KAAK4N,YAIzG,gBAAC1F,GAAD,CAAUE,MAAOnH,KAAKsI,MAAMH,QAASf,MAAO,GAA5C,aAIA,uBAAKgD,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOX,eAAgB,kBACjE,uBAAK5B,UAAU,SAAS2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OAC3C,gBAAC,IAAD,CAAYkL,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,iBAAiBC,MAAO,CAAEC,YAAa,IAAqC,GAA9BlN,SAAS6C,KAAKsI,MAAMnJ,OAAchC,SAAS6C,KAAKsI,MAAMvJ,KAAKpB,OAASR,SAAS6C,KAAKsI,MAAMvJ,KAAKpB,OAASR,SAAS6C,KAAKsI,MAAMnJ,QAC5N,gBAACuH,GAAD,CAAOI,QAAQ,cAAcF,MAAM,OAEnC,gBAACoG,EAAA,EAAD,CAA0BzB,MAAM,aAUhC,gBAAC0B,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,kBAAkBC,MAAO,CAAE+C,OAAQ,SACvH,gBAACC,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,OACzE,gBAAC,IAAD,CAAiBsN,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBnK,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACvE,gBAAC,IAAD,CAAiBsN,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,iBA9R9E,gBAACvD,EAAA,EAAD,CAAMC,WAAS,EAAC4D,QAAS,EAAG3D,UAAU,0BAClC,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAEI,QAAS,OAAQuB,eAAgB,WACzD,uBAAK3B,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,cAE3D,gBAACrB,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GACX,uBAAKH,MAAO,CAAExD,MAAO,IAAKC,OAAQ,IAAKyE,gBAAiB,cAE5D,gBAACrB,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GACX,uBAAKH,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,aACvD,uBAAKlB,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,aACvD,uBAAKlB,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,kBAvK/E,wBA2BI,SAAiByC,GACb,IAnHUpG,EAmHN2B,EAAO,CACP1I,KAAM,gBACNC,SArHM8G,EAqHYoG,EApHnBpG,EAAKC,MAAM,KAAK,IAqHf7I,KAAM2I,GAASqG,GACfxE,KAAM,QAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAnDxB,GAA0BC,a,ybC9I1B,IAAIC,GAAWC,KACXC,GAAWD,KACTxR,GAAcC,EAAQ,MAsB5ByR,QAAe,CAACC,IAAYC,IAAYC,IAAMC,M,IAGxCC,G,qCAGF,WAAYlI,GAAO,4BACf,cAAMA,IADS,2BAFV,MAKL,EAAK2B,MAAQ,CACTgB,KAAM,EAAK3C,MAAM2C,KACjB1I,KAAM,EAAK+F,MAAM/F,MALN,E,gDASnB,WAAoB,MAChBZ,KAAK8O,OAAS,IAAIC,IAAO,qBAAX,GACVC,YAAY,EACZC,MAAM,EACNC,sBAAsB,EACtBC,gBAAgB,EAChBC,YAAY,EACZC,aAAc,IACdC,gBAAgB,EAChBC,eAAevP,KAAKsI,MAAM1H,KAAe,GAEzC4O,UAAU,IAVA,oBAWA,CACNC,MAAO,OAZD,uBAeEzP,KAAKsI,MAAM1H,MAAe,KAf5B,sBAgBqB,MAAnBZ,KAAKsI,MAAM1H,KAAe,CAClCgE,GAAI,qBACJ8K,WAAW,EACX9O,KAAM,UACN+O,aAAc,SAAUvI,EAAO+C,GAC3B,MAAO,gBAAkBA,EAAY,MAAQ/C,EAAQ,GAAK,YAE9D,KAvBM,sBAwBqB,MAAnBpH,KAAKsI,MAAM1H,KAAe,CAClCgP,OAAQ,sBACRC,OAAQ,uBACR,IA3BM,M,kBA+BlB,WACI7P,KAAK8O,OAAOgB,c,kBAGhB,WACI9P,KAAK8O,OAAOiB,c,oBAGhB,WACI,OACI,uBAAK5F,UAAW,2BAA2BnK,KAAKsI,MAAM1H,KAAK,SACvD,uBAAKuJ,UAAU,uBACVnK,KAAKsI,MAAMgB,KAAKxF,KAAI,SAAC/E,EAAMwG,GAAP,OACjB,uBAAK4E,UAAW,qBAAqB5E,EAAKA,IAAKA,GAC1CxG,OAKO,MAAnBiB,KAAKsI,MAAM1H,KACR,gCACI,uBAAKuJ,UAAU,sBACf,uBAAKA,UAAU,qBAAqB2C,QAAS9M,KAAKgQ,KAAKlE,KAAK9L,QAC5D,uBAAKmK,UAAU,qBAAqB2C,QAAS9M,KAAKiQ,KAAKnE,KAAK9L,SAGhE,U,GAtEYoO,aA6EhC,SAAS1H,GAAMC,GACX,OACI,uBAAKC,MAAQD,EAAMC,MAAQD,EAAMC,MAAQ,KAAMC,OAAO,KAAKC,QAAUH,EAAMG,QAAUH,EAAMG,QAAU,eAAgBC,MAAM,8BACvH,yBACI,wBAAMzC,GAAG,QAAQ0C,EAAE,qxBAMnC,IAAMkJ,GAAkB,SAACC,GAAD,OAAOA,EAAEC,kBAQ3BC,G,qCAGF,WAAY1J,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTvJ,KAAM,EAAK4H,MAAM2C,KACjBnK,MAAO,GALI,E,gDASnB,WAAmB,WACfa,KAAK8I,YAAa,EAClB,IAEI/J,EAFU/B,aAEKgH,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAX,MAE/CA,GACAiB,KAAKkI,SAAS,CACZ/I,MAAOJ,EAAKI,SAIlB4J,SAAQ,WACJ,GAAI,EAAKD,WAAY,CACjB,IACI/J,EADU/B,aACKgH,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAX,MAE/CA,EACA,EAAKmJ,SAAS,CACZ/I,MAAOJ,EAAKI,QAGd,EAAK+I,SAAS,CACZ/I,MAAO,U,kCAOzB,WACIa,KAAK8I,YAAa,I,iBAGtB,WACO9I,KAAK8I,YACJ9L,UAAmBgD,KAAKsI,MAAMvJ,KAAX,M,mBAI3B,WACOiB,KAAK8I,YACJ9L,YAAqBgD,KAAKsI,MAAMvJ,KAAX,M,mCAI7B,SAAsBuR,EAAWC,GAC7B,OACIvQ,KAAKsI,MAAMnJ,QAAUoR,EAAUpR,OAC/Ba,KAAKsI,MAAMvJ,KAAKpB,QAAU4S,EAAUxR,KAAKpB,Q,oBAIjD,WAAS,WAIL,MAAuB,MAAnBqC,KAAK2G,MAAM/F,KAEP,gBAAC4P,EAAA,EAAD,CAAM/E,UAAW,EAAGtB,UAAU,YAE1B,gBAACsG,EAAA,EAAD,CAAarG,MAAO,CAAEsG,OAAQ,UAAWzF,SAAU,YAAc6B,QAAU,kBAAM,EAAKnG,MAAMgK,SAAS,EAAKrI,MAAMvJ,KAAKuF,MACjH,+BACI,0BACIqG,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,gBAAgB5K,KAAKsI,MAAMvJ,KAAK8L,eAC5GjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,eAAe5K,KAAKsI,MAAMvJ,KAAK8L,eACxGE,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,KACvB+L,MAAO,CAAEY,UAAW,QAIU,GAApC7N,SAAS6C,KAAKsI,MAAMvJ,KAAK6R,QAAe,KACtC,uBACI9F,IAAI,qBACJV,MAAO,CAAEa,SAAU,WAAYrE,MAAO,GAAIiK,IAAK,EAAGC,MAAO,KAIjE,gBAACL,EAAA,EAAD,CAAarG,MAAO,CAAE2G,QAAS,QAASC,cAAe,EAAGtG,WAAY,IAClE,gBAAC,IAAD,CAAYP,UAAU,eAAeyC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMvJ,KAAKV,MACjG,gBAAC,IAAD,CAAYuO,cAAY,EAACzC,UAAU,kBAAkBgB,UAAU,KAAKnL,KAAKsI,MAAMvJ,KAAKqM,aACpF,gBAAC,IAAD,CAAYjB,UAAU,eAAegB,UAAU,KAAKnL,KAAKsI,MAAMvJ,KAAK4N,YAI5E,gBAACsE,EAAA,EAAD,CAAa9G,UAAU,cACnB,uBAAKC,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOX,eAAgB,gBAAiBmF,WAAY,EAAGtK,MAAO,SACxG,2BAAK,gBAAC,IAAD,CAAYuD,UAAU,gBAAgBe,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMvJ,KAAKpB,MAArF,IAA4F,gBAAC,GAAD,QAC5E,GAApBqC,KAAKsI,MAAMnJ,MACR,gBAAC8N,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,qBACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,wCAAwC2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACjG,gBAACgN,EAAA,EAAD,CAA0BzB,MAAM,aAEpC,gBAAC6B,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,qCAAqC2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OAAlG,cAGJ,gBAACiN,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,mBACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,OACzE,gBAAC,IAAD,CAAiBsN,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYA,UAAU,gBAAgBgB,UAAU,QAAQnL,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACvE,gBAAC,IAAD,CAAiBsN,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,eAa3D,UAAnBxN,KAAK2G,MAAM/F,KAEP,gBAACqJ,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAACK,GAAI,GAAIJ,UAAU,mBACnC,gBAACF,EAAA,EAAD,CAAMG,MAAO,CAAEa,SAAU,YAAclM,MAAI,EAACwL,GAAI,EAAG4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGvE,QAAU,kBAAM,EAAKnG,MAAMgK,SAAS,EAAKrI,MAAMvJ,KAAKuF,MACxH,+BACI,0BACIqG,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,gBAAgB5K,KAAKsI,MAAMvJ,KAAK8L,eAC5GjK,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAK6L,QAAQ,eAAe5K,KAAKsI,MAAMvJ,KAAK8L,eACxGE,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,QAIO,GAApClB,SAAS6C,KAAKsI,MAAMvJ,KAAK6R,QAAe,KACtC,uBACI9F,IAAI,qBACJV,MAAO,CAAEa,SAAU,WAAYrE,MAAO,GAAIiK,IAAK,EAAGC,MAAO,MAIrE,gBAAC7G,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,EAAG4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGlH,UAAU,aAC7C,gBAAC,IAAD,CAAYA,UAAU,eAAeyC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAO2B,QAAU,kBAAM,EAAKnG,MAAMgK,SAAS,EAAKrI,MAAMvJ,KAAKuF,MAAMtE,KAAKsI,MAAMvJ,KAAKV,MAC1J,gBAAC,IAAD,CAAY8L,UAAU,eAAegB,UAAU,IAAI2B,QAAU,kBAAM,EAAKnG,MAAMgK,SAAS,EAAKrI,MAAMvJ,KAAKuF,MAAMtE,KAAKsI,MAAMvJ,KAAK4N,UAC7H,2BACI,gBAAC,IAAD,CAAYC,cAAY,EAACzC,UAAU,gBAAgBe,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMvJ,KAAKpB,MAAlG,IAAyG,gBAAC,GAAD,CAAOiJ,MAAM,KAAKE,QAAQ,sBAC9G,GAApB9G,KAAKsI,MAAMnJ,MACR,gBAAC8N,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,aACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACtF,gBAACgN,EAAA,EAAD,CAA0BzB,MAAM,cAIxC,gBAAC0B,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,mBACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,OACzE,gBAAC,IAAD,CAAiBsN,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYA,UAAU,gBAAgBgB,UAAU,QAAQnL,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,OACvE,gBAAC,IAAD,CAAiBsN,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,oBA3ClF,M,GArIeY,aA6LjBkD,GAAalD,cAAiB,SAAoBzH,EAAO4K,GAC3D,OAAO,gBAACC,EAAA,GAAD,QAAOC,UAAU,KAAKF,IAAKA,GAAS5K,OAGlC+K,GAAb,qCAGI,WAAY/K,GAAO,4BACf,cAAMA,IADS,8BAFP,IAEO,uCAgDC,WACM,oBAAX1I,SACPkC,YAAW,WACP,GAAIjC,aAAaqB,QAAQ,QAAS,CAC9B,IAAIoS,EAAOzT,aAAaqB,QAAQ,QAEhCrB,aAAaoD,WAAW,QAExBnB,YAAW,WACPoO,GAAS3E,SAAS,oBAAqB,CACnCgI,SAAU,IACVnC,MAAO,IACPoC,OAAQ,iBACRC,OAAQtI,SAASuI,eAAe,MAAMJ,GAAMK,wBAApC,EAAmE,OAEhF,QAIR,KAEH7R,YAAW,WACP,IAAIwR,EAAO1T,OAAOgU,SAASN,KAE3B,GAAIA,EAAKrR,OAAS,EAAG,CACjB,IAAI4R,EAASP,EAAK/J,MAAM,UAAU,GAE9B3J,OAAOkU,YAAc,IACrB,EAAKxB,SAASuB,GAEd,EAAKE,WAAWF,GAGpB,EAAKvL,MAAM0L,QAAQC,QAAQ,CAAEC,SAAUtU,OAAOgU,SAASM,cAE5D,OAGPb,EAAKrI,UAAU,IAAI,EAAKf,MAAME,WAAWxH,MAAM,SAAAsI,GAC3C,EAAKpB,SAAU,CACXqB,KAAMD,EAAKC,KACXX,MAAOU,EAAKV,MACZC,YAAaS,EAAKT,iBAI1B7L,UAAmB,QAEuB,GAAtCA,mBAA4BsD,QAC5B,EAAK4H,SAAS,CACV5I,SAAUtC,qBAKdiB,OAAO2L,SAAS,EAAG,IAGvBb,SAAQ,WACJ,EAAKb,SAAS,CACV5I,SAAUtC,qBAGd,IAAIwV,EAAa,GACbC,EAAiB,GAErBzV,eAAwB8G,KAAI,SAAC/E,EAAMwG,GAC3BxG,EAAK2T,UAAYvV,SAAS4B,EAAK2T,UAAY,GAC3CF,EAAW5S,KACP,gBAAC,KAAD,CACI+S,GAAI,IAAI3V,YAAqB,aAAa+B,EAAK2T,SAC/CE,OAAQ,EACRxI,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQgM,aAAc,KAEzD,2BAASzI,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,kBAAkB7L,EAAK8L,eAC7FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAGzFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQmE,UAAW,IAAK6H,aAAc,IACzEC,YAAa5C,QAM7BuC,EAAe7S,KACX,gBAAC,KAAD,CACI+S,GAAI,IAAI3V,YAAqB,aAAa+B,EAAK2T,SAC/CE,OAAQ,EACRxI,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQgM,aAAc,KAEzD,2BAASzI,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAC5FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eAGxFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQgM,aAAc,IACzDC,YAAa5C,SAOzBnR,EAAKA,MAAQ5B,SAAS4B,EAAKA,MAAQ,GACnCyT,EAAW5S,KACP,2BAASwK,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,kBAAkB7L,EAAK8L,eAC7FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAGzFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQmE,UAAW,IAAK6H,aAAc,IACzEC,YAAa5C,GACbpD,QAAS,EAAKsF,WAAWtG,MAAhB,UAA2B/M,EAAKA,UAKrD0T,EAAe7S,KACX,2BAASwK,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAC5FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eAGxFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQgM,aAAc,IACzDC,YAAa5C,GACbpD,QAAS,EAAK6D,SAAS7E,MAAd,UAAyB/M,EAAKA,YAKnDyT,EAAW5S,KACP,2BAASwK,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,kBAAkB7L,EAAK8L,eAC7FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAGzFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQmE,UAAW,IAAK6H,aAAc,IACzEC,YAAa5C,OAKzBuC,EAAe7S,KACX,2BAASwK,MAAO,CAAExD,MAAO,UAAWC,OAAQ,SACxC,0BACI8D,OAAQ,iDAAiD5L,EAAK6L,QAAQ,iBAAiB7L,EAAK8L,eAC5FjK,KAAK,eAET,uBACIkK,IAAK,iDAAiD/L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eAGxFT,MAAO,CAAExD,MAAO,UAAWC,OAAQ,OAAQgM,aAAc,IACzDC,YAAa5C,WAQrC,EAAKhI,SAAS,CACVsK,WAAYA,EACZC,eAAgBA,UAtOxB,EAAKnK,MAAQ,CACThJ,SAAU,GACViJ,SAAS,EACTwK,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCpC,SAAU,KACVqC,WAAW,EACXC,aAAa,EACbT,WAAY,GACZC,eAAgB,GAChBjK,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9B6L,KAAM,KACNX,MAAO,GACPC,YAAa,IAGjB7L,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAlBvB,EAHvB,uCAiPI,SAAS4G,GAAG,WAEJvF,EADW/B,gBACKgH,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMA,KAE/CtE,KAAKkI,SAAS,CACVyI,SAAU5R,EACViU,WAAW,IAGf7S,YAAW,WACP,IAAIyE,EAAK4E,SAASuI,eAAe,aACjCnN,EAAGsO,iBAAiB,aAAc,EAAKC,WAAWrH,KAAK,IAAO,GAC9DlH,EAAGsO,iBAAiB,WAAY,EAAKE,SAAStH,KAAK,IAAO,KAC3D,OA9PX,wBAiQI,SAAWxH,GACP,IACIvF,EADW/B,gBACKgH,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMA,KAE/CtE,KAAKkI,SAAS,CACVyI,SAAU5R,EACVkU,aAAa,MAvQzB,uBA2QI,WACIjT,KAAKkI,SAAS,CACV8K,WAAW,MA7QvB,yBAiRI,WACI,IAAIpO,EAAK4E,SAASuI,eAAe,aACjCnN,EAAGyO,oBAAoB,aAAcrT,KAAKmT,WAAWrH,KAAK9L,OAAO,GACjE4E,EAAGyO,oBAAoB,WAAYrT,KAAKoT,SAAStH,KAAK9L,OAAO,GAE7DA,KAAKkI,SAAS,CACV8K,WAAW,EACXrC,SAAU,SAxRtB,2BA4RI,WACI3Q,KAAKkI,SAAS,CACV+K,aAAa,EACbtC,SAAU,SA/RtB,wBAmSI,SAAW/L,GACP5E,KAAKsT,UAAY1O,EAAE,eAAmB,GAAG2O,QApSjD,sBAuSI,SAAS3O,GACDA,EAAE,eAAmB,GAAG2O,MAAQvT,KAAKsT,UAAY,KACjDtT,KAAKwT,gBAzSjB,oBA6SI,WAAS,WACL,OAA0C,GAAtCxW,mBAA4BsD,OAExB,gBAAC+N,GAAD,CAAShQ,KAAK,oBAAoB8L,UAAU,YAExC,gBAACJ,EAAA,EAAD,CAAQC,QAAM,GACV,uBAAKI,MAAO,CAAExD,MAAO,SAAUsK,WAAY,QAAS2B,aAAc,GAAIhM,OAAQ,IAAKuF,UAAW,GAAIC,aAAc,GAAIf,gBAAiB,wBAErI,2BACI,gBAACrB,EAAA,EAAD,CAAMC,WAAS,EAAC4D,QAAS,EAAG1D,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,WAAYC,cAAe,GAAIpD,SAAU,OAAQhH,MAAO,QAAUuD,UAAU,2BAChInK,KAAKsI,MAAMyK,SAASjP,KAAI,SAAC4P,EAAIjN,GAAL,OACrB,gBAACwD,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAI4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG9L,IAAKkB,EAAG2D,MAAO,CAAE2G,QAAS,aAC9D,gBAAChH,EAAA,EAAD,CAAQC,QAAM,GACV,uBAAKI,MAAO,CAAExD,MAAO,IAAKC,OAAQ,IAAKyE,gBAAiB,UAAWe,aAAc,MACjF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,OAEpF,gBAACtC,EAAA,EAAD,CAAQ2D,MAAI,GACR,uBAAKtD,MAAO,CAAExD,MAAO,SAAUsK,WAAY,GAAIrK,OAAQ,IAAKwF,aAAc,GAAIf,gBAAiB,aAC/F,uBAAKlB,MAAO,CAAE8G,WAAY,KACtB,uBAAK9G,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,MAChF,uBAAKjC,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIyE,gBAAiB,UAAWe,aAAc,eAS5G,gBAACtC,EAAA,EAAD,CAAQ2D,MAAI,GACR,gBAACiG,EAAA,EAAD,CAAUvJ,MAAO,CAAEoB,OAAQ,EAAGD,MAAO,QAAUqI,MAAM,GACjD,gBAACC,EAAA,EAAD,CAAkBtI,MAAM,eAQxC,gBAAC8C,GAAD,CAAShQ,KAAK,oBAAoB8L,UAAU,YAExC,gBAACN,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACkB,EAAA,EAAD,CAAQC,QAAM,GACwB,GAAhChK,KAAKsI,MAAMkK,WAAWlS,OAAc,KAClC,gBAACuO,GAAD,CACIjO,KAAK,KACL0I,KAAMtJ,KAAKsI,MAAMkK,cAI7B,gBAACzI,EAAA,EAAD,CAAQ2D,MAAI,GAC8B,GAApC1N,KAAKsI,MAAMmK,eAAenS,OAAc,KACtC,gBAACuO,GAAD,CACIjO,KAAK,SACL0I,KAAMtJ,KAAKsI,MAAMmK,kBAK5BzV,mBAA4B8G,KAAI,SAACgQ,EAAKvO,GAAN,OAC7B,uBAAKA,IAAKA,EAAKlH,KAAM,MAAMyV,EAAIxP,GAAIA,GAAI,MAAMwP,EAAIxP,IAC7C,gBAAC2F,EAAA,EAAD,CAAMC,WAAS,EAAC4D,QAAS,EAAG1D,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,WAAYnD,SAAU,OAAQhH,MAAO,OAAQoK,cAAe,IAAM7G,UAAU,2BACjI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,MAAO2I,EAAIzV,OAElD,gBAAC4L,EAAA,EAAD,CAAMC,WAAS,EAAC4D,QAAS,EAAG1D,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,WAAYC,cAAe,GAAIpD,SAAU,OAAQhH,MAAO,QAAUuD,UAAU,2BAChI2J,EAAI7W,MAAM6G,KAAI,SAAC4P,EAAIjN,GAAL,OACX,gBAACwD,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAI4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG9L,IAAKkB,EAAG2D,MAAO,CAAE2G,QAAS,WAAYvG,QAAS,SACnF,gBAACT,EAAA,EAAD,CAAQC,QAAM,GACV,gBAACqG,GAAD,CAAU/G,KAAMoK,EAAI9S,KAAM,KAAM+P,SAAU,EAAKyB,WAAWtG,KAAK,MAEnE,gBAAC/B,EAAA,EAAD,CAAQ2D,MAAI,GACR,gBAAC2C,GAAD,CAAU/G,KAAMoK,EAAI9S,KAAM,SAAU+P,SAAU,EAAKA,SAAS7E,KAAK,eAQxF9L,KAAKsI,MAAMqI,SACR,gBAACoD,EAAA,EAAD,CAAQC,YAAU,EAACJ,KAAM5T,KAAKsI,MAAM0K,UAAW7I,UAAU,aAAa8J,QAASjU,KAAKwT,YAAY1H,KAAK9L,MAAOkU,oBAAqB5C,IAC7H,gBAAC,IAAD,CAAgB6C,mBAAiB,EAAC/J,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,IAC3D,gBAAC,IAAD,CAAYpF,aAAW,QAAQvB,MAAO,CAAEa,SAAU,WAAY4F,IAAK,EAAGC,MAAO,GAAKhE,QAAS9M,KAAKwT,YAAY1H,KAAK9L,OAC7G,gBAAC,IAAD,CAAiBsN,KAAM8G,MAAShK,MAAO,CAAEoD,SAAU,SAAUjC,MAAO,eAG5E,2BACI,gBAACxD,GAAD,CAAMsM,OAAQrU,KAAKsI,MAAMqI,SAASrM,GAAIvF,KAAMiB,KAAKsI,MAAMqI,aAI/D,KAGH3Q,KAAKsI,MAAMqI,SACR,gBAACoD,EAAA,EAAD,CAAQO,SAAU,KAAMC,WAAW,EAAMnK,MAAO,CAAEyI,aAAc,IAAMoB,QAASjU,KAAKwU,cAAc1I,KAAK9L,MAAOmK,UAAU,kBAAkByJ,KAAM5T,KAAKsI,MAAM2K,aACvJ,gBAAC,IAAD,CAAgBkB,mBAAiB,EAAC/J,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,IAC3D,gBAAC,IAAD,CAAYpF,aAAW,QAAQvB,MAAO,CAAEa,SAAU,WAAY4F,IAAK,EAAGC,MAAO,IAAMhE,QAAS9M,KAAKwU,cAAc1I,KAAK9L,OAChH,gBAAC,IAAD,CAAiBsN,KAAM8G,MAAShK,MAAO,CAAEoD,SAAU,SAAUjC,MAAO,eAI5E,gBAAC,IAAD,CAAkBpB,UAAU,qBACxB,gBAACpC,GAAD,CAAMsM,OAAQrU,KAAKsI,MAAMqI,SAASrM,GAAIvF,KAAMiB,KAAKsI,MAAMqI,aAI/D,SAjapB,wBAwBI,SAAiB5C,GACb,IAhOUpG,EAgON2B,EAAO,CACP1I,KAAM,gBACNC,SAlOM8G,EAkOYoG,EAjOnBpG,EAAKC,MAAM,KAAK,IAkOf2B,KAAM,IAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UA/CxB,GAA0BC,a,sDCzT1B,IAAMtR,GAAcC,EAAQ,MAE5B,SAAS0X,GAAqB9N,GAAO,MACDyH,YAAe,GADd,gBAC1BsG,EAD0B,KAChBC,EADgB,KAO3BC,EAASjO,EAAMiO,OAErB,OACI,uBAAKzK,UAAU,aACVyK,EAAO9Q,KAAI,SAAC/E,EAAMwG,GAAP,OACR,gBAACsP,GAAA,EAAD,CAAWtP,IAAKA,EAAKmP,SAAUA,IAAa,QAAQnP,EAAKqG,UAT/CkJ,EASsE,QAAQvP,EATpE,SAACyC,EAAO+M,GACpCJ,IAAYI,GAAaD,MASb,gBAACE,GAAA,EAAD,CACIC,WAAY,gBAACC,GAAA,EAAD,MACZC,gBAAe,QAAQ5P,EAAI,aAC3BjB,GAAI,QAAQiB,EAAI,aAEhB,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqW,MAAhD,KAAyDrW,EAAKsW,OAElE,gBAACC,GAAA,EAAD,CAAkBnL,UAAU,gBAAgBC,MAAO,CAAEsC,cAAe,SAAUqE,QAAS,IACnF,2BACI,gBAAC,IAAD,CAAY7F,QAAQ,KAAKC,UAAU,KAAnC,0BACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKwW,eAEpD,2BACI,gBAAC,IAAD,CAAYrK,QAAQ,KAAKC,UAAU,KAAnC,eACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKyW,IAAhD,MAAwDzW,EAAK0W,MAEjE,2BACI,gBAAC,IAAD,CAAYvK,QAAQ,KAAKC,UAAU,KAAnC,UACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAK2W,OAEpD,2BACI,gBAAC,IAAD,CAAYxK,QAAQ,KAAKC,UAAU,KAAnC,uBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAK4W,YAEpD,2BACI,gBAAC,IAAD,CAAYzK,QAAQ,KAAKC,UAAU,KAAnC,aACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAK6W,UApCnD,IAACd,MAiDnB,IAAMe,GAAb,6B,IAAA,G,EAAA,E,gaACI,WAAYlP,GAAO,4BACf,cAAMA,IADS,uCAwBC,WACZ6C,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,WAEnB,EAAK8Y,wBAELD,EAAQxM,UAAU,IAAI,EAAKf,MAAME,WAAWxH,MAAM,SAAAsI,GAC9C,EAAKpB,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,iBAI/BrI,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,oBACNC,QAAS,EAAKyH,MAAME,cAEzBxH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,IAAI6U,EAAc,GAElB7U,EAAK4C,KAAI,SAASkS,GACvBA,EAAK,YAAgB1V,OAAS,GAChCyV,EAAYnW,KAAMvC,KAAKoC,MAAMuW,EAAK,iBAI3B,IAAIC,EAAa,GACbpS,GAAQ,EAEZ3C,EAAK4C,KAAI,SAASkS,GACdnS,GAAQ,EAERoS,EAAWnS,KAAI,SAASoS,GAChB/Y,SAAS+Y,EAAU5R,KAAOnH,SAAS6Y,EAAM1R,MACzCT,GAAQ,MAIXA,GACDoS,EAAWrW,KAAKoW,MAIxB,EAAK9N,SAAS,CACV0M,OAAQ1T,EACR+U,WAAYA,EACZ1N,SAAS,IAGbpI,YAAW,WACP,EAAKgW,QAAQjV,EAAM6U,KACpB,QA1CP,OA6CO,SAAAK,UAlFP,EAAK9N,MAAQ,CACTsM,OAAQ,GACRqB,WAAY,GAEZrN,MAAO,GACPC,YAAa,GAEbL,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9B6K,SAAS,GAGbvL,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAdvB,EADvB,oDAkBI,WACI,IAAI2Y,EAAS7M,SAAS8M,cAAc,UACpCD,EAAOvL,IAAM,yFAEbtB,SAAS+M,KAAKC,YAAYH,KAtBlC,qBAoHI,SAAQzB,EAAQmB,GACZ,IAAIU,EAEJC,MAAMC,OAAM,WACRF,EAAS,IAAIC,MAAME,IAAI,SAAU,CACzCC,OAAQ,CAAEjC,EAAO,GAAP,uBAAwCA,EAAO,GAAP,yBAClDkC,KAAM,OAGP,IAAIC,EAAaL,MAAMM,sBAAsBC,YAChC,mGAMJlB,EAAYjS,KAAI,SAACoT,EAAM3R,GACnBkR,EAAOU,WAAWpK,IACd,IAAI2J,MAAMU,QAAQ,CAACF,GAAO,CAEtBG,QAASzC,EAAQrP,GAAR,MACtB,CACa+R,WAAYP,EAC3BQ,UAAW,sBACXC,YAAa,kBACbC,YAAa,QAKnB7C,EAAO9Q,KAAI,SAASkS,GACnBS,EAAOU,WAAWpK,IACF,IAAI2J,MAAMgB,UAAW,CAAC1B,EAAK,SAAL,SAA+BA,EAAK,SAAL,WAAiC,CAGlFqB,QAASrB,EAAK,MACf,CACCsB,WAAYP,EAC3BY,WAAY,gBAEGC,cAAe,gCAC9BC,cAAe,CAAC,GAAI,IACpBC,gBAAiB,EAAE,IAAK,IACxBC,kBAAmB,CAAC,GAAI,eA/JjC,oBAsKI,WACI,OACI,gBAAC9N,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,8CAEtB,gBAACN,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAnC,aAEJ,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGC,GAAI,EAAGF,GAAI,GAAI5G,GAAI,GAAIJ,UAAU,iBACrDnK,KAAKsI,MAAMsM,OAAO,GACf,gBAAC,IAAD,CAAY1J,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,OAApD,uBAA+EnK,KAAKsI,MAAMsM,OAAO,GAAG1X,QAApG,SAEA,KAEJ,gBAAC,IAAD,CAAYgO,QAAQ,KAAKC,UAAU,MAAnC,gBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,OAApD,uCACA,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,MAAnC,2BACCnL,KAAKsI,MAAMsM,OAAO,GACf,gBAAC,IAAD,CAAY1J,QAAQ,KAAKC,UAAU,IAAIhB,UAAU,MAAM8N,KAAM,OAAOjY,KAAKsI,MAAMsM,OAAO,GAAGsD,WAAYlY,KAAKsI,MAAMsM,OAAO,GAAGgB,OAE1H,KAEJ,gBAAC,IAAD,CAAY1K,QAAQ,KAAKC,UAAU,MAAnC,gBACA,gBAACsJ,GAAD,CAAsBG,OAAQ5U,KAAKsI,MAAM2N,cAE7C,gBAAChM,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGC,GAAI,EAAGF,GAAI,GAAI5G,GAAI,GAAIjG,GAAG,UAC/C,uBAAK8F,MAAO,CAAExD,MAAO,OAAQC,OAAQ,OAAQsR,YAAa,GAAI7M,gBAAiB,kBApMnG,wBAyFI,SAAiByC,GACb,IA9FUpG,EA8FN2B,EAAO,CACP1I,KAAM,gBACNC,SAhGM8G,EAgGYoG,EA/FnBpG,EAAKC,MAAM,KAAK,IAgGf2B,KAAM,YAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAhHxB,GAA6BC,a,sBC7C7B,IAAMtR,GAAcC,EAAQ,MAMfqb,GAAb,6B,IAAA,G,EAAA,E,gaACI,WAAYzR,GAAO,4BACf,cAAMA,IADS,uCAgDC,WACZ6C,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,SAEnBob,EAAM/O,UAAU,IAAI,EAAKf,MAAME,WAAWxH,MAAM,SAAAsI,GAC5C,EAAKpB,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,iBAI/BrI,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,mBACNC,QAAS,EAAKyH,MAAME,cAEzBxH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE5B,EAAKgH,SAAS,CACVmQ,MAAOnX,EAAKmX,MACZ9P,SAAS,IAGbpI,YAAW,WACP,IAAIwR,EAAO1T,OAAOgU,SAASN,KAE3B,GAAIA,EAAKrR,OAAS,EAAG,CACjB,IAAI4R,EAASP,EAAK/J,MAAM,QAAQ,GAE5B1D,EAAYhD,EAAKmX,MAAMrU,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAM4N,KAEtD,EAAKoG,WAAWpU,GAEhB,EAAKyC,MAAM0L,QAAQC,QAAQ,CAAEC,SAAUtU,OAAOgU,SAASM,cAE5D,QA3BP,OA6BO,SAAA6D,UAxFP,EAAK9N,MAAQ,CACT+P,MAAO,GACPE,UAAW,CAAC,EAAG,EAAG,EAAG,GACrBhQ,SAAS,EACTiQ,SAAU,KACVF,YAAY,EACZ1P,MAAO,GACPC,YAAa,GACbL,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAE9B+a,SAAS,EACTC,WAAW,EACXC,QAAS,IAGb3b,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAlBvB,EADvB,0CA+FI,WACIsC,KAAKkI,SAAS,CACVsQ,SAAU,KACVF,YAAY,MAlGxB,wBAsGI,SAAWvZ,GAEP,IAAIO,EAAWtC,gBAEf+B,EAAK9B,MAAM6G,KAAI,SAAC8U,EAAUrT,GACtBxG,EAAK9B,MAAMsI,GAAX,KAA0BjG,EAAS0E,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMsU,EAAS/Y,cAG3EG,KAAKkI,SAAS,CACVsQ,SAAUzZ,EACVuZ,YAAY,MAhHxB,wBAoHI,WACItY,KAAKkI,SAAS,CACVuQ,SAAS,MAtHrB,yBA0HI,SAAY3W,EAAYf,GAAW,WAC/B/D,WAAoBK,KAAKC,UAAUwE,GAAaf,GAChD,IAAIE,EAAMjE,eAEVmD,YAAW,WACHc,EAAG,GACH,EAAKiH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,sBAGb,EAAKzQ,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS1X,EAAG,SAGrB,OA5IX,oBA+II,WAAS,WACL,OACI,gBAACgJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,4CAEtB,gBAACN,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACgQ,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBpF,KAAM5T,KAAKsI,MAAMmQ,QACjBQ,iBAAkB,IAClBhF,QAASjU,KAAKkZ,WAAWpN,KAAK9L,MAC9BmZ,QAASnZ,KAAKsI,MAAMqQ,QACpBvO,MAAO,CAAEkB,gBAAiBtL,KAAKsI,MAAMoQ,UAAY,QAAU,UAAW7F,aAAc,KAIxF,gBAAC5I,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAnC,UAEJ,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,kBAE/C,IAAvBnK,KAAKsI,MAAMC,QACRvI,KAAKsI,MAAMiQ,UAAUzU,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC0E,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAI4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG9L,IAAKA,EAAK6E,MAAO,CAAE2G,QAAS,KAChE,uBAAK3G,MAAO,CAAExD,MAAO,OAAQC,OAAQ,IAAKyE,gBAAiB,iBAInEtL,KAAKsI,MAAM+P,MAAMvU,KAAI,SAAC/E,EAAMwG,GAAP,OACjB,gBAAC0E,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAI4G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG9L,IAAKA,GACzC,+BACI,0BACIoF,OAAQ,8CAA8C5L,EAAK6L,QAAQ,gBAAgB7L,EAAK8L,eACxFjK,KAAK,eAET,uBACIkK,IAAK,8CAA8C/L,EAAK6L,QAAQ,eAAe7L,EAAK8L,eACpFE,IAAKhM,EAAKqa,YACVxQ,MAAO7J,EAAKqa,YACZhP,MAAO,CAAExD,MAAO,QAChBkG,QAAS,EAAKwL,WAAWxM,KAAK,EAAM/M,WAU5D,gBAACkL,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAK8P,OAASrZ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGjHrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,wBAAwBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAErJ,KAGF9J,KAAKsI,MAAMkQ,SACT,gBAACzE,EAAA,EAAD,CAAQE,QAASjU,KAAKwZ,YAAY1N,KAAK9L,MAAOwH,kBAAgB,0BAA0B2C,UAAU,aAAayJ,KAAM5T,KAAKsI,MAAMgQ,YAC5H,gBAAC,IAAD,CAAgBnE,mBAAiB,EAAC/J,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,IAC3D,gBAAC,IAAD,CAAY7F,QAAQ,MAAMlL,KAAKsI,MAAMkQ,SAASY,aAE9C,gBAAC,IAAD,CAAYzN,aAAW,QAAQvB,MAAO,CAAEa,SAAU,WAAY4F,IAAK,EAAGC,MAAO,GAAKhE,QAAS9M,KAAKwZ,YAAY1N,KAAK9L,OAC7G,gBAAC,IAAD,CAAiBsN,KAAM8G,MAAShK,MAAO,CAAEoD,SAAU,SAAUjC,MAAO,eAI5E,gBAAC,IAAD,CAAkBpB,UAAU,qBACxB,uBAAKmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMkQ,SAASrV,SAE9DnD,KAAKsI,MAAMkQ,SAASpa,MAAMkC,OAAS,EAChC,gBAAC,KAAD,CAAkB8J,MAAO,CAAE2B,eAAgB,SAAUgF,QAAS,aAC1D,gBAAC9D,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,iBAAiB2C,QAAS9M,KAAKyZ,YAAY3N,KAAK9L,KAAMA,KAAKsI,MAAMkQ,SAASkB,KAAM1Z,KAAKsI,MAAMkQ,SAASpa,QACxL,gBAACgP,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,wBAIR,MAIR,SAzOpB,wBAsBI,SAAiB4D,GACb,IA3BUpG,EA2BN2B,EAAO,CACP1I,KAAM,gBACNC,SA7BM8G,EA6BYoG,EA5BnBpG,EAAKC,MAAM,KAAK,IA6Bf2B,KAAM,SAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UA7CxB,GAA2BC,a,2ICA3B,IAAMtR,GAAcC,EAAQ,MA6B5B,SAASkK,GAASN,GAAO,IACfO,EAAqCP,EAArCO,SAAUC,EAA2BR,EAA3BQ,MAAOC,EAAoBT,EAApBS,MAAUC,GADZ,OACsBV,EADtB,8BAGvB,OACE,+BACEW,KAAK,WACLC,OAAQJ,IAAUC,EAClB9C,GAAE,0BAAqB8C,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GACP,uBAAKgD,MAAO,CAAExD,MAAO,SAClBM,IAab,SAASO,GAAUL,GACjB,MAAO,CACL9C,GAAI,cAAF,OAAgB8C,GAClB,0CAAoCA,IAQxC,SAASV,GAAMC,GACX,OACI,uBAAKC,MAAQD,EAAMC,MAAQD,EAAMC,MAAQ,KAAMC,OAAO,KAAKC,QAAUH,EAAMG,QAAUH,EAAMG,QAAU,eAAgBC,MAAM,8BACvH,yBACI,wBAAMzC,GAAG,QAAQ0C,EAAE,qxBArBnCC,GAASY,UAAY,CACnBX,SAAUY,SACVV,MAAOU,mBACPX,MAAOW,oBAwBF,IAAM6R,GAAb,6B,IAAA,G,EAAA,E,gaACI,WAAYhT,GAAO,MA8Df,IA9De,eACf,cAAMA,IADS,uCA+EC,WACZ6C,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,WAEdA,cACD,EAAK2J,MAAM0L,QAAQC,QAAQ,CAAEC,SAAU,IAAI,EAAKjK,MAAME,UAAU,MAGpEmR,EAAQtQ,UAAU,IAAI,EAAKf,MAAME,WAAWxH,MAAM,SAAAsI,GAC9C,EAAKpB,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,iBAI/B,EAAK+Q,eAjGU,+BAiRP,SAAC5R,EAAOC,GAChB,EAAKC,SAAS,CACV2R,SAAU5R,QAnRC,6BAuRT,SAACD,GACP,EAAKE,SAAS,CACV4R,QAAS9R,EAAM+R,OAAO5S,YAzRX,+BA6RP,SAACa,GACT,EAAKE,SAAS,CACV8R,UAAWhS,EAAM+R,OAAO5S,YA/Rb,gCAmSN,SAACa,GACV,EAAKE,SAAS,CACV+R,SAAUjS,EAAM+R,OAAO5S,YArSZ,iCA+SL,SAACa,GACX,IAAInE,EAAQmE,EAAM+R,OAAOG,QAEzB1Z,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,oBACNuZ,QAAStW,EAAQ,EAAI,EACrBuW,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,EAAKgH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,2BACT0B,KAAMxW,EAAQ,EAAI,WAhUX,gCAsbN,SAACmE,GACV,EAAKE,SAAS,CACVnK,SAAUiK,EAAM+R,OAAO5S,YAxbZ,gCA8fN,SAACa,GACV,EAAKE,SAAS,CACVoS,QAAStS,EAAM+R,OAAO5S,WA7f1B,EAAKmB,MAAQ,CACT+P,MAAO,GACP9P,SAAS,EACT+P,YAAY,EACZiC,UAAU,EAEVC,WAAW,EACXrM,MAAO,CACHvF,MAAO,GACPzF,KAAM,IAGVyF,MAAO,GACPC,YAAa,GACbU,KAAM,KACNf,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAE9B4c,QAAS,IAETT,SAAU,EACVH,KAAM,GACNe,QAAS,GACTC,MAAO,CACH,CAACrc,KAAM,SAAU8I,MAAO,GACxB,CAAC9I,KAAM,UAAW8I,MAAO,GACzB,CAAC9I,KAAM,QAAS8I,MAAO,GACvB,CAAC9I,KAAM,SAAU8I,MAAO,GACxB,CAAC9I,KAAM,MAAO8I,MAAO,GACrB,CAAC9I,KAAM,OAAQ8I,MAAO,GACtB,CAAC9I,KAAM,OAAQ8I,MAAO,GACtB,CAAC9I,KAAM,UAAW8I,MAAO,GACzB,CAAC9I,KAAM,WAAY8I,MAAO,GAC1B,CAAC9I,KAAM,UAAW8I,MAAO,IACzB,CAAC9I,KAAM,SAAU8I,MAAO,IACxB,CAAC9I,KAAM,UAAW8I,MAAO,KAG7BwT,mBAAoB,CAChB,CAACrW,GAAI,IAAK2H,MAAO,+BAAgC9E,MAAO,GACxD,CAAC7C,GAAI,IAAK2H,MAAO,+BAAgC9E,MAAO,GACxD,CAAC7C,GAAI,IAAK2H,MAAO,mBAAoB9E,MAAO,GAC5C,CAAC7C,GAAI,IAAK2H,MAAO,uBAAwB9E,MAAO,GAChD,CAAC7C,GAAI,IAAK2H,MAAO,SAAU9E,MAAO,IAEtCyT,QAAS,GAETZ,UAAW,GACXF,QAAS,GACTG,SAAU,GACVxB,SAAS,EACTC,WAAW,EACXC,QAAS,GACT0B,KAAM,EACNtc,SAAU,GAEV8c,QAAQ,EACRC,UAAW,MAGXnU,EAAMsL,SAAS8I,OAAOza,OAAS,EAAG,CAElC,IAEI0a,EAFYrU,EAAMsL,SAAS8I,OAEZnT,MAAM,KAC3BqT,EAAOD,EAAG,GAAGpT,MAAM,SACvBqT,EAAOA,EAAK,GAEZ,IAAIC,EAAWF,EAAG,GAAGpT,MAAM,YACrBsT,EAAWA,EAAS,GAEpB,EAAKC,SAASF,EAAMC,GAzET,OA4Efle,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UA5EvB,EADvB,uCAqGI,WAGI,IAHM,WACF+c,EAAU,GAENW,EAAI,EAAGA,GAAK,GAAIA,IACpBX,EAAQ7a,KAAKwb,GAGjB5a,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,eACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE5B,IAAIma,EAAena,EAAKoa,OAAOC,UAAUrc,QAAQ,SAACH,GAAD,OAAyC,GAA/B5B,SAAS4B,EAAKyc,eAAkD,GAA5Bre,SAAS4B,EAAK0c,cAE7G,EAAKvT,SAAS,CACVwR,KAAMxY,EACNqH,SAAS,EACTkS,QAASA,EACTR,SAAU/Y,EAAKwa,KAAKC,KACpBtB,KAAMnZ,EAAKwa,KAAKrB,KAChBtc,SAAUmD,EAAKwa,KAAKrd,OAGpBgd,EAAa/a,OAAS,GACtBH,YAAW,WACP,EAAKyZ,aACN,QAzBX,OA6BO,SAAAxD,SAzIf,sBAuKI,SAAS6E,EAAMW,GAAQ,WACftS,EAAO,CACP1I,KAAM,gBACNib,MAAOD,EACPX,KAAMA,GAGVjN,IAAM,CACFvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEfhN,EAAK4a,OACL3b,YAAW,WACP,EAAKgb,SAASF,EAAMW,KACrB,KAEE1a,EAAK6a,YACN,EAAK7T,SAAS,CACV2S,QAAQ,IAGR3Z,EAAKG,GACL,EAAK2a,UAAU9a,EAAKga,SAAUha,EAAKwB,WAEnC,EAAKiE,MAAM0L,QAAQzS,KAAK,EAAK+G,MAAMsL,SAASM,UAE5C,EAAKrK,SAAS,CACViG,MAAO,CACHvF,MAAO,gBACPzF,KAAMjC,EAAK+a,IAAIC,uBAEnB1B,WAAW,UA7BnC,OAmCS,SAAUrM,GACf/F,QAAQC,IAAI8F,QAlNxB,uBAsNI,SAAU+M,EAAUxY,GAAS,WACzBlC,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,YACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,aAETke,SAAUA,EACVxY,SAAUA,MAEf1B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACV,GAAdA,EAAI,GACJ,EAAKgH,SAAS,CACViG,MAAO,CACHvF,MAAO,4CACPzF,KAAMjC,EAAKib,UAEf3B,WAAW,KAGfxd,WAAoB,IAgBpBA,eAdW,CACPwF,UAAW,IACXC,UAAW,GACXE,SAAU,EACVyZ,aAAc,GAEdza,WAAY,IACZC,aAAc,GACdC,cAAe,GAEfwa,SAAU,GACVC,YAAa,KAKjB,EAAK1C,iBA/PrB,yBAoQI,WACI5Z,KAAKkI,SAAS,CACVsQ,SAAU,KACVF,YAAY,MAvQxB,wBA2QI,SAAWvZ,GACPiB,KAAKkI,SAAS,CACVsQ,SAAUzZ,EACVuZ,YAAY,MA9QxB,wBA0SI,WACItY,KAAKkI,SAAS,CACVuQ,SAAS,MA5SrB,sBAsUI,WAAU,WACNjY,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,wBACN2b,QAASvc,KAAKsI,MAAM2R,SACpBG,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5Bf,YAAW,WACHe,EAAI,GACJ,EAAKgH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,6BAGb,EAAKzQ,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAASzX,EAAI,SAGtB,UA/Vf,qBAmWI,WAAS,WACDsb,EAAMxc,KAAKsI,MAAM0R,UACjByC,EAAKzc,KAAKsI,MAAMwR,QAEpB,GAAW,IAAP0C,EAAkB,IAANC,EAAU,CAEtB,IAAIC,EAAQ,GAEZ1c,KAAKsI,MAAMoS,MAAM5W,KAAI,SAAS/E,EAAMwG,GAC5BpI,SAAS4B,EAAKoI,QAAUhK,SAASsf,KACjCC,EAAQ3d,EAAKV,SAIrBmC,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,oBACN+b,QAASH,EAAM,IAAME,EACrBtC,QAASpd,iBAEZgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC1BA,EAAI,IACJV,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,eACNC,QAAS,EAAKyH,MAAME,UACpB4R,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,EAAKgH,SAAS,CACVwR,KAAMxY,OAXd,OAcO,SAAAkV,OAGXjW,YAAW,WACHe,EAAI,GACJ,EAAKgH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,6BAKb,EAAKzQ,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAASzX,EAAI,SAGtB,WA7ZnB,yBAkaI,SAAYY,EAAYf,GAAW,WAC/B/D,WAAoBK,KAAKC,UAAUwE,GAAaf,GAChD,IAAIE,EAAMjE,eAEVmD,YAAW,WACHc,EAAG,GACH,EAAKiH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,sBAGb,EAAKzQ,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS1X,EAAG,SAGrB,OApbX,sBA6bI,WAAU,WACNT,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,oBACNgc,QAAS5c,KAAKsI,MAAMvK,SACpBqc,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5Bf,YAAW,WACHe,EAAI,GACJ,EAAKgH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,6BAGb,EAAKzQ,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAASzX,EAAI,SAGtB,UAtdf,sBA0dI,SAASga,EAAUxY,GAAS,WACxB1C,KAAKkI,SAAS,CACV2S,QAAQ,IAGZra,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,YACNsa,SAAUA,EACVxY,SAAUA,MAEf1B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE5BkH,QAAQC,IAAKnH,GAEbf,YAAW,WACP,EAAK+H,SAAS,CACV4S,UAAW5Z,EACXoX,YAAY,EACZuC,QAAQ,MAEb,QAnBP,OAqBO,SAAAzE,SApff,wBAufI,WACIpW,KAAKkI,SAAS,CACVqS,UAAU,EACVD,QAAS,IACTM,QAAS,OA3frB,4BAqgBI,WAAgB,WAERiC,EAAU7c,KAAKsI,MAAMqS,mBAAmB3W,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAM,EAAKgE,MAAMgS,WAEhE,KAAduC,EAAQvY,KACRuY,EAAQ5Q,MAAQjM,KAAKsI,MAAMsS,SAG3BkC,QAAQ,mBAAmB9c,KAAKsI,MAAMwS,UAAUiC,MAAM7B,WACtD1a,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,cACNwZ,QAASpd,aACTke,SAAUlb,KAAKsI,MAAMwS,UAAUiC,MAAM7B,SACrCxY,SAAU1C,KAAKsI,MAAMwS,UAAUiC,MAAMra,SACrCsa,IAAKH,EAAQ5Q,UAElBjL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5BkH,QAAQC,IAAKnH,GAEbf,YAAW,WACHe,EAAI,IACJ,EAAKgH,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAAS,2BAET4B,UAAU,EACVjC,YAAY,EACZE,SAAU,OAGd,EAAKoB,YAEL,EAAK1R,SAAS,CACVuQ,SAAS,EACTC,WAAW,EACXC,QAASzX,EAAI,SAGtB,UAhjBnB,yBAqjBI,WAAa,WACLjC,EAAU,GACV+F,EAAYhI,gBACZmI,EAAY,KAEhBnF,KAAKsI,MAAMwS,UAAUmC,YAAYnZ,KAAK,SAAC/E,GAGnC,GAFAoG,EAAYH,EAAUhB,MAAM,SAACkZ,GAAD,OAAWA,EAAM5Y,IAAMvF,EAAKc,WAEzC,CACX,IAAIlC,EAAQR,SAASgI,EAAUxH,OAC3BoC,EAAY5C,SAAS4B,EAAKI,OAAShC,SAASgI,EAAUxH,OAE1DsB,EAAQW,KAAK,CACTvB,KAAMU,EAAKV,KACXwB,QAASd,EAAKc,QACdV,MAAOJ,EAAKI,MAEZW,UAAWnC,EACXoC,UAAWA,QAKvB,IAAIuJ,EAAO,CACP9G,UAAWrF,SAAS6C,KAAKsI,MAAMwS,UAAUiC,MAAMI,aAAe,EAC9D1a,UAAWzC,KAAKsI,MAAMwS,UAAUsC,OAAO/e,KACvCsE,SAAUxF,SAAS6C,KAAKsI,MAAMwS,UAAUiC,MAAMra,UAC9C0Z,aAAc,GAEdza,WAAY,IACZC,aAAc,GACdC,cAAe,GAEfwa,SAA8D,GAApDlf,SAAS6C,KAAKsI,MAAMwS,UAAUiC,MAAMI,aAAoB,OAAS,KAC3Eb,YAAa,IAIjBtf,eAAwBsM,GAEpBtJ,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YAAuD,IAAzCf,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YACpE/D,WAAqBgD,KAAKsI,MAAMwS,UAAUhZ,WAAY9B,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YAErF/D,WAAoBiC,GAEpBkB,YAAW,WACPlC,OAAOgU,SAASM,SAAW,IAAI,EAAKjK,MAAME,UAAU,UACrD,OApmBX,oBAumBI,WAAS,WACL,OACI,gBAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,8CAEtB,gBAACN,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAAC8K,EAAA,EAAD,CAAUC,KAAM5T,KAAKsI,MAAMuS,OAAQzQ,MAAO,CAAEoB,OAAQ,GAAID,MAAO,SAC3D,gBAACsI,EAAA,EAAD,CAAkBtI,MAAM,aAG5B,gBAACwI,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMkS,UACjBvG,QAAS,kBAAM,EAAK/L,SAAS,CAAEsS,WAAW,KAC1CrQ,UAAU,aAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAAmBnK,KAAKsI,MAAM6F,MAAMvF,OACxF,gBAAC,IAAD,CAAiBuB,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsS,WAAW,KAAUlN,KAAM8G,QACnG,gBAACiJ,EAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAmBnT,UAAU,iBAAiBnK,KAAKsI,MAAM6F,MAAMhL,OAEnE,gBAACoa,GAAA,EAAD,KACI,gBAACtQ,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsS,WAAW,MAC1I,gBAACpN,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,aAKZ,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAnC,mBAGJ,gBAAC0N,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBpF,KAAM5T,KAAKsI,MAAMmQ,QACjBQ,iBAAkB,IAClBhF,QAASjU,KAAKkZ,WAAWpN,KAAK9L,MAC9BmZ,QAASnZ,KAAKsI,MAAMqQ,QACpBvO,MAAO,CAAEkB,gBAAiBtL,KAAKsI,MAAMoQ,UAAY,QAAU,UAAW7F,aAAc,GACpF2K,OACI,gBAAC,WAAD,KACI,gBAAC,IAAD,CAAYC,KAAK,QAAQ9R,aAAW,QAAQJ,MAAM,UAAUuB,QAAS9M,KAAKkZ,WAAWpN,KAAK9L,OACtF,gBAAC0d,GAAA,EAAD,CAAWlQ,SAAS,cAMpC,gBAACvD,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBC,MAAO,CAAEM,WAAY,IAC5G,gBAACW,EAAA,EAAD,CAAQJ,SAAS,SAASb,MAAO,CAAEkB,gBAAiB,OAAQC,MAAO,OAAQC,OAAQ,GAAKC,UAAW,GAC/F,gBAACC,EAAA,EAAD,CAAMvE,MAAOnH,KAAKsI,MAAMuR,SAAUjO,SAAU5L,KAAK6L,UAAUC,KAAK9L,MAAO2L,aAAW,sBAAuBvB,MAAO,CAAE2B,eAAgB,WAC9H,gBAACC,GAAA,GAAD,QAAKC,MAAM,aAAgBxE,GAAU,GAArC,CAAyCyE,eAAe,KACxD,gBAACF,GAAA,GAAD,QAAKC,MAAM,UAAaxE,GAAU,GAAlC,CAAsCyE,eAAe,KACrD,gBAACF,GAAA,GAAD,QAAKC,MAAM,kBAAqBxE,GAAU,GAA1C,CAA8CyE,eAAe,OAGrE,gBAAC,GAAD,CAAU/E,MAAOnH,KAAKsI,MAAMuR,SAAUzS,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC5D,uBAAKwD,MAAO,CAAE2G,QAAS,KAClB/Q,KAAKsI,MAAMoR,KAAKtb,MACb,gBAAC2L,EAAA,EAAD,CAAQ4T,QAAM,GACV,yBAAOvT,MAAO,CAAExD,MAAO,QAAUuD,UAAU,cACvC,6BACI,0BACI,0BAAI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,aACJ,0BAAI,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAnC,mBACJ,0BAAI,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAnC,mBAGZ,6BACKnL,KAAKsI,MAAMoR,KAAKtb,MAAMA,MAAM0F,KAAI,SAAC/E,EAAMwG,GAAP,OAC7B,sBAAIA,IAAKA,GACL,0BAAI,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,OAAO2B,QAAS,EAAK2M,YAAY3N,KAAK,EAAM/M,EAAK2a,KAAM3a,EAAKgC,aAAchC,EAAKgC,aACtH,0BAAI,gBAAC,IAAD,CAAYmK,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqE,aACpD,0BAAI,gBAAC,IAAD,CAAY8H,QAAQ,KAAKC,UAAU,QAAQpM,EAAK6e,kBAOxE,KAEH5d,KAAKsI,MAAMoR,KAAKtb,MACb,gBAAC2L,EAAA,EAAD,CAAQ8T,MAAI,GACR,yBAAOzT,MAAO,CAAExD,MAAO,QAAUuD,UAAU,oBACvC,6BACKnK,KAAKsI,MAAMoR,KAAKtb,MAAMA,MAAM0F,KAAI,SAAC/E,EAAMwG,GAAP,OAC7B,sBAAIA,IAAKA,GACL,0BACI,2BACI,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,QAAnC,cACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKgC,aAEpD,uBAAKqJ,MAAO,CAAExD,MAAO,OAAQ8D,WAAY,KACrC,gBAAC,IAAD,CAAYQ,QAAQ,KAAKC,UAAU,QAAnC,kBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAK6e,WAEpD,uBAAKxT,MAAO,CAAExD,MAAO,OAAQ8D,WAAY,GAAIiD,UAAW,YACpD,gBAAC,IAAD,CAAYzC,QAAQ,KAAKC,UAAU,QAAnC,mBACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqE,aAEpD,uBAAKgH,MAAO,CAAExD,MAAO,OAAQ8D,WAAY,KACrC,gBAACuC,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAYC,MAAO,CAAExD,MAAO,QAAUkG,QAAS,EAAK2M,YAAY3N,KAAK,EAAM/M,EAAK2a,KAAM3a,EAAKgC,aAC/K,gBAACqM,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6BC,MAAO,CAAExD,MAAO,SAAnF,mCAUhC,OAIZ,gBAAC,GAAD,CAAUO,MAAOnH,KAAKsI,MAAMuR,SAAUzS,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC3D5G,KAAKsI,MAAMoR,KAAK4B,OACb,uBAAKnR,UAAU,eACX,uBAAKA,UAAU,SACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAzD,KACA,gBAAC,IAAD,CAAY5S,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAzD,QACA,gBAAC,IAAD,CAAY5S,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAzD,SACA,gBAAC,IAAD,CAAY5S,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,MAE7D,uBAAK3T,UAAU,SACVnK,KAAKsI,MAAMoR,KAAK4B,OAAOC,UAAUzX,KAAI,SAAC/E,EAAMwG,GAAP,OAClC,uBAAKA,IAAKA,EAAK4E,UAA4C,GAA/BhN,SAAS4B,EAAKyc,eAAkD,GAA5Bre,SAAS4B,EAAK0c,WAAmB,GAAK,SAAW3O,QAAU,EAAKiR,SAASjS,KAAK,EAAM/M,EAAKmc,SAAUnc,EAAK2D,WACpK,2BACI,gBAAC,IAAD,CAAYwI,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAM/e,EAAKmc,UACpE,gBAAC,IAAD,CAAYhQ,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAM/e,EAAKif,eACpE,gBAAC,IAAD,CAAY9S,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,gBAAgBC,MAAO,CAAE0T,KAAM,IAAM/e,EAAKD,IAA9F,IAAmG,gBAAC,GAAD,CAAO8H,MAAM,KAAKE,QAAQ,iBAC7H,gBAAC,IAAD,CAAYoE,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAE0T,KAAM,IAAkC,GAA5B3gB,SAAS4B,EAAK0c,WAAkB,gBAACiC,GAAA,EAAD,CAAWtT,MAAO,CAAEa,SAAU,WAAY4F,IAAK,KAAyC,GAA/B1T,SAAS4B,EAAKyc,cAAqB,gBAACyC,GAAA,EAAD,CAAW7T,MAAO,CAAEa,SAAU,WAAY4F,IAAK,KAAU,OAGvN,GAA/B1T,SAAS4B,EAAKyc,eAAkD,GAA5Bre,SAAS4B,EAAK0c,WAAmB,KACnE,uBAAKtR,UAAU,YACX,2BACI,uBAAKA,UAAiD,GAArChN,SAAS4B,EAAKmf,MAAM,GAAX,SAAsE,GAArC/gB,SAAS4B,EAAKmf,MAAM,GAAX,QAAgC,GAAK,UACrG,gBAAC,IAAD,CAAYhT,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmf,MAAM,GAAX,OAE/C,uBAAK/T,UAAiD,GAArChN,SAAS4B,EAAKmf,MAAM,GAAX,SAAsE,GAArC/gB,SAAS4B,EAAKmf,MAAM,GAAX,QAAgC,GAAK,UACrG,gBAAC,IAAD,CAAYhT,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmf,MAAM,GAAX,OAE/C,uBAAK/T,UAAiD,GAArChN,SAAS4B,EAAKmf,MAAM,GAAX,SAAsE,GAArC/gB,SAAS4B,EAAKmf,MAAM,GAAX,QAAgC,GAAK,UACrG,gBAAC,IAAD,CAAYhT,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmf,MAAM,GAAX,OAE/C,uBAAK/T,UAAiD,GAArChN,SAAS4B,EAAKmf,MAAM,GAAX,SAAsE,GAArC/gB,SAAS4B,EAAKmf,MAAM,GAAX,QAAgC,GAAK,UACrG,gBAAC,IAAD,CAAYhT,QAAQ,KAAKC,UAAU,QAAQpM,EAAKmf,MAAM,GAAX,QAG1B,GAAvBnf,EAAKof,eAAsB,KACzB,2BACI,gBAAC,IAAD,CAAYjT,QAAQ,KAAKC,UAAU,QAAnC,SAA+E,GAA7BhO,SAAS4B,EAAKsD,YAAmB,mBAAqB,sBAAwBtD,EAAKof,wBAUrK,MAGR,gBAAC,GAAD,CAAUhX,MAAOnH,KAAKsI,MAAMuR,SAAUzS,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC3D5G,KAAKsI,MAAMoR,KAAKgC,KACb,uBAAKvR,UAAU,aACX,wBAAMiU,YAAU,EAACC,aAAa,OAC1B,gBAACC,GAAA,EAAD,CACIrS,MAAM,MACN9E,MAAOnH,KAAKsI,MAAMvK,SAClBoM,UAAU,QACVyB,SAAU5L,KAAKue,WAAWzS,KAAK9L,MAC/Bwe,OAAQxe,KAAKye,SAAS3S,KAAK9L,QAE/B,gBAACse,GAAA,EAAD,CAAWI,WAAY,CAAEC,UAAU,GAAQ1S,MAAM,iBAAiB9E,MAAOnH,KAAKsI,MAAMoR,KAAKgC,KAAKkD,MAAOzU,UAAU,WAEnH,wBAAMiU,YAAU,EAACC,aAAa,OACQ,IAAjCre,KAAKsI,MAAMoR,KAAKgC,KAAKmD,SAClB,gBAACP,GAAA,EAAD,CAAWrS,MAAM,gBAAgB9B,UAAU,QAAQuU,WAAY,CAAEC,UAAU,GAAQxX,MAAOnH,KAAKsI,MAAMoR,KAAKgC,KAAKmD,WAE/G,uBAAK1U,UAAU,SACX,gBAAC2U,GAAA,EAAD,CAAY3U,UAAU,cAAtB,iBAEA,gBAAC4U,GAAA,EAAD,CAAa5U,UAAU,aACnB,gBAAC6U,GAAA,EAAD,CACEC,QAAQ,2BACR3a,GAAG,qBACH4a,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAM0R,UAClBpO,SAAU5L,KAAKga,UAAUlO,KAAK9L,MAC9Bwe,OAAQxe,KAAKmf,QAAQrT,KAAK9L,OAExB,gBAACof,GAAA,EAAD,CAAUjV,UAAU,WAAWhD,MAAM,IAArC,QACCnH,KAAKsI,MAAMmS,QAAQ3W,KAAI,SAAC/E,EAAMwG,GAAP,OACpB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4E,UAAU,WAAWhD,MAAOpI,GAAOA,QAInE,gBAACggB,GAAA,EAAD,CAAa5U,UAAU,WACnB,gBAAC6U,GAAA,EAAD,CACEC,QAAQ,2BACR3a,GAAG,qBACH4a,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAMwR,QAClBlO,SAAU5L,KAAK8Z,QAAQhO,KAAK9L,MAC5Bwe,OAAQxe,KAAKmf,QAAQrT,KAAK9L,OAExB,gBAACof,GAAA,EAAD,CAAUjV,UAAU,WAAWhD,MAAM,IAArC,SACCnH,KAAKsI,MAAMoS,MAAM5W,KAAI,SAAC/E,EAAMwG,GAAP,OAClB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4E,UAAU,WAAWhD,MAAOpI,EAAKoI,OAAQpI,EAAKV,YAMtF,gBAACigB,GAAA,EAAD,CACIrS,MAAM,QACN9B,UAAU,QACVhD,MAAOnH,KAAKsI,MAAM2R,SAClBrO,SAAU5L,KAAKqf,WAAWvT,KAAK9L,MAC/Bwe,OAAQxe,KAAKsf,SAASxT,KAAK9L,SAInC,gBAACuf,GAAA,EAAD,CAAWC,KAAG,EAACrV,UAAU,kBACrB,gBAACsV,GAAA,EAAD,CACI7T,SAAU5L,KAAK0f,YAAY5T,KAAK9L,MAChC2f,QAAS,gBAACC,GAAA,EAAD,CAAU1F,QAAuC,GAA7B/c,SAAS6C,KAAKsI,MAAM+R,MAA4Bhc,KAAK,aAClF4N,MAAM,mCAKlB,OAKVjM,KAAKsI,MAAMwS,UACT,gBAAC/G,EAAA,EAAD,CACIE,QAASjU,KAAKwZ,YAAY1N,KAAK9L,MAC/BwH,kBAAgB,0BAChB2C,UAAU,kBACVyJ,KAAM5T,KAAKsI,MAAMgQ,WACjB/D,WAAW,GAEX,gBAAC,IAAD,CAAgBJ,mBAAiB,EAAC/J,MAAO,CAAEqJ,OAAQ,EAAG1C,QAAS,IAC3D,gBAAC,IAAD,CAAY7F,QAAQ,MAApB,SAAgClL,KAAKsI,MAAMwS,UAAUiC,MAAM7B,UAE3D,gBAAC,IAAD,CAAYvP,aAAW,QAAQvB,MAAO,CAAEa,SAAU,WAAY4F,IAAK,EAAGC,MAAO,EAAGvF,MAAO,QAAUuB,QAAS9M,KAAKwZ,YAAY1N,KAAK9L,OAC5H,gBAAC0d,GAAA,EAAD,QAIR,gBAAC,IAAD,CAAkBvT,UAAU,0BACxB,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMwS,UAAUiC,MAAM1a,WAAtE,KAAoFrC,KAAKsI,MAAMwS,UAAUiC,MAAM8C,qBAC/G,gBAAC,IAAD,CAAY3U,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMwS,UAAUiC,MAAM+C,gBAAtE,KAAyF9f,KAAKsI,MAAMwS,UAAUiC,MAAMgD,YAC9D,GAApD5iB,SAAS6C,KAAKsI,MAAMwS,UAAUiC,MAAMiD,aAAoB,KACtD,gBAAC,IAAD,CAAY9U,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMwS,UAAUiC,MAAMkD,UAAWjgB,KAAKsI,MAAMwS,UAAUiC,MAAMoB,gBAErE,MAAzCne,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YAAsE,GAAhDf,KAAKsI,MAAMwS,UAAUiC,MAAMhc,WAAWT,OAAc,KACnG,gBAAC,IAAD,CAAY4K,QAAQ,KAAKC,UAAU,QAAnC,aAAqDnL,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YAEzC,MAAzCf,KAAKsI,MAAMwS,UAAUiC,MAAMhc,YAAsE,GAAhDf,KAAKsI,MAAMwS,UAAUiC,MAAMhc,WAAWT,OAAc,KACnG,gBAAC,IAAD,CAAY4K,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,WAAWnK,KAAKsI,MAAMwS,UAAUiC,MAAM3Z,YAE9F,gBAAC,IAAD,CAAY8H,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,iBAApD,gBAAkFnK,KAAKsI,MAAMwS,UAAUiC,MAAMmD,UAA7G,IAAwH,gBAAC,GAAD,CAAOtZ,MAAM,KAAKE,QAAQ,iBAElJ,yBAAOqD,UAAU,mBACb,6BACKnK,KAAKsI,MAAMwS,UAAUmC,YAAYnZ,KAAI,SAAC/E,EAAMwG,GAAP,OAClC,sBAAIA,IAAKA,GACL,0BACI,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,OAEpD,0BACI,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,QAAQpM,EAAKI,eASlB,GAApDhC,SAAU6C,KAAKsI,MAAMwS,UAAUiC,MAAMtB,YAA4E,IAAxDte,SAAU6C,KAAKsI,MAAMwS,UAAUiC,MAAMvB,cAC5F,gBAAC,KAAD,CAAkBpR,MAAO,CAAE2B,eAAgB,WAAYgF,QAAS,aAC5D,gBAAC9D,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAC3H,gBAAC/K,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAU9M,KAAKmgB,WAAWrU,KAAK9L,KAAMA,KAAKsI,MAAMwS,UAAUiC,MAAM7B,SAAUlb,KAAKsI,MAAMwS,UAAUiC,MAAMra,WAAxK,oBAIR,KAEkD,GAApDvF,SAAU6C,KAAKsI,MAAMwS,UAAUiC,MAAMtB,YAA2E,GAAvDte,SAAU6C,KAAKsI,MAAMwS,UAAUiC,MAAMvB,cAC5F,gBAAC,KAAD,CAAkBpR,MAAO,CAAE2B,eAAgB,WAAYgF,QAAS,aAC5D,gBAAC9D,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAC3H,gBAAC/K,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAU9M,KAAKogB,YAAYtU,KAAK9L,KAAMA,KAAKsI,MAAMwS,UAAUiC,MAAM7B,SAAUlb,KAAKsI,MAAMwS,UAAUiC,MAAMra,WAAzK,qBAIR,MAIR,KAGJ,gBAACqR,EAAA,EAAD,CAAQH,KAAM5T,KAAKsI,MAAMiS,SAAUtG,QAAS,WAAQ,EAAK/L,SAAS,CAACqS,UAAU,KAAW/S,kBAAgB,qBACpG,gBAAC6Y,EAAA,EAAD,CAAa/b,GAAG,qBAAhB,iBACA,gBAAC+Y,EAAA,EAAD,KACI,gBAACC,GAAA,EAAD,yJAIA,gBAAC,IAAD,CAAY3R,aAAW,QAAQvB,MAAO,CAAEa,SAAU,WAAY4F,IAAK,EAAGC,MAAO,EAAGvF,MAAO,QAAUuB,QAAS,WAAQ,EAAK5E,SAAS,CAACqS,UAAU,MACvI,gBAACmD,GAAA,EAAD,OAGJ,gBAACqB,GAAA,EAAD,CAAa5T,UAAU,YACnB,gBAACmV,GAAA,EAAD,CAAYjiB,KAAK,UAAU8I,MAAQnH,KAAKsI,MAAMgS,QAAU1O,SAAU5L,KAAKugB,YAClEvgB,KAAKsI,MAAMqS,mBAAmB7W,KAAI,SAAC/E,EAAMwG,GAAP,OAC/B,gBAACka,GAAA,EAAD,CAAkBla,IAAKA,EAAK4B,MAAOpI,EAAKuF,GAAIqb,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAOlN,EAAKkN,aAKxF,gBAACqS,GAAA,EAAD,CAEImC,QAAU,WAAQ,EAAKvY,SAAS,CAAEoS,QAAS,OAC3CnT,MAAQnH,KAAKsI,MAAMsS,QACnBhP,SAAW,SAAC5D,GAAY,EAAKE,SAAS,CAAE0S,QAAS5S,EAAM+R,OAAO5S,SAC9DsM,OAAO,QACPnP,GAAG,OACH2H,MAAM,iBACNrL,KAAK,OACL2T,WAAS,KAGjB,gBAACgJ,GAAA,EAAD,CAAenT,MAAO,CAAE4G,cAAe,KACnC,gBAACjH,EAAA,EAAD,CAAQC,QAAM,GACV,gBAACiD,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAC3H,gBAAC/K,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAS,WAAQ,EAAK5E,SAAS,CAACqS,UAAU,MAA7G,cAGR,gBAACtN,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAC3H,gBAAC/K,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAS9M,KAAK0gB,eAAe5U,KAAK9L,OAArG,yBA18B5B,wBA4II,SAAiB+N,GACb,IA3JUpG,EA2JN2B,EAAO,CACP1I,KAAM,gBACNC,SA7JM8G,EA6JYoG,EA5JnBpG,EAAKC,MAAM,KAAK,IA6Jf2B,KAAM,WAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAnKxB,GAA6BC,a,ukBCrC7B,IAAMtR,GAAcC,EAAQ,MAO5B,SAAS2J,GAAMC,GACX,OACI,uBAAKC,MAAQD,EAAMC,MAAQD,EAAMC,MAAQ,GAAKC,OAAO,KAAKC,QAAUH,EAAMG,QAAUH,EAAMG,QAAU,eAAgBC,MAAM,8BACtH,yBACI,wBAAMzC,GAAG,QAAQ0C,EAAE,qxBAMnC,SAASC,GAASN,GAAO,IACfO,EAAqCP,EAArCO,SAAUC,EAA2BR,EAA3BQ,MAAOC,EAAoBT,EAApBS,MAAUC,GADZ,OACsBV,EADtB,8BAGvB,OACE,+BACEW,KAAK,WACLC,OAAQJ,IAAUC,EAClB9C,GAAE,0BAAqB8C,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GACP,2BACGF,IAab,SAASO,GAAUL,GACjB,MAAO,CACL9C,GAAI,cAAF,OAAgB8C,GAClB,0CAAoCA,IATxCH,GAASY,UAAY,CACnBX,SAAUY,SACVV,MAAOU,mBACPX,MAAOW,oB,IAUH6Y,G,qCAGF,WAAYha,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTvJ,KAAM,EAAK4H,MAAM5H,KACjB6B,KAAM,EAAK+F,MAAM/F,KACjBzB,MAAO,EACPyhB,SAAU,EACVC,cAAe,EACfniB,SAAU,GATC,E,gDAanB,WAAmB,WACfsB,KAAK8I,YAAa,EAElB,IAAIgY,EAAY9jB,aAEZkH,GADkBlH,kBACN8jB,EAAU9c,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,OAEtEJ,GACAlE,KAAKkI,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,aAI5BgJ,SAAQ,WACJ,IAAwB,IAApB,EAAKD,WAAqB,CAC1B,IAAIiY,EAAgB/jB,aAChBgkB,EAAkBhkB,kBAEtB,GAAIgkB,GAAmBA,EAAgB1gB,OAAS,EAAG,CAC/C,IAAI4D,EAAY8c,EAAgBhd,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,MAE5EJ,GACA,EAAKgE,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,YAKhC,IAAImE,EAAY6c,EAAc/c,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,MAEvD,SAAnB,EAAKgE,MAAM1H,OACPsD,EACA,EAAKgE,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,UACpB8gB,aAAc3c,EAAUY,cAAgBZ,EAAUY,eAAiB,IAGvE,EAAKoD,SAAS,CACV/I,MAAO,EACPyhB,SAAU,EACVliB,SAAU,EACVmiB,cAAe,W,kCAQvC,WACI7gB,KAAK8I,YAAa,I,iBAGtB,SAAIjJ,GACA7C,UAAmB6C,K,mBAGvB,SAAMA,GACF7C,YAAqB6C,K,mCAGzB,SAAsByQ,EAAWC,GAC7B,OACIvQ,KAAKsI,MAAMnJ,QAAUoR,EAAUpR,OAC/Ba,KAAKsI,MAAMsY,WAAarQ,EAAUqQ,UAClC5gB,KAAKsI,MAAM5J,WAAa6R,EAAU7R,UAClCsB,KAAKsI,MAAMvJ,KAAKV,OAASiS,EAAUvR,KAAKV,O,oBAIhD,WACI,OAAIlB,SAAS6C,KAAKsI,MAAMnJ,OAAS,GAAyC,GAApChC,SAAS6C,KAAKsI,MAAMvJ,KAAK2F,QAEvD,0BACI,sBAAI0F,MAAO,CAAEI,QAAS,OAAQkC,cAAe,MAAOjC,WAAY,SAAUQ,SAAU,aAChF,+BACI,0BACIN,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAKkiB,IAAI,gBAAgBjhB,KAAKsI,MAAMvJ,KAAKmiB,UACxGtgB,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAKkiB,IAAI,eAAejhB,KAAKsI,MAAMvJ,KAAKmiB,UACpGnW,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,QAIX,SAAnB2B,KAAKsI,MAAM1H,KACR,gBAAC,IAAD,CAAiB0M,KAAM6T,MAAQhX,UAAU,cAEzC,KAEJ,2BACI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,YAAYnK,KAAKsI,MAAMvJ,KAAKV,MAChF,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,YAAYnK,KAAKsI,MAAMvJ,KAAKqiB,QAGxF,0BACwB,SAAnBphB,KAAKsI,MAAM1H,KACR,gBAACqM,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,SACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,KAAMA,KAAKsI,MAAMvJ,KAAKuF,KAC/F,gBAAC,IAAD,CAAiBgJ,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBnK,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,KAAMA,KAAKsI,MAAMvJ,KAAKuF,KAC7F,gBAAC,IAAD,CAAiBgJ,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,YAI1D,gBAACP,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,eACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAiBmD,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBnK,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAiBmD,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,aAKlE,2BACkC,GAA5BxN,KAAKsI,MAAMuY,aACT,gBAAC,IAAD,CAAYjU,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,gBAAiBhN,SAAS6C,KAAKsI,MAAMnJ,OAAShC,SAAS6C,KAAKsI,MAAMsY,WAEnI,KAEJ,gBAAC,IAAD,CAAYhU,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAanK,KAAKsI,MAAM5J,SAAzF,IAAmG,gBAAC,GAAD,CAAOkI,MAAM,KAAKE,QAAQ,oBAMrI,S,GA9JOsH,aAoKjBiT,G,qCAGF,WAAY1a,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTvJ,KAAM,EAAK4H,MAAM5H,KACjB6B,KAAM,EAAK+F,MAAM/F,KACjBzB,MAAO,EACPyhB,SAAU,EACVliB,SAAU,EACVmiB,cAAe,GATJ,E,gDAanB,WAAmB,WACf7gB,KAAK8I,YAAa,EAElB,IACI5E,EADYlH,aACUgH,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,MAEtEJ,GACAlE,KAAKkI,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,aAI5BgJ,SAAQ,WACJ,IAAwB,IAApB,EAAKD,WAAqB,CAC1B,IAAIiY,EAAgB/jB,aAChBgkB,EAAkBhkB,kBAEtB,GAAIgkB,GAAmBA,EAAgB1gB,OAAS,EAAG,CAC/C,IAAI4D,EAAY8c,EAAgBhd,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,MAE5EJ,GACA,EAAKgE,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,YAKhC,IAAImE,EAAY6c,EAAc/c,MAAM,SAACjF,GAAD,OAAUA,EAAKc,SAAW,EAAKyI,MAAMvJ,KAAKuF,MAEvD,SAAnB,EAAKgE,MAAM1H,OACPsD,EACA,EAAKgE,SAAS,CACV/I,MAAO+E,EAAU/E,MACjByhB,SAAU1c,EAAUpE,UACpBpB,SAAUwF,EAAUnE,UACpB8gB,aAAc3c,EAAUY,cAAgBZ,EAAUY,eAAiB,IAGvE,EAAKoD,SAAS,CACV/I,MAAO,EACPyhB,SAAU,EACVliB,SAAU,EACVmiB,cAAe,W,kCAQvC,WACI7gB,KAAK8I,YAAa,I,iBAGtB,SAAIjJ,GACA7C,UAAmB6C,K,mBAGvB,SAAMA,GACF7C,YAAqB6C,K,mCAGzB,SAAsByQ,EAAWC,GAC7B,OACIvQ,KAAKsI,MAAMnJ,QAAUoR,EAAUpR,OAC/Ba,KAAKsI,MAAMsY,WAAarQ,EAAUqQ,UAClC5gB,KAAKsI,MAAM5J,WAAa6R,EAAU7R,UAClCsB,KAAKsI,MAAMvJ,KAAKV,OAASiS,EAAUvR,KAAKV,O,oBAIhD,WACI,OAAI2B,KAAKsI,MAAMnJ,MAAQ,GAAyC,GAApChC,SAAS6C,KAAKsI,MAAMvJ,KAAK2F,QAE7C,uBAAKyF,UAAU,WACX,2BAASC,MAAO,CAAExD,MAAO,QACrB,0BACI+D,OAAQ,4CAA4C3K,KAAKsI,MAAMvJ,KAAKkiB,IAAI,gBAAgBjhB,KAAKsI,MAAMvJ,KAAKmiB,UACxGtgB,KAAK,eAET,uBACIkK,IAAK,4CAA4C9K,KAAKsI,MAAMvJ,KAAKkiB,IAAI,eAAejhB,KAAKsI,MAAMvJ,KAAKmiB,UACpGnW,IAAK/K,KAAKsI,MAAMvJ,KAAKV,KACrBuK,MAAO5I,KAAKsI,MAAMvJ,KAAKV,QAGX,SAAnB2B,KAAKsI,MAAM1H,KACR,gBAAC,IAAD,CAAiB0M,KAAM6T,MAAQhX,UAAU,cAEzC,KAEJ,uBAAKC,MAAO,CAAExD,MAAO,QACjB,gBAAC,IAAD,CAAYsE,QAAQ,KAAKC,UAAU,QAAQnL,KAAKsI,MAAMvJ,KAAKV,MAC3D,2BACwB,SAAnB2B,KAAKsI,MAAM1H,KACR,gBAACqM,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,SACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAKqN,MAAMvB,KAAK9L,KAAMA,KAAKsI,MAAMvJ,KAAKuF,KAC/F,gBAAC,IAAD,CAAiBgJ,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBnK,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS9M,KAAK+M,IAAIjB,KAAK9L,KAAMA,KAAKsI,MAAMvJ,KAAKuF,KAC7F,gBAAC,IAAD,CAAiBgJ,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,YAI1D,gBAACP,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,eACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAiBmD,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBnK,KAAKsI,MAAMnJ,QAEvE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAiBmD,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,aAKhC,GAA5BxN,KAAKsI,MAAMuY,aACT,gBAAC,IAAD,CAAYjU,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,gBAAiBhN,SAAS6C,KAAKsI,MAAMnJ,OAAShC,SAAS6C,KAAKsI,MAAMsY,WAEnI,KAGJ,gBAAC,IAAD,CAAY1V,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAanK,KAAKsI,MAAM5J,SAA5E,IAAsF,gBAAC,GAAD,CAAOkI,MAAM,KAAKE,QAAQ,qBAO5H,S,GAzJasH,aA+JhBkT,GAAb,qCAOI,WAAY3a,GAAO,4BACf,cAAMA,IADS,gCANN,IAMM,qCALD,IAKC,uCAHE,KAGF,4CAFO,OAEP,uCAiPC,WAChB,EAAKmC,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,QAEdA,cACD,EAAK2J,MAAM0L,QAAQzS,KAAK,IAAI,EAAK0I,MAAME,UAAU,KAGrD,EAAKoR,WAEL0H,EAAKjY,UAAU,IAAI,EAAKf,MAAME,WAAWxH,MAAM,SAAAsI,GAC3C,EAAKpB,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,iBAI/B,IAAIiY,EAAY9jB,aACZsC,EAAWtC,gBAGXukB,GAFavkB,kBAEG,IAEpB,GAAI8jB,EAAUxgB,OAAS,GAAKhB,EAASgB,OAAS,EAAG,CAC7CwgB,EAAUhd,KAAI,SAAC/E,GACX,IAAIyiB,EAAWliB,EAASJ,QAAQ,SAACge,GAAD,OAAWA,EAAM5Y,IAAMvF,EAAKc,WAAU,GAEnE2hB,GACCD,EAAc3hB,KAAK,CACf0E,GAAIvF,EAAKc,QACT6E,OAAQ8c,EAAS9c,OACjBrG,KAAMU,EAAKV,KACX+iB,KAAMI,EAAS7U,SACfxN,MAAOJ,EAAKI,MACZT,SAAUK,EAAKgB,UACfkhB,IAAKO,EAAS5W,QACdsW,UAAWM,EAAS3W,oBAKhC,IAAI4W,EAAOF,EAAcriB,QAAQ,SAACge,GAAD,OAAsC,IAA3B/f,SAAS+f,EAAMxY,WACvDgd,EAAMH,EAAcriB,QAAQ,SAACge,GAAD,OAAqC,GAA1B/f,SAAS+f,EAAMxY,WACtDsB,EAAWhJ,oBAEf,EAAKkL,SAAS,CACVyZ,eAAgBF,EAChBG,cAAeF,EACfG,mBAAoB7b,EAEpB8b,OAAQ9kB,cACR0B,SAAU1B,mBAIlB+L,SAAQ,WACJ,IAAwB,IAApB,EAAKD,WAAqB,CAE1B,IAAIgY,EAAY9jB,aACZsC,EAAWtC,gBACXgJ,EAAWhJ,oBACX+kB,EAAa/kB,kBAEbukB,EAAgB,GAChBS,EAAiB,GAErBlB,EAAUhd,KAAI,SAAC/E,GACX,IAAIyiB,EAAWliB,EAAS0E,MAAM,SAACkZ,GAAD,OAAWA,EAAM5Y,IAAMvF,EAAKc,WAEvD2hB,GACCD,EAAc3hB,KAAK,CACf0E,GAAIvF,EAAKc,QACT6E,OAAQ8c,EAAS9c,OACjBrG,KAAMU,EAAKV,KACX+iB,KAAMI,EAAS7U,SACfxN,MAAOJ,EAAKI,MACZT,SAAUK,EAAKgB,UACfkhB,IAAKO,EAAS5W,QACdsW,UAAWM,EAAS3W,oBAOhC,IAAI4W,EAAOF,EAAcriB,QAAQ,SAACge,GAAD,OAAsC,IAA3B/f,SAAS+f,EAAMxY,WAGvDud,GAFMV,EAAcriB,QAAQ,SAACge,GAAD,OAAqC,GAA1B/f,SAAS+f,EAAMxY,WAE5C,IAEdsB,EAASlC,KAAI,SAAC/E,GACV,IAAImjB,EAAYX,EAAcvd,MAAM,SAACkZ,GAAD,OAAW/f,SAAS+f,EAAM5Y,KAAOnH,SAAS4B,EAAKuF,OAC/Ekd,EAAWliB,EAAS0E,MAAM,SAACkZ,GAAD,OAAW/f,SAAS+f,EAAM5Y,KAAOnH,SAAS4B,EAAKuF,OAExE4d,EAYDD,EAAQriB,KAAK,CACT0E,GAAIvF,EAAKuF,GACTI,OAAQ3F,EAAK2F,OACbrG,KAAMU,EAAKV,KACX+iB,KAAMriB,EAAK4N,SACXxN,MAAO+iB,EAAU/iB,MACjBT,SAAUwjB,EAAUxjB,SACpBuiB,IAAKO,EAAS5W,QACdsW,UAAWM,EAAS3W,iBAnBxBoX,EAAQriB,KAAK,CACT0E,GAAIvF,EAAKuF,GACTI,OAAQ3F,EAAK2F,OACbrG,KAAMU,EAAKV,KACX+iB,KAAMriB,EAAK4N,SACXxN,MAAO,EACPT,SAAU,EACVuiB,IAAKO,EAAS5W,QACdsW,UAAWM,EAAS3W,oBAgBhCkX,EAAWje,KAAI,SAAC/E,GACZ,IAAIyiB,EAAWliB,EAAS0E,MAAM,SAACkZ,GAAD,OAAWA,EAAM5Y,IAAMvF,EAAKc,WAEvD2hB,GACCQ,EAAepiB,KAAK,CAChB0E,GAAIvF,EAAKc,QACT6E,OAAQ8c,EAAS9c,OACjBrG,KAAMmjB,EAASnjB,KACf+iB,KAAMI,EAAS7U,SACfxN,MAAOJ,EAAKI,MACZT,SAAUK,EAAKgB,UACfkhB,IAAKO,EAAS5W,QACdsW,UAAWM,EAAS3W,oBAKhC,EAAK3C,SAAS,CACV0Z,cAAe,KAGnB,EAAK1Z,SAAS,CACV0Z,cAAeK,IAGnB,EAAK/Z,SAAS,CACVyZ,eAAgBF,EAChBI,mBAAoB7b,EACpBmc,gBAAiBH,EAEjBF,OAAQ9kB,cACR0B,SAAU1B,0BA5YP,+BAsZP,SAACgL,EAAOC,GAChB,EAAKC,SAAS,CACV1F,UAAWyF,IAGf,IAAIuZ,EAAW,EAAKlZ,MAAM7F,UAE1B,GAAgB,GAAZwF,EAAe,CACf,IAAIvJ,EAAW1B,gBAEZwkB,EACsC,GAAjCrkB,SAASqkB,EAASY,YACdjlB,SAASuB,GAAY,EACrB1B,YAAqB,GAErBA,YAAqB,GAGzBA,YAAqBG,SAASqkB,EAAStkB,UAG3CF,YAAqB,QAGzBA,YAAqB,GAErBmD,YAAW,WACH,EAAKmI,MAAM+Z,UAAU/hB,OAAS,GAC9B,EAAKgiB,UAAU,EAAKha,MAAM3F,YAE/B,KAGP,IAAI/B,EAAO,EAAK0H,MAAM3G,WAElB4gB,EAAW,OAEG,GAHDta,EAID,GAARrH,GACA,EAAKsH,SAAS,CACVsa,UAAWhB,GAA6C,GAAjCrkB,SAASqkB,EAASiB,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAEtGL,EAAW,SAEX,EAAKra,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,WAE/BL,EAAW,SAGf,EAAKra,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,MAE/BN,EAAW,MAGf,EAAKra,SAAS,CACVmU,SAAUkG,IAGd,EAAKO,eAldU,gCAqdN,SAAC9a,GACV,IAAIwZ,EAAW,EAAKlZ,MAAMya,QAAQ/e,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAM0D,EAAM+R,OAAO5S,SACtEzI,EAAW1B,gBAEsB,GAAjCG,SAASqkB,EAASY,YACdjlB,SAASuB,GAAY,EACrB1B,YAAqB,GAErBA,YAAqB,GAGzBA,YAAqBG,SAASqkB,EAAStkB,UAG3C,IAAI0D,EAAO,EAAK0H,MAAM3G,WAGJ,GAFD,EAAK2G,MAAM9F,UAGZ,GAAR5B,EACA,EAAKsH,SAAS,CACVsa,UAAWhB,GAA6C,GAAjCrkB,SAASqkB,EAASiB,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAGtG,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,WAInC,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,MAInC,EAAK3a,SAAS,CACVzF,UAAW+e,EACXwB,YAAY,EAEZC,YAAa,KACbC,UAAW,GACXC,UAAW,GACXC,UAAW,KAGf,EAAKN,eAhgBU,mCAshBH,SAAC9a,GACFA,EAAM+R,OAAO5S,MAEf7G,QAAU,IACf,EAAK4H,SAAS,CACVkU,aAAcpU,EAAM+R,OAAO5S,QAInC,EAAK2b,eA/hBU,+BAkiBP,SAAC9a,GACT,EAAKE,SAAS,CACVmU,SAAUrU,EAAM+R,OAAO5S,QAG3B,EAAK2b,eAviBU,iCAmjBL,SAAC9a,GACX,IAAIpH,EAAOoH,EAAM+R,OAAO5S,MAEpBob,EAAW,OAEG,GAHD,EAAKja,MAAM9F,UAIZ,GAAR5B,GACA,EAAKsH,SAAS,CACVsa,UAAW,EAAKla,MAAM7F,WAA0D,GAA7CtF,SAAS,EAAKmL,MAAM7F,UAAUggB,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAE9HL,EAAW,SAEX,EAAKra,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,WAE/BL,EAAW,SAGf,EAAKra,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,MAE/BN,EAAW,MAGf,EAAKra,SAAS,CACVvG,WAAYf,EACZyb,SAAUkG,IAGd,EAAKc,eAEL,EAAKP,eAllBU,kCAqlBJ,SAAC9a,GACZ,EAAKE,SAAS,CACVoU,YAAatU,EAAM+R,OAAO5S,QAG9B,EAAK2b,eA1lBU,mCA8wBH,SAAC9a,GACc,IAAvBA,EAAM+R,OAAO5S,OACb,EAAKe,SAAS,CACVtG,aAAcoG,EAAM+R,OAAO5S,MAC3BxF,WAAY,MAKE,GAFD,EAAK2G,MAAM9F,UAGxB,EAAK0F,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,SAC3BvG,SAAU,SAGd,EAAKnU,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,IAC3BxG,SAAU,OAIlBlc,YAAW,WACP,EAAKkjB,iBACN,OAEH,EAAKnb,SAAS,CACVtG,aAAc,EACdD,WAAY,MAKE,GAFD,EAAK2G,MAAM9F,UAGxB,EAAK0F,SAAS,CACVsa,UAAW,EAAKla,MAAM7F,WAA0D,GAA7CtF,SAAS,EAAKmL,MAAM7F,UAAUggB,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAG9H,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,IAC3BxG,SAAU,QAKtB,EAAKyG,eA1zBU,oCA6zBF,SAAC9a,GACd,EAAKE,SAAS,CACVrG,cAAemG,EAAM+R,OAAO5S,QAGhC,EAAK2b,cA/zBL,EAAKxa,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAE9Bmd,QAAQ,EAERjS,MAAO,GACPC,YAAa,GAEbma,YAAY,EACZM,iBAAiB,EACjBC,kBAAkB,EAClBC,iBAAiB,EACjBC,eAAe,EACfC,eAAe,EAEf5B,OAAQ,EACRpjB,SAAU,EAEV2jB,UAAW,GACXU,QAAS,GACTY,SAAU,GACVC,UAAW,GAEXC,aAAc,KAEdnB,KAAM,CACFC,IAAK,CACD,CAAC/hB,KAAM,OAAQgI,MAAO,qBACtB,CAAChI,KAAM,OAAQgI,MAAO,WAE1Bga,SAAU,CACN,CAAChiB,KAAM,OAAQgI,MAAO,sBAE1Bia,IAAK,CACD,CAACjiB,KAAM,KAAMgI,MAAO,YAG5B4Z,UAAW,CACP,CAAC5hB,KAAM,OAAQgI,MAAO,qBACtB,CAAChI,KAAM,OAAQgI,MAAO,WAG1B+Y,eAAgB,GAChBC,cAAe,GACfC,mBAAoB,GACpBM,gBAAiB,GAEjB2B,SAAU,GAEV3V,MAAO,CACHvF,MAAO,GACPzF,KAAM,IAEVqX,WAAW,EACXuJ,YAAY,EAEZd,YAAa,KACbC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXY,YAAa,GACbC,YAAY,EAEZzhB,UAAW,EACXC,UAAW,KACXE,SAAU,EACVyZ,aAAc,GACdC,SAAU,OAEV1a,WAAY,IACZC,aAAc,GACdC,cAAe,GAEfya,YAAa,GACb4H,WAAY,GACZC,eAAgB,GAEhBC,aAAc,MAGlBpnB,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UApFvB,EAPvB,uCAyHI,WAAU,WACN8C,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,gBACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,EAAKgH,SAAS,CACVma,UAAWnhB,EAAKmjB,aAAazP,OAC7BmO,QAAS7hB,EAAKojB,YACdX,SAAUziB,EAAKqjB,SACfX,UAAW1iB,EAAK0iB,YAGpBzjB,YAAW,WACP,IAAIf,EAAWpC,gBAEf,GAAIoC,EAASoD,WAAmC,GAAtBpD,EAASoD,UAAgB,CAgB/C,GAdA,EAAK0F,SAAS,CACV1F,UAAWpD,EAASoD,UACpBC,UAAWrD,EAASqD,YAAuC,GAA1BrD,EAASqD,UAAU6B,GAAW,KAAOlF,EAASqD,UAC/EE,SAAUvD,EAASuD,SACnByZ,aAAchd,EAASgd,aAEvBza,WAAYvC,EAASuC,WACrBC,aAAcxC,EAASwC,aACvBC,cAAezC,EAASyC,cAExBwa,SAAUjd,EAASid,SACnBC,YAAald,EAASkd,cAGW,GAAjCnf,SAASiC,EAASuC,aAA6C,IAAzBvC,EAASwC,eAAwBxC,EAASqD,YAAwC,IAA3BrD,EAASqD,UAAU6B,IAAcnH,SAAUiC,EAASuD,UAAa,GAC9JxC,YAAW,WACP,EAAKkjB,iBACN,SACF,CACD,IAAI/Z,EAAO,CACP9G,UAAWpD,EAASoD,UACpBC,UAAW,GACXE,SAAUvD,EAASuD,SACnByZ,aAAchd,EAASgd,aAEvBza,WAAYvC,EAASuC,WACrBC,aAAc,GACdC,cAAe,GAEfwa,SAAUjd,EAASid,SACnBC,YAAald,EAASkd,aAI1Btf,eAAwBsM,GAS5B,GANAnJ,YAAW,WAC+B,GAAlChD,SAAUiC,EAASoD,YAAoBrF,SAAUiC,EAASuD,UAAa,GACvE,EAAK2f,UAAUljB,EAASuD,YAE7B,KAEuB,GAAtBvD,EAASoD,WAAkBpD,EAASqD,WAAarD,EAASqD,UAAU6B,KAAiC,IAA3BlF,EAASqD,UAAU6B,GAAW,CACxG,IAAI5F,EAAW1B,gBAEgC,GAA3CG,SAASiC,EAASqD,UAAU2f,YACxBjlB,SAASuB,GAAY,EACrB1B,YAAqB,GAErBA,YAAqB,GAGzBA,YAAqBG,SAASiC,EAASqD,UAAUvF,UAIzDiD,YAAW,WACP,IAAIS,EAAOxB,EAASuC,WAGF,GAFDvC,EAASoD,UAGV,GAAR5B,EACA,EAAKsH,SAAS,CACVsa,UAAWpjB,EAASqD,WAAwD,GAA3CtF,SAASiC,EAASqD,UAAUggB,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAG1H,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,WAInC,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,QAGpC,UAEC,EAAKva,MAAM+Z,UAAU/hB,OAAS,GAC9B,EAAKgiB,UAAU,EAAKha,MAAM+Z,UAAU,GAArB,IAGf,EAAK/Z,MAAMya,QAAQziB,OAAS,GAC5B,EAAKigB,WAAW,CAACxG,OAAQ,CAAC5S,MAAO,EAAKmB,MAAMya,QAAQ,GAAnB,MAInB,oBAAX9kB,QACPkC,YAAW,WACHjC,aAAaqB,QAAQ,gBACrB,EAAK2I,SAAS,CACVgc,WAAYhmB,aAAaqB,QAAQ,gBAGrCY,YAAW,WACP,EAAKiB,eACN,QAER,OAER,UApPf,kCAyZI,WACIpB,KAAK8I,YAAa,IA1Z1B,uBA0gBI,SAAU0b,GACFhb,SAASC,cAAc,mBACvBD,SAASC,cAAc,kBAAkBC,UAAUC,OAAO,UAE1DH,SAASC,cAAc,QAAQ+a,IAC/Bhb,SAASC,cAAc,QAAQ+a,GAAS9a,UAAUqD,IAAI,UAG1D,IAAI8W,EAAe7jB,KAAKsI,MAAM+Z,UAAUre,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAMkgB,KAEnExkB,KAAKkI,SAAS,CACVvF,SAAU6hB,EACVX,aAAcA,EACdP,iBAAiB,IAGrBtjB,KAAK8iB,aA1hBb,6BAijBI,SAAgBliB,GACZZ,KAAKkI,SAAS,CACVmU,SAAUzb,EACV4iB,iBAAiB,IAGrBxjB,KAAK8iB,aAvjBb,wBAomBI,WAAY,WAC4B,GAAhC9iB,KAAKsI,MAAM4b,WAAW5jB,OACtBN,KAAKkI,SAAS,CACVic,eAAgB,KAGpB3jB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,gBACNC,QAAS7D,YACT+D,WAAYf,KAAKsI,MAAM4b,eAE5BljB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5BlE,WAAqBK,KAAKC,UAAU4D,GAAO,EAAKoH,MAAM4b,YACtD,IAAIO,EAAcznB,gBAEK,IAAnBynB,EAAYpjB,IACZnD,aAAaoD,WAAW,cAG5B,EAAK4G,SAAS,CACVic,eAAgBM,EAAYthB,YA5nBhD,sBAkoBI,WAAU,WACNhD,YAAW,WACP,IAAImJ,EAAO,CACP9G,UAAW,EAAK8F,MAAM9F,UACtBC,UAAW,EAAK6F,MAAM7F,UACtBE,SAAU,EAAK2F,MAAM3F,SACrByZ,aAAc,EAAK9T,MAAM8T,aAEzBza,WAAY,EAAK2G,MAAM3G,WACvBC,aAAc,EAAK0G,MAAM1G,aACzBC,cAAe,EAAKyG,MAAMzG,cAE1Bwa,SAAU,EAAK/T,MAAM+T,SACrBC,YAAa,EAAKhU,MAAMgU,aAI5Btf,eAAwBsM,KACzB,OAppBX,gCAupBI,WAAoB,WAChBnJ,YAAW,WACP,IAAImJ,EAAO,CACP9G,UAAW,EAAK8F,MAAM9F,UACtBC,UAAW,CACP6B,IAAK,EACLkE,UAAWxL,cACXogB,OAAQ,EAAK9U,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAY7F,OAAS,GACjEsH,KAAM,EAAKpc,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAYyB,KAAO,GAC7DC,GAAI,EAAKrc,MAAM8a,UACfwB,GAAI,EAAKtc,MAAM4a,UACf2B,GAAI,EAAKvc,MAAM6a,UACf2B,SAAU,EAAKxc,MAAM2b,WAAa,EAAI,EACtC7B,WAAY,EAAK9Z,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAYb,WAAa,EACzEllB,QAAS,EAAKoL,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAY/lB,QAAU,EACnEwF,SAAU,EAAK4F,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAYvgB,SAAW,EACrEqiB,GAAI,EAAKzc,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAY8B,GAAK,GACzDtC,WAAY,EAAKna,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAYR,WAAa,GAE7E9f,SAAU,EAAK2F,MAAM3F,SACrByZ,aAAc,EAAK9T,MAAM8T,aAEzBza,WAAY,EAAK2G,MAAM3G,WACvBC,aAAc,EAAK0G,MAAM1G,aACzBC,cAAe,EAAKyG,MAAMzG,cAE1Bwa,SAAU,EAAK/T,MAAM+T,SACrBC,YAAa,EAAKhU,MAAMgU,aAGxBhT,EAAK7G,UAAU2a,OAAO9c,OAAS,GAAKgJ,EAAK7G,UAAUiiB,KAAKpkB,OAAS,GACjE,EAAK4H,SAAS,CACVzF,UAAW6G,EAAK7G,YAIxBzF,eAAwBsM,GAGxB,IAAI5K,EAAW1B,gBAEiE,GAA5EG,SAAS,EAAKmL,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAYb,WAAa,GAClEjlB,SAASuB,GAAY,EACrB1B,YAAqB,GAErBA,YAAqB,GAGzBA,YAAqBG,SAAS,EAAKmL,MAAM2a,YAAc,EAAK3a,MAAM2a,YAAY/lB,QAAU,IAG5F,IAAI0D,EAAO,EAAK0H,MAAM3G,WAGJ,GAFD,EAAK2G,MAAM9F,UAGZ,GAAR5B,EACA,EAAKsH,SAAS,CACVsa,UAAW,EAAKla,MAAM2a,aAA8D,GAA/C9lB,SAAS,EAAKmL,MAAM2a,YAAYR,YAAmB,EAAKna,MAAMoa,KAAKC,IAAM,EAAKra,MAAMoa,KAAKE,WAGlI,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKE,WAInC,EAAK1a,SAAS,CACVsa,UAAW,EAAKla,MAAMoa,KAAKG,QAGpC,OA5tBX,0BA+tBI,WAAc,eACN5jB,EAAU,GACV6hB,EAAY9jB,aAEZgD,KAAKsI,MAAM9F,UAAU,GAAK,GAAwC,GAAnCrF,SAAS6C,KAAKsI,MAAM3G,aAC9C3B,KAAKsI,MAAM7F,WAAczC,KAAKsI,MAAM7F,UAAUC,UAcvDoe,EAAUnhB,SAAQ,SAAAiF,GACd3F,EAAQW,KAAK,CACTC,QAAS+E,EAAG/E,QACZV,MAAOyF,EAAGzF,WAIlBqB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,qBACN8B,SAAU1C,KAAKsI,MAAM9F,UAAU,GAAK,EAA1B,UAA8BxC,KAAKsI,MAAM7F,UAAUC,gBAAnD,QAA+D,EAA/D,UAAmE1C,KAAKsI,MAAM3F,gBAA9E,QAA0F,EACpGN,WAAYrC,KAAKsI,MAAM9F,UAAU,EACjCc,KAAMtD,KAAKsI,MAAM1G,aACjBpC,KAAMnC,KAAKC,UAAW2B,OAE3B+B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACvBA,EAAKG,GASN,EAAK6G,SAAS,CACV4b,SAAU5iB,EAAKoI,OATnB,EAAKpB,SAAS,CACViG,MAAO,CACHvF,MAAO,iBACPzF,KAAMjC,EAAKiC,MAEfqX,WAAW,QAtCfxa,KAAKkI,SAAS,CACViG,MAAO,CACHvF,MAAO,iBACPzF,KAAM,kDAEVqX,WAAW,EACX7Y,WAAY,QA3uBhC,wBA40BI,WAAY,WACR,GAA4B,GAAxB3B,KAAKglB,gBAA0B,CAC/BhlB,KAAKglB,iBAAkB,EAEvBhlB,KAAKkI,SAAS,CACV2S,QAAQ,IAGZ,IAAInb,EAAW,GACXohB,EAAY9jB,aACZsC,EAAWtC,gBAEf8jB,EAAUnhB,SAAS,SAACZ,GACZA,EAAKI,MAAQ,GACbO,EAASE,KAAK,CACVvB,KAAMU,EAAKV,KACXc,MAAOJ,EAAKI,MACZxB,MAAOoB,EAAKgB,UACZF,QAASd,EAAKc,QACd6E,OAAQpF,EAAS0E,MAAM,SAACkZ,GAAD,OAAWA,EAAM5Y,IAAMvF,EAAKc,WAA3C,YAKpB,IAAIolB,GAAiB,EACjBC,GAAe,EACfC,GAAe,EA8BnB,GA5BAzlB,EAASC,SAAS,SAACZ,IAEe,GAAzB5B,SAAS4B,EAAK2F,SAEU,GAAzBvH,SAAS4B,EAAK2F,SAEW,GAAzBvH,SAAS4B,EAAK2F,SAEW,IAAzBvH,SAAS4B,EAAK2F,SAEW,IAAzBvH,SAAS4B,EAAK2F,SAEW,IAAzBvH,SAAS4B,EAAK2F,UAEdvH,SAAS4B,EAAKI,OAAS,IAEvB8lB,GAAiB,GAGS,IAA1B9nB,SAAS4B,EAAKc,UAAkB1C,SAAS4B,EAAKI,OAAS,IACvD+lB,GAAe,GAGW,IAA1B/nB,SAAS4B,EAAKc,UAAkB1C,SAAS4B,EAAKI,OAAS,IACvDgmB,GAAe,MAIlBF,GAAkC,GAAhBC,GAA2BD,GAAkC,GAAhBE,EAWhE,OATAnlB,KAAKkI,SAAS,CACVwb,eAAe,EACf7I,QAAQ,SAGZ1a,YAAW,WACP,EAAK6kB,iBAAkB,IACxB,KAIHhlB,KAAKglB,iBAAkB,EACvBhlB,KAAKolB,oBAl5BrB,4BAu5BI,WAAgB,WACZ,GAA4B,GAAxBplB,KAAKglB,gBAA0B,CAC/BhlB,KAAKglB,iBAAkB,EAEvBK,aAAarlB,KAAKslB,yBAElBtlB,KAAKkI,SAAS,CACVwb,eAAe,EACf7I,QAAQ,IAGZ,IAAI0K,EAAUvlB,KAAKsI,MAAMka,UAAUxe,MAAM,SAACjF,GAAD,OAAUA,EAAK6B,MAAQ,EAAK0H,MAAM+T,YACvE3c,EAAW,GACC1C,aAEN2C,SAAS,SAACZ,GACZA,EAAKI,MAAQ,GACbO,EAASE,KAAK,CACVvB,KAAMU,EAAKV,KACXc,MAAOJ,EAAKI,MACZxB,MAAOoB,EAAKgB,UACZuE,GAAIvF,EAAKc,aAKrBW,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,kBACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,aAET8mB,SAAUzmB,KAAKC,UAAW,CAAE6J,MAA4C,GAArChK,SAAU6C,KAAKsI,MAAM3G,YAAoB,EAAI3B,KAAKsI,MAAM1G,aAAe,IAAM5B,KAAKsI,MAAMzG,gBAC3H2jB,UAAWxlB,KAAKsI,MAAM9F,UACtBijB,QAASzlB,KAAKsI,MAAM3F,SACpB+iB,QAAS1lB,KAAKsI,MAAM8T,aACpBuJ,QAAS3lB,KAAKsI,MAAM7F,UAAYpF,KAAKC,UAAU0C,KAAKsI,MAAM7F,WAAa,GACvEwZ,IAAKsJ,EAAQ3c,MACb2c,QAASloB,KAAKC,UAAUioB,GACxB/lB,KAAMnC,KAAKC,UAAUoC,GACrBqB,WAAYf,KAAKsI,MAAM4b,eAE5BljB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE5Bf,YAAW,WACP,EAAK6kB,iBAAkB,IACxB,KAEH7kB,YAAW,WACP,EAAK+H,SAAS,CACV2S,QAAQ,IAGR3Z,EAAKG,IACL,EAAK6G,SAAS,CACV6b,YAAY,EACZK,aAAcljB,IAGlB,EAAKokB,wBAA0BnlB,YAAW,WACtC,EAAK+H,SAAS,CACV6b,YAAY,EACZK,aAAc,SAEO,IAA1B,EAAKwB,qBAER,EAAK1d,SAAS,CACViG,MAAO,CACHvF,MAAO,iBACPzF,KAAMjC,EAAKib,UAEf3B,WAAW,MAGpB,WAp+BnB,0BAy+BI,WAAc,WACN4C,EAAS5T,SAASC,cAAc,kBAAkBtC,MAElDiW,EAAO9c,OAAS,GAAKN,KAAKsI,MAAM0b,YAAY1jB,OAAS,GACrDE,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,oBACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,aACTogB,OAAQA,EAAO,IAAIpd,KAAKsI,MAAM0b,gBAEnChjB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACvBA,EAAKG,GASgB,IAAlBH,EAAKoI,KAAKob,KACV,EAAKxc,SAAS,CACViG,MAAO,CACHvF,MAAO,iBACPzF,KAAM,4CAEVqX,WAAW,KAGf,EAAKtS,SAAS,CACV+a,YAAa/hB,EAAKoI,OAEtB,EAAKuc,sBApBT,EAAK3d,SAAS,CACViG,MAAO,CACHvF,MAAO,iBACPzF,KAAMjC,EAAKiC,MAEfqX,WAAW,SA9/BnC,uBAohCI,WAAW,WACPha,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,YACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,aAETke,SAAUlb,KAAKsI,MAAM8b,aAAalJ,SAClCxY,SAAU1C,KAAKsI,MAAM8b,aAAa1hB,aAEvC1B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACV,GAAdA,EAAI,GACJ,EAAKgH,SAAS,CACViG,MAAO,CACHvF,MAAO,4CACPzF,KAAMjC,EAAKib,UAEf3B,WAAW,KAGfxd,WAAoB,IAgBpBA,eAdW,CACPwF,UAAW,IACXC,UAAW,GACXE,SAAU,EACVyZ,aAAc,GAEdza,WAAY,IACZC,aAAc,GACdC,cAAe,GAEfwa,SAAU,GACVC,YAAa,KAKjBnc,YAAW,WACPlC,OAAOgU,SAASM,SAAW,IAAI,EAAKjK,MAAME,UAAU,aACrD,WA/jCnB,qBAokCI,SAAQlE,GAAG,WACHwY,QAAQ,gCACRtc,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,eACNC,QAASb,KAAKsI,MAAME,UACpB4R,QAASpd,aACT8oB,QAASxhB,MAEdtD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,EAAKgH,SAAS,CACV6a,QAAS7hB,SAllC7B,2BAwlCI,SAAcN,GACVZ,KAAKkI,SAAS,CACV+b,WAAYrjB,MA1lCxB,6BA8lCI,WACoC,IAA5BZ,KAAKsI,MAAMzG,eACX7B,KAAK+lB,cAAc,CAAChM,OAAQ,CAAC5S,MAAO,KACpCnH,KAAKkI,SAAS,CACVqb,kBAAkB,KAGtBvjB,KAAKkI,SAAS,CACVqb,kBAAkB,MAtmClC,oBA2mCI,WAAS,WACDyC,EAAWhmB,KAAKsI,MAAMka,UAAUxe,MAAM,SAACjF,GAAD,OAAUA,EAAK6B,MAAQ,EAAK0H,MAAM+T,YAE5E,OACI,gBAACpS,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,2CAEtB,gBAACN,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAAC8K,EAAA,EAAD,CAAUC,KAAM5T,KAAKsI,MAAMuS,OAAQzQ,MAAO,CAAEoB,OAAQ,GAAID,MAAO,SAC3D,gBAACsI,EAAA,EAAD,CAAkBtI,MAAM,aAG5B,gBAACtB,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAnC,YAGJ,gBAACpB,EAAA,EAAD,CAAQC,QAAM,GACV,gBAACC,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBC,MAAO,CAAEM,WAAY,IAC5G,gBAACW,EAAA,EAAD,CAAQJ,SAAS,SAASb,MAAO,CAAEkB,gBAAiB,OAAQC,MAAO,OAAQC,OAAQ,GAAKC,UAAW,GAC/F,gBAACC,EAAA,EAAD,CAAMvE,MAAOnH,KAAKsI,MAAM9F,UAAWoJ,SAAU5L,KAAK6L,UAAUC,KAAK9L,MAAO2L,aAAW,sBAAuBvB,MAAO,CAAE2B,eAAgB,WAC/H,gBAACC,GAAA,GAAD,QAAKC,MAAM,YAAexE,GAAU,GAApC,CAAwCyE,eAAe,KACvD,gBAACF,GAAA,GAAD,QAAKC,MAAM,aAAgBxE,GAAU,GAArC,CAAyCyE,eAAe,OAGhE,gBAAC,GAAD,CAAU/E,MAAOnH,KAAKsI,MAAM9F,UAAW4E,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC7D,gBAACmY,GAAA,EAAD,CAAa5T,UAAU,YACnB,gBAACmV,GAAA,EAAD,CAAYjiB,KAAK,QAAQ8I,MAAQnH,KAAKsI,MAAM7F,UAAYzC,KAAKsI,MAAM7F,UAAU6B,GAAK,EAAIsH,SAAU5L,KAAKugB,YAChGvgB,KAAKsI,MAAMya,QAAQjf,KAAI,SAAC/E,EAAMwG,GAAP,OACpB,uBAAKA,IAAKA,EAAK4E,UAAU,WACrB,gBAACsV,GAAA,EAAD,CAAkBtY,MAAOpI,EAAKuF,GAAIqb,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAQlN,EAAKyJ,UAAU,KAAKzJ,EAAKqe,OAAO,IAAIre,EAAK2lB,MAA4B,GAArBvnB,SAAS4B,EAAK6lB,IAAW,GAAK,SAAS7lB,EAAK6lB,KAA4B,GAArBznB,SAAS4B,EAAK8lB,IAAW,GAAK,SAAS9lB,EAAK8lB,KAA4B,GAArB1nB,SAAS4B,EAAK4lB,IAAW,GAAK,SAAS5lB,EAAK4lB,MAChQ,gBAAC,IAAD,CAAiB7X,QAAS,EAAKmZ,QAAQna,KAAK,EAAM/M,EAAKuF,IAAKgJ,KAAM8G,cAKlF,gBAACS,GAAA,EAAD,KACI,gBAACG,GAAA,EAAD,CACIG,gBAAc,kBACd7Q,GAAG,kBAEH,gBAAC,IAAD,CAAY4G,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,WAApD,gBAEJ,gBAACmL,GAAA,EAAD,CAAkBnL,UAAU,WACxB,2BACI,gBAAC+b,GAAA,GAAD,CACIC,UAAQ,EACR7hB,GAAG,gBACHka,OAAQxe,KAAKomB,aAAata,KAAK9L,MAC/BqmB,QAASrmB,KAAKsI,MAAMqb,SAAS7f,KAAI,SAACwiB,GAAD,OAAYA,EAAOnf,SACpDof,YAAa,SAAC7d,GAAD,OACT,gBAAC4V,GAAA,GAAD,UAAe5V,EAAf,CAAuBuD,MAAM,QAAQwH,OAAO,SAASvI,QAAQ,iBAGrE,gBAACoT,GAAA,EAAD,CACIrS,MAAM,MACNf,QAAQ,WACR/D,MAAOnH,KAAKsI,MAAM0b,YAClBpY,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAE8b,YAAahc,EAAM+R,OAAO5S,SAC9DqX,OAAQxe,KAAKomB,aAAata,KAAK9L,SAGvC,2BACI,gBAACse,GAAA,EAAD,CACIrS,MAAM,UACNf,QAAQ,WACR/D,MAAOnH,KAAKsI,MAAM4a,UAClBtX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEgb,UAAWlb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,QAEzC,gBAACse,GAAA,EAAD,CACIrS,MAAM,OACNf,QAAQ,WACR/D,MAAOnH,KAAKsI,MAAM6a,UAClBvX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEib,UAAWnb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,QAEzC,gBAACse,GAAA,EAAD,CACIrS,MAAM,WACNf,QAAQ,WACR/D,MAAOnH,KAAKsI,MAAM8a,UAClBxX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEkb,UAAWpb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,SAG7C,2BACI,gBAACiN,EAAA,EAAD,CAAaC,kBAAgB,EAAChC,QAAQ,YAAYf,UAAU,iBACxD,gBAACiD,EAAA,EAAD,CAAQjD,WAAsC,IAA1BnK,KAAKsI,MAAM2b,WAAsB,SAAW,GAAKnX,QAAU9M,KAAKwmB,cAAc1a,KAAK9L,MAAM,IAA7G,oBACA,gBAACoN,EAAA,EAAD,CAAQjD,WAAsC,IAA1BnK,KAAKsI,MAAM2b,WAAuB,SAAW,GAAKnX,QAAU9M,KAAKwmB,cAAc1a,KAAK9L,MAAM,IAA9G,4BAMpB,gBAAC,GAAD,CAAUmH,MAAOnH,KAAKsI,MAAM9F,UAAW4E,MAAO,GAC1C,uBAAKgD,MAAO,CAAExD,MAAO,OAAQ4D,QAAS,OAAQkC,cAAe,WACxD1M,KAAKsI,MAAM+Z,UAAUve,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,uBAAK4E,UAAU,SAAS7F,GAAI,OAAOvF,EAAKuF,GAAIiB,IAAKA,EAAKuH,QAAS,EAAKwV,UAAUxW,KAAK,EAAM/M,EAAKuF,KAC1F,gBAAC,IAAD,CAAY4G,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqW,OAChD,gBAAC,IAAD,CAAYlK,QAAQ,KAAKC,UAAU,QAAQpM,EAAKsW,KAAhD,4BAMS,GAAxBrV,KAAKsI,MAAM9F,UACR,2BACI,wBAAM4b,YAAU,EAACC,aAAa,OAC1B,gBAACC,GAAA,EAAD,CACIlU,MAAO,CAAExD,MAAO,QAChBtC,GAAG,8BACH2H,MAAM,sBACNwa,WAAS,EACTC,QAAS,EACTvf,MAAOnH,KAAKsI,MAAM8T,aAClBxQ,SAAU5L,KAAK2mB,cACfzb,QAAQ,eAKpB,KAEJ,2BACI,gBAAC6T,GAAA,EAAD,CAAa5T,UAAU,YACnB,gBAACyb,GAAA,EAAD,CAAWzb,UAAU,UAArB,UACA,gBAACmV,GAAA,EAAD,CAAY3U,aAAW,OAAOtN,KAAK,OAAO8I,MAAOnH,KAAKsI,MAAM+T,SAAUzQ,SAAU5L,KAAK6mB,WAChF7mB,KAAKsI,MAAMka,UAAU1e,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,gBAACka,GAAA,EAAD,CAAkBla,IAAKA,EAAK4B,MAAOpI,EAAK6B,KAAM+e,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAOlN,EAAK6J,cAK9F,2BACI,gBAACmW,GAAA,EAAD,CAAa5T,UAAU,YACnB,gBAACyb,GAAA,EAAD,CAAWzb,UAAU,UAArB,sBACA,gBAACmV,GAAA,EAAD,CAAY3U,aAAW,QAAQtN,KAAK,QAAQ8I,MAAOnH,KAAKsI,MAAM3G,WAAYiK,SAAU5L,KAAK8mB,aACrF,gBAACrH,GAAA,EAAD,CAAkBtY,MAAM,IAAIwY,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAM,sBACtD,gBAACwT,GAAA,EAAD,CAAkBtY,MAAM,IAAIwY,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAM,iBAIxC,GAAzBjM,KAAKsI,MAAM3G,WACR,2BACI,gBAACod,GAAA,EAAD,CAAa3U,MAAO,CAAExD,MAAO,QACzB,gBAACkY,GAAA,EAAD,CAAYiI,QAAQ,qBAApB,QACA,gBAAC/H,GAAA,EAAD,CACEE,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAM1G,aAClBgK,SAAU5L,KAAK+lB,cACfiB,WAAY,CACV1iB,GAAI,sBAGHtE,KAAKsI,MAAMsb,UAAU9f,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4B,MAAOpI,EAAKuE,MAAOvE,EAAKoE,WAIxD,gBAAC4b,GAAA,EAAD,CAAa3U,MAAO,CAAExD,MAAO,QACzB,gBAACkY,GAAA,EAAD,CAAYiI,QAAQ,sBAApB,SACA,gBAAC/H,GAAA,EAAD,CACEE,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAMzG,cAClB+J,SAAU5L,KAAKinB,eACfD,WAAY,CACV1iB,GAAI,uBAGHtE,KAAKsI,MAAMwb,SAAShgB,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4B,MAAOpI,EAAKoI,OAAQpI,EAAKoE,YAM7D,KAGJ,2BACI,gBAAC,IAAD,CAAY+H,QAAQ,KAAKC,UAAU,MAAnC,gBAEJ,2BACI,yBAAOhB,UAAU,aACb,6BACKnK,KAAKsI,MAAMqZ,eAAe7d,KAAI,SAAC/E,EAAMwG,GAAP,OAC3B,gBAACob,GAAD,CAAUpb,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,YAExCZ,KAAKsI,MAAM6Z,gBAAgBre,KAAI,SAAC/E,EAAMwG,GAAP,OAC5B,gBAACob,GAAD,CAAUpb,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,aAGzC,sBAAIuJ,UAAU,eACV,sBAAI+c,QAAQ,KACR,gBAAC,IAAD,CAAYta,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,IAAjE,wDACA,2BACA,gBAAC,IAAD,CAAYyC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,IAAjE,kDAGPnK,KAAKsI,MAAMsZ,cAAc9d,KAAI,SAAC/E,EAAMwG,GAAP,OAC1B,gBAACob,GAAD,CAAUpb,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,YAG7C,6BACI,0BACI,sBAAIsmB,QAAQ,KACR,gBAAC,IAAD,CAAY/b,UAAU,QAAtB,cAEJ,0BACI,gBAAC,IAAD,CAAYyB,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAanK,KAAKsI,MAAMwZ,OAAzF,IAAiG,gBAAC,GAAD,CAAOlb,MAAM,KAAKE,QAAQ,oBAGnI,0BACI,sBAAIogB,QAAQ,KACR,gBAAC,IAAD,CAAY/b,UAAU,QAAtB,WAEJ,0BACI,gBAAC,IAAD,CAAYyB,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAcnK,KAAKsI,MAAMwZ,OAAS9hB,KAAKsI,MAAM5J,SAA9G,IAAyH,gBAAC,GAAD,CAAOkI,MAAM,KAAKE,QAAQ,uBAO9I,GAAxB9G,KAAKsI,MAAM9F,UACR,uBAAK2H,UAAU,eACX,2BACI,gBAAC4U,GAAA,EAAD,KACI,gBAACD,GAAA,EAAD,CAAYiI,QAAQ,6BAApB,uBACA,gBAACI,GAAA,EAAD,CACIvmB,KAAK,SACL0D,GAAG,4BACH6C,MAAOnH,KAAKsI,MAAMgU,YAClB1Q,SAAU5L,KAAKonB,aACfC,aAAc,gBAAC,GAAD,CAAOvgB,QAAQ,yBAM7C,KAEJ,uBAAKqD,UAAU,cACX,2BACI,gBAACmd,GAAA,EAAD,CAAOnc,UAAU,MAAMhB,UAAU,cAC7B,gBAACod,GAAA,EAAD,CACI/I,OAAQxe,KAAKoB,WAAW0K,KAAK9L,MAC7BmH,MAAOnH,KAAKsI,MAAM4b,WAClBtY,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEgc,WAAYlc,EAAM+R,OAAO5S,SAC7DqgB,YAAY,aAEhB,gBAACC,GAAA,EAAD,CAASC,YAAY,aACrB,gBAAC,IAAD,CAAYnc,MAAM,UAAUI,aAAW,aAAamB,QAAS9M,KAAKoB,WAAW0K,KAAK9L,OAC9E,gBAAC2nB,GAAA,EAAD,QAGP3nB,KAAKsI,MAAM6b,eAAe7jB,OAAS,EAChC,uBAAK6J,UAAU,aACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,kBAA0DnL,KAAKsI,MAAM6b,iBAGzE,MAGR,2BACI,gBAAClX,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS9M,KAAK4nB,WAAW9b,KAAK9L,OAC9H,gBAACoN,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,uBAQpB,gBAACJ,EAAA,EAAD,CAAQ2D,MAAI,GACR,gBAACzD,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,wBACvE,gBAACkB,EAAA,EAAD,CAAQJ,SAAS,SAASb,MAAO,CAAEkB,gBAAiB,OAAQC,MAAO,OAAQC,OAAQ,GAAKC,UAAW,GAC/F,gBAACC,EAAA,EAAD,CAAMvE,MAAOnH,KAAKsI,MAAM9F,UAAWoJ,SAAU5L,KAAK6L,UAAUC,KAAK9L,MAAO2L,aAAW,sBAAuBvB,MAAO,CAAE2B,eAAgB,WAC/H,gBAACC,GAAA,GAAD,QAAKC,MAAM,YAAexE,GAAU,GAApC,CAAwC2C,MAAO,CAAExD,MAAO,OAASsF,eAAe,KAChF,gBAACF,GAAA,GAAD,QAAKC,MAAM,aAAgBxE,GAAU,GAArC,CAAyC2C,MAAO,CAAExD,MAAO,OAASsF,eAAe,OAGzF,gBAAC,GAAD,CAAU/E,MAAOnH,KAAKsI,MAAM9F,UAAW4E,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC7D,uBAAKuD,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAE8a,YAAY,MAClE,gBAAC,IAAD,CAAY9X,QAAQ,KAAKC,UAAU,QAAnC,UAAkDnL,KAAKsI,MAAM7F,UAAYzC,KAAKsI,MAAM7F,UAAU+F,UAAU,KAAKxI,KAAKsI,MAAM7F,UAAU2a,OAAO,IAAIpd,KAAKsI,MAAM7F,UAAUiiB,KAAK,SAAS1kB,KAAKsI,MAAM7F,UAAUmiB,GAAG,SAAS5kB,KAAKsI,MAAM7F,UAAUoiB,GAAG,SAAS7kB,KAAKsI,MAAM7F,UAAUkiB,GAAK,MAGpR,gBAAC,GAAD,CAAUxd,MAAOnH,KAAKsI,MAAM9F,UAAW4E,MAAO,EAAGgD,MAAO,CAAExD,MAAO,SAC7D,uBAAKuD,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEob,iBAAiB,MAC3E,gBAAC,IAAD,CAAYpY,QAAQ,KAAKC,UAAU,QAAnC,UAAmDnL,KAAKsI,MAAM3F,SAAW,EAAI3C,KAAKsI,MAAM+Z,UAAUre,MAAM,SAACjF,GAAD,OAAUA,EAAKuF,IAAM,EAAKgE,MAAM3F,YAA3D,KAAgF,MAIjK,uBAAKwH,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEqb,kBAAkB,MACxE,gBAAC,IAAD,CAAYrY,QAAQ,KAAKC,UAAU,QAAnC,eAAgF,GAAzBnL,KAAKsI,MAAM3G,WAAkB,oBAAsB3B,KAAKsI,MAAM1G,aAAa,IAAI5B,KAAKsI,MAAMzG,gBAErJ,uBAAKsI,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsb,iBAAiB,MACvE,gBAAC,IAAD,CAAYtY,QAAQ,KAAKC,UAAU,QAAnC,WAAoD6a,EAAWA,EAAQ,MAAY,KAEvF,uBAAK5b,MAAO,CAAEgC,UAAW,KACrB,gBAACkb,GAAA,EAAD,CAAOnc,UAAU,MAAMhB,UAAU,cAC7B,gBAACod,GAAA,EAAD,CACI/I,OAAQxe,KAAKoB,WAAW0K,KAAK9L,MAC7BmH,MAAOnH,KAAKsI,MAAM4b,WAClBtY,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEgc,WAAYlc,EAAM+R,OAAO5S,SAC7DqgB,YAAY,aAEhB,gBAACC,GAAA,EAAD,CAASC,YAAY,aACrB,gBAAC,IAAD,CAAYnc,MAAM,UAAUI,aAAW,aAAamB,QAAS9M,KAAKoB,WAAW0K,KAAK9L,OAC9E,gBAAC2nB,GAAA,EAAD,QAGP3nB,KAAKsI,MAAM6b,eAAe7jB,OAAS,EAChC,uBAAK6J,UAAU,aACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,kBAA0DnL,KAAKsI,MAAM6b,iBAGzE,MAIiB,GAAxBnkB,KAAKsI,MAAM9F,UACR,uBAAK2H,UAAU,kBAAkBC,MAAO,CAAEM,WAAY,KAClD,wBAAM0T,YAAU,EAACC,aAAa,OAC1B,gBAACC,GAAA,EAAD,CACIlU,MAAO,CAAExD,MAAO,QAChBtC,GAAG,8BACH2H,MAAM,sBACNwa,WAAS,EACTC,QAAS,EACTvf,MAAOnH,KAAKsI,MAAM8T,aAClBxQ,SAAU5L,KAAK2mB,cACfzb,QAAQ,eAKpB,KAGqB,GAAxBlL,KAAKsI,MAAM9F,WAAyC,QAAvBxC,KAAKsI,MAAM+T,SACrC,uBAAKlS,UAAU,kBAAkBC,MAAO,CAAEM,WAAY,KAClD,gBAACqU,GAAA,EAAD,CAAc7T,QAAQ,WAAWd,MAAO,CAAExD,MAAO,SAC7C,gBAACkY,GAAA,EAAD,CAAYiI,QAAQ,+BAApB,uBACA,gBAACc,GAAA,EAAD,CACIvjB,GAAG,8BACH1D,KAAK,SACLwJ,MAAO,CAAExD,MAAO,QAChBO,MAAOnH,KAAKsI,MAAMgU,YAClB1Q,SAAU5L,KAAKonB,aACfC,aAAc,gBAAC,GAAD,CAAOvgB,QAAQ,qBAC7BmF,MAAM,0BAKlB,KAGJ,2BACI,uBAAK9B,UAAU,eACVnK,KAAKsI,MAAMqZ,eAAe7d,KAAI,SAAC/E,EAAMwG,GAAP,OAC3B,gBAAC8b,GAAD,CAAgB9b,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,YAG9CZ,KAAKsI,MAAM6Z,gBAAgBre,KAAI,SAAC/E,EAAMwG,GAAP,OAC5B,gBAAC8b,GAAD,CAAgB9b,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,aAG/C,uBAAKuJ,UAAU,uBACX,gBAAC,IAAD,CAAYyC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,IAAjE,wDACA,2BACA,gBAAC,IAAD,CAAYyC,cAAY,EAAC1B,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,IAAjE,mDAGHnK,KAAKsI,MAAMsZ,cAAc9d,KAAI,SAAC/E,EAAMwG,GAAP,OAC1B,gBAAC8b,GAAD,CAAgB9b,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,aASvD,uBAAKuJ,UAAU,eACX,2BACI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,QAAnC,YACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAcnK,KAAKsI,MAAMwZ,OAA7E,IAAsF,gBAAC,GAAD,CAAOlb,MAAM,KAAKE,QAAQ,kBAEpH,2BACI,gBAAC,IAAD,CAAYoE,QAAQ,KAAKC,UAAU,QAAnC,YACA,gBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,aAAcnK,KAAKsI,MAAMwZ,OAAS9hB,KAAKsI,MAAM5J,SAAjG,IAA4G,gBAAC,GAAD,CAAOkI,MAAM,KAAKE,QAAQ,kBAE1I,2BACI,gBAACmG,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS9M,KAAK4nB,WAAW9b,KAAK9L,OAC9H,gBAACoN,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,uBAOpB,gBAAC4J,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMkS,UACjBvG,QAAS,kBAAM,EAAK/L,SAAS,CAAEsS,WAAW,KAC1CrQ,UAAU,aAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAAmBnK,KAAKsI,MAAM6F,MAAMvF,OACxF,gBAAC,IAAD,CAAiBuB,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsS,WAAW,KAAUlN,KAAM8G,QACnG,gBAACiJ,EAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAmBnT,UAAU,iBAAiBnK,KAAKsI,MAAM6F,MAAMhL,OAEnE,gBAACoa,GAAA,EAAD,KACI,gBAACtQ,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsS,WAAW,MAC1I,gBAACpN,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,aAKZ,gBAAC4J,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAM0a,WACjBzO,WAAW,EACXN,QAAS,kBAAM,EAAK/L,SAAS,CAAE8a,YAAY,KAC3C7Y,UAAU,oBAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,kBACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAE8a,YAAY,KAAU1V,KAAM8G,QACpG,gBAACiJ,EAAA,EAAD,KACI,gBAAC0B,GAAA,EAAD,CAAa5T,UAAU,YACnB,gBAACmV,GAAA,EAAD,CAAYjiB,KAAK,QAAQ8I,MAAQnH,KAAKsI,MAAM7F,UAAYzC,KAAKsI,MAAM7F,UAAU6B,GAAK,EAAIsH,SAAU5L,KAAKugB,YAChGvgB,KAAKsI,MAAMya,QAAQjf,KAAI,SAAC/E,EAAMwG,GAAP,OACpB,uBAAKA,IAAKA,EAAK4E,UAAU,WACrB,gBAACsV,GAAA,EAAD,CAAkBtY,MAAOpI,EAAKuF,GAAIqb,QAAS,gBAACa,GAAA,EAAD,MAAWvU,MAAOlN,EAAKyJ,UAAU,KAAKzJ,EAAKqe,OAAO,IAAIre,EAAK2lB,KAAK,SAAS3lB,EAAK6lB,GAAG,SAAS7lB,EAAK8lB,GAAG,SAAS9lB,EAAK4lB,KAC3J,gBAAC,IAAD,CAAiBrX,KAAM8G,cAKvC,gBAAC,IAAD,CAAYlJ,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,gBAAgB2C,QAAU,WAAQ,EAAK5E,SAAS,CAAE8a,YAAY,EAAOS,eAAe,MAAxI,iBAIR,gBAAC1P,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMmb,cACjBlP,WAAW,EACXN,QAAS,kBAAM,EAAK/L,SAAS,CAAEub,eAAe,KAC9CtZ,UAAU,uBAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,eACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEub,eAAe,KAAUnW,KAAM8G,QACvG,gBAACiJ,EAAA,EAAD,CAAejT,MAAO,CAAEM,WAAY,IAChC,uBAAKP,UAAU,gBAAgBC,MAAO,CAAEM,WAAY,IAChD,gBAACwb,GAAA,GAAD,CACIC,UAAQ,EACR7hB,GAAG,gBACH8F,MAAO,CAAExD,MAAO,QAChB4X,OAAQxe,KAAKomB,aAAata,KAAK9L,MAC/BqmB,QAASrmB,KAAKsI,MAAMqb,SAAS7f,KAAI,SAACwiB,GAAD,OAAYA,EAAOnf,SACpDof,YAAa,SAAC7d,GAAD,OACT,gBAAC4V,GAAA,GAAD,UAAe5V,EAAf,CAAuBuD,MAAM,QAAQwH,OAAO,eAGpD,gBAAC6K,GAAA,EAAD,CACIrS,MAAM,MAEN7B,MAAO,CAAExD,MAAO,QAChBO,MAAOnH,KAAKsI,MAAM0b,YAClBpY,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAE8b,YAAahc,EAAM+R,OAAO5S,SAC9DqX,OAAQxe,KAAKomB,aAAata,KAAK9L,QAEnC,gBAACse,GAAA,EAAD,CACIrS,MAAM,UAEN7B,MAAO,CAAExD,MAAO,QAChBO,MAAOnH,KAAKsI,MAAM4a,UAClBtX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEgb,UAAWlb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,QAEzC,gBAACse,GAAA,EAAD,CACIrS,MAAM,OAEN7B,MAAO,CAAExD,MAAO,QAChBO,MAAOnH,KAAKsI,MAAM6a,UAClBvX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEib,UAAWnb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,QAEzC,gBAACse,GAAA,EAAD,CACIrS,MAAM,WAEN7B,MAAO,CAAExD,MAAO,QAChBO,MAAOnH,KAAKsI,MAAM8a,UAClBxX,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAEkb,UAAWpb,EAAM+R,OAAO5S,SAC5DqX,OAAQxe,KAAK6lB,mBAAmB/Z,KAAK9L,QAEzC,gBAACiN,EAAA,EAAD,CAAaC,kBAAgB,EAAChC,QAAQ,YAAYf,UAAU,iBACxD,gBAACiD,EAAA,EAAD,CAAQjD,WAAsC,IAA1BnK,KAAKsI,MAAM2b,WAAsB,SAAW,GAAKnX,QAAU9M,KAAKwmB,cAAc1a,KAAK9L,MAAM,IAA7G,oBACA,gBAACoN,EAAA,EAAD,CAAQjD,WAAsC,IAA1BnK,KAAKsI,MAAM2b,WAAuB,SAAW,GAAKnX,QAAU9M,KAAKwmB,cAAc1a,KAAK9L,MAAM,IAA9G,yBAGR,gBAACiN,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEub,eAAe,MAC9I,gBAACrW,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,mBAKZ,gBAAC4J,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMgb,gBACjB/O,WAAW,EACXN,QAAS,kBAAM,EAAK/L,SAAS,CAAEob,iBAAiB,KAChDnZ,UAAU,yBAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,cACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEob,iBAAiB,KAAUhW,KAAM8G,QACzG,gBAACiJ,EAAA,EAAD,KACI,uBAAKjT,MAAO,CAAExD,MAAO,OAAQ4D,QAAS,OAAQkC,cAAe,WACxD1M,KAAKsI,MAAM+Z,UAAUve,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,uBAAK4E,UAAW,WAAY,EAAK7B,MAAM3F,UAAY5D,EAAKuF,GAAK,SAAW,IAAMA,GAAI,OAAOvF,EAAKuF,GAAIiB,IAAKA,EAAKuH,QAAS,EAAKwV,UAAUxW,KAAK,EAAM/M,EAAKuF,KAChJ,gBAAC,IAAD,CAAY4G,QAAQ,KAAKC,UAAU,QAAQpM,EAAKqW,OAChD,gBAAC,IAAD,CAAYlK,QAAQ,KAAKC,UAAU,QAAQpM,EAAKsW,KAAhD,6BAOpB,gBAACtB,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMib,iBACjBhP,WAAW,EACXN,QAASjU,KAAK8nB,gBAAgBhc,KAAK9L,MACnCmK,UAAU,yBAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,gBACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS9M,KAAK8nB,gBAAgBhc,KAAK9L,MAAOsN,KAAM8G,QACzF,gBAACiJ,EAAA,EAAD,KACI,uBAAKjT,MAAO,CAAEI,QAAS,OAAQkC,cAAe,WAC1C,gBAACqS,GAAA,EAAD,CAAa3U,MAAO,CAAExD,MAAO,OAAQoK,cAAe,KAChD,gBAAC8N,GAAA,EAAD,CAAYiI,QAAQ,qBAApB,QACA,gBAAC/H,GAAA,EAAD,CACEE,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAM1G,aAClBgK,SAAU5L,KAAK+lB,cACfiB,WAAY,CACV1iB,GAAI,sBAGJ,gBAAC8a,GAAA,EAAD,CAAUjY,MAAO,GAAjB,qBACCnH,KAAKsI,MAAMsb,UAAU9f,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4B,MAAOpI,EAAKuE,MAAOvE,EAAKoE,WAIxD,gBAAC4b,GAAA,EAAD,CAAa3U,MAAO,CAAExD,MAAO,OAAQoK,cAAe,GAAIxG,QAAoC,GAA3BxK,KAAKsI,MAAM1G,aAAoB,OAAS,gBACrG,gBAACkd,GAAA,EAAD,CAAYiI,QAAQ,sBAApB,SACA,gBAAC/H,GAAA,EAAD,CACEE,cAAY,EACZ/X,MAAOnH,KAAKsI,MAAMzG,cAClB+J,SAAU5L,KAAKinB,eACfD,WAAY,CACV1iB,GAAI,uBAGHtE,KAAKsI,MAAMwb,SAAShgB,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC6Z,GAAA,EAAD,CAAU7Z,IAAKA,EAAK4B,MAAOpI,EAAKoI,OAAQpI,EAAKoE,YAK7D,gBAAC8J,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAY2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEqb,kBAAkB,MACjJ,gBAACnW,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,mBAKZ,gBAAC4J,EAAA,EAAD,CACIE,QAAS,kBAAM,EAAK/L,SAAS,CAAEsb,iBAAiB,KAChDhc,kBAAgB,sBAChBoM,KAAM5T,KAAKsI,MAAMkb,gBACjBjP,WAAW,EACXpK,UAAU,yBAEV,gBAACkW,EAAA,EAAD,CAAa/b,GAAG,sBAAsB8F,MAAO,CAAE4G,cAAe,IAA9D,UACA,gBAAC,IAAD,CAAiB7G,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAEsb,iBAAiB,KAAUlW,KAAM8G,QACzG,gBAAC2T,GAAA,EAAD,KACK/nB,KAAKsI,MAAMka,UAAU1e,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,gBAACyiB,GAAA,EAAD,CAAUC,QAAM,EAACnb,QAAS,EAAKob,gBAAgBpc,KAAK,EAAM/M,EAAK6B,MAAO2E,IAAKA,GACvE,gBAAC4iB,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAQhe,MAAO,CAAEmB,MAAO,OAAQD,gBAAiB,SAC9B,QAAbvM,EAAK6B,KACH,gBAAC,IAAD,CAAiB0M,KAAO+a,QAEX,MAAbtpB,EAAK6B,KACD,gBAAC,IAAD,CAAiB0M,KAAOgb,QAExB,gBAAC,IAAD,CAAiBhb,KAAOib,UAIxC,gBAACC,GAAA,EAAD,CAAcC,QAAS1pB,EAAK6J,cAM5C,gBAACmL,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMob,cACjBnP,WAAW,EACXN,QAASjU,KAAKolB,eAAetZ,KAAK9L,MAClCmK,UAAU,6BAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,oCACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS9M,KAAKolB,eAAetZ,KAAK9L,MAAOsN,KAAM8G,QACxF,gBAACiJ,EAAA,EAAD,KACI,uBAAKlT,UAAU,mCACVnK,KAAKsI,MAAMsZ,cAAc9d,KAAI,SAAC/E,EAAMwG,GAAP,OAC1B,gBAAC8b,GAAD,CAAgB9b,IAAKA,EAAKxG,KAAMA,EAAM6B,KAAK,aAIvD,gBAAC2c,GAAA,EAAD,CAAenT,MAAO,CAAE2G,QAAS,YAAaC,cAAe,KACzD,gBAAC/D,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAYC,MAAO,CAAExD,MAAO,QAAUkG,QAAS9M,KAAKolB,eAAetZ,KAAK9L,OAC5J,gBAACoN,EAAA,EAAD,CAAQlC,QAAQ,YAAYd,MAAO,CAAExD,MAAO,QAAUuD,UAAU,8BAAhE,kBAKgB,IAA1BnK,KAAKsI,MAAMyb,WACT,gBAAChQ,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMyb,WACjBxP,WAAW,EACXN,QAAS,kBAAM,EAAK/L,SAAS,CAAE6b,YAAY,KAC3C5Z,UAAU,0BAEV,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,mBAApD,wBACA,gBAAC,IAAD,CAAiBA,UAAU,cAAc2C,QAAS,kBAAM,EAAK5E,SAAS,CAAE6b,YAAY,KAAUzW,KAAM8G,QACpG,gBAACiJ,EAAA,EAAD,CAAejT,MAAO,CAAEI,QAAS,OAAQkC,cAAe,WACb,GAArCvP,SAAU6C,KAAKsI,MAAM3G,YACnB,KAEA,gBAAC,IAAD,CAAYuJ,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,qBAAwFnK,KAAKsI,MAAM1G,aAAe,IAAM5B,KAAKsI,MAAMzG,eAEjG,GAApC1E,SAAU6C,KAAKsI,MAAM9F,WACnB,gBAAC,IAAD,CAAY0I,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,aAAiFnK,KAAKsI,MAAM7F,UACxFzC,KAAKsI,MAAM7F,UAAU+F,UAAU,KAC/BxI,KAAKsI,MAAM7F,UAAU2a,OAAO,IAC5Bpd,KAAKsI,MAAM7F,UAAUiiB,MACkB,GAArCvnB,SAAS6C,KAAKsI,MAAM7F,UAAUmiB,IAAW,GAAK,SAAS5kB,KAAKsI,MAAM7F,UAAUmiB,KACvC,GAArCznB,SAAS6C,KAAKsI,MAAM7F,UAAUoiB,IAAW,GAAK,SAAS7kB,KAAKsI,MAAM7F,UAAUoiB,KACvC,GAArC1nB,SAAS6C,KAAKsI,MAAM7F,UAAUkiB,IAAW,GAAK,SAAS3kB,KAAKsI,MAAM7F,UAAUkiB,IAE9E,MAGJ,gBAAC,IAAD,CAAYzZ,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,WAA8EnK,KAAKsI,MAAMub,aAAe7jB,KAAKsI,MAAMub,aAAaxO,KAAO,IAErG,GAApClY,SAAU6C,KAAKsI,MAAM9F,YACnBxC,KAAKsI,MAAM7F,WAAwD,GAA3CtF,SAAS6C,KAAKsI,MAAM7F,UAAUqiB,UAClD,gBAAC,IAAD,CAAY5Z,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,uBAIJ,KAEFnK,KAAKsI,MAAM4b,WAAW5jB,OAAS,EAC7B,gBAAC,IAAD,CAAY4K,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,aAAgFnK,KAAKsI,MAAM4b,YAE3F,KAEJ,gBAAC,IAAD,CAAYhZ,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,WAA8EnK,KAAKsI,MAAMka,UAAUxe,MAAM,SAACjF,GAAD,OAAUA,EAAK6B,MAAQ,EAAK0H,MAAM+T,YAA7D,OAExC,GAApClf,SAAU6C,KAAKsI,MAAM9F,YAA2C,QAAvBxC,KAAKsI,MAAM+T,SAClDrc,KAAKsI,MAAMgU,YAAYhc,OAAS,EAC5B,gBAAC,IAAD,CAAY4K,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,6BAApD,YAA0FnK,KAAKsI,MAAMgU,YAArG,IAAkH,gBAAC,GAAD,CAAO1V,MAAM,KAAKE,QAAQ,iBAE5I,gBAAC,IAAD,CAAYoE,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,aAEJ,KAGJ,yBAAOA,UAAU,mBACb,6BACKnN,aAAsB8G,KAAI,SAAC/E,EAAMwG,GAAP,OACvBpI,SAAS4B,EAAKI,OAAS,EACnB,sBAAIoG,IAAKA,GACL,0BACI,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAAkBpL,EAAKV,OAE/E,0BACI,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAAkBpL,EAAKI,QAE/E,0BACI,gBAAC,IAAD,CAAY+L,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,4BAA4BpL,EAAKgB,UAArF,IAAgG,gBAAC,GAAD,CAAO6G,MAAM,KAAKE,QAAQ,mBAIlI,QAEP9G,KAAKsI,MAAM6Z,gBAAgBre,KAAI,SAAC/E,EAAMwG,GAAP,OAC5B,sBAAIA,IAAKA,GACL,0BACI,gBAAC,IAAD,CAAY2F,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAAkBpL,EAAKV,OAE/E,0BACI,gBAAC,IAAD,CAAY6M,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAAkBpL,EAAKI,QAE/E,0BACI,gBAAC,IAAD,CAAY+L,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,4BAA4BpL,EAAKL,SAArF,IAA+F,gBAAC,GAAD,CAAOkI,MAAM,KAAKE,QAAQ,sBAI/F,GAApC3J,SAAU6C,KAAKsI,MAAM9F,WACnB,0BACI,sBAAI0kB,QAAQ,KACR,gBAAC,IAAD,CAAYhc,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,kBAApD,aAEJ,0BACI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,4BAA6BnN,cAAjF,IAA0G,gBAAC,GAAD,CAAO4J,MAAM,KAAKE,QAAQ,mBAI5I,MAGR,6BACI,0BACI,sBAAIogB,QAAQ,KACR,gBAAC,IAAD,CAAYhc,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,uBAApD,iBAEJ,0BACI,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,4BAA6BhN,SAASH,iBAA4BG,SAASH,eAA/H,IAAyJ,gBAAC,GAAD,CAAO4J,MAAM,KAAKE,QAAQ,sBAMvM,gBAACyW,GAAA,EAAD,CAAenT,MAAO,CAAE2G,QAAS,YAAaC,cAAe,KAChC,QAAvBhR,KAAKsI,MAAM+T,SACT,qBACIpE,KAAOjY,KAAKsI,MAAM8b,aAAanI,IAAIyM,QACnCve,UAAU,qDAEV,gBAAC8C,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAYC,MAAO,CAAExD,MAAO,SAChH,gBAACwG,EAAA,EAAD,CAAQlC,QAAQ,YAAYd,MAAO,CAAExD,MAAO,OAAQ6M,OAAQ,YAActJ,UAAU,8BAApF,oBAKR,gBAAC8C,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,YAAYC,MAAO,CAAExD,MAAO,QAAUkG,QAAU9M,KAAKgc,UAAUlQ,KAAK9L,OACxJ,gBAACoN,EAAA,EAAD,CAAQlC,QAAQ,YAAYd,MAAO,CAAExD,MAAO,QAAUuD,UAAU,8BAAhE,wBAMhB,SA/1DpB,wBA8FI,SAAiB4D,GACb,IAjdUpG,EAidN2B,EAAO,CACP1I,KAAM,gBACNC,SAndM8G,EAmdYoG,EAldnBpG,EAAKC,MAAM,KAAK,IAmdf2B,KAAM,QAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UArHxB,GAA0BC,aCnb1B,IAAMtR,GAAcC,EAAQ,MAOf4rB,GAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYhiB,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9BkL,MAAO,GACPC,YAAa,GACbU,KAAM,MAGVvM,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAXvB,EAHvB,mDA4CI,WACIsC,KAAK8I,YAAa,IA7C1B,+BAgDI,WAAmB,WACf9I,KAAK8I,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,aAEnB2rB,EAAUtf,UAAU,IAAIrJ,KAAKsI,MAAME,WAAWxH,MAAM,SAAAsI,GAChDA,EAAKC,KAAKO,QAAUR,EAAKC,KAAKO,QAAQwI,QAClC,gBACA,aAAa,EAAKhK,MAAME,UAAU,KAGtC,EAAKN,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,YACvBU,KAAMD,EAAKC,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACM,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,2BACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAE4G,cAAe,KACvC,gBAAC,IAAD,CAAY9F,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,KAAOvJ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGvFrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAE7I,UAvFxB,wBAiBI,SAAiBiE,GACb,IAtBUpG,EAsBN2B,EAAO,CACP1I,KAAM,gBACNC,SAxBM8G,EAwBYoG,EAvBnBpG,EAAKC,MAAM,KAAK,IAwBf2B,KAAM,SAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAxCxB,GAA+BC,aCP/B,IAAMtR,GAAcC,EAAQ,MAOf6rB,GAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYjiB,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9BkL,MAAO,GACPC,YAAa,GACbU,KAAM,MAGVvM,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAXvB,EAHvB,mDA4CI,WACIsC,KAAK8I,YAAa,IA7C1B,+BAgDI,WAAmB,WACf9I,KAAK8I,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,WAEnB4rB,EAAQvf,UAAU,IAAIrJ,KAAKsI,MAAME,WAAWxH,MAAM,SAAAsI,GAC9CA,EAAKC,KAAKO,QAAUR,EAAKC,KAAKO,QAAQwI,QAClC,gBACA,aAAa,EAAKhK,MAAME,UAAU,KAGtC,EAAKN,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,YACvBU,KAAMD,EAAKC,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACM,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,yBACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAE4G,cAAe,KACvC,gBAAC,IAAD,CAAY9F,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,KAAOvJ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGvFrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAE7I,UAvFxB,wBAiBI,SAAiBiE,GACb,IAtBUpG,EAsBN2B,EAAO,CACP1I,KAAM,gBACNC,SAxBM8G,EAwBYoG,EAvBnBpG,EAAKC,MAAM,KAAK,IAwBf2B,KAAM,QAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAxCxB,GAA6BC,aCP7B,IAAMtR,GAAcC,EAAQ,MAOf8rB,GAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYliB,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9BkL,MAAO,GACPC,YAAa,GACbU,KAAM,MAGVvM,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAXvB,EAHvB,mDA4CI,WACIsC,KAAK8I,YAAa,IA7C1B,+BAgDI,WAAmB,WACf9I,KAAK8I,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,eAEnB6rB,EAAYxf,UAAU,IAAIrJ,KAAKsI,MAAME,WAAWxH,MAAM,SAAAsI,GAClDA,EAAKC,KAAKO,QAAUR,EAAKC,KAAKO,QAAQwI,QAClC,gBACA,aAAa,EAAKhK,MAAME,UAAU,KAGtC,EAAKN,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,YACvBU,KAAMD,EAAKC,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACM,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,6BACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAE4G,cAAe,KACvC,gBAAC,IAAD,CAAY9F,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,KAAOvJ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGvFrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAE7I,UAvFxB,wBAiBI,SAAiBiE,GACb,IAtBUpG,EAsBN2B,EAAO,CACP1I,KAAM,gBACNC,SAxBM8G,EAwBYoG,EAvBnBpG,EAAKC,MAAM,KAAK,IAwBf2B,KAAM,iBAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAxCxB,GAAiCC,aCPjC,IAAMtR,GAAcC,EAAQ,MAOf+rB,GAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYniB,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9BkL,MAAO,GACPC,YAAa,GACbU,KAAM,MAGVvM,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAXvB,EAHvB,mDA4CI,WACIsC,KAAK8I,YAAa,IA7C1B,+BAgDI,WAAmB,WACf9I,KAAK8I,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,cAEnB8rB,EAAWzf,UAAU,IAAIrJ,KAAKsI,MAAME,WAAWxH,MAAM,SAAAsI,GACjDA,EAAKC,KAAKO,QAAUR,EAAKC,KAAKO,QAAQwI,QAClC,gBACA,aAAa,EAAKhK,MAAME,UAAU,KAGtC,EAAKN,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,YACvBU,KAAMD,EAAKC,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACM,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,4BACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAE4G,cAAe,KACvC,gBAAC,IAAD,CAAY9F,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,KAAOvJ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGvFrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAE7I,UAvFxB,wBAiBI,SAAiBiE,GACb,IAtBUpG,EAsBN2B,EAAO,CACP1I,KAAM,gBACNC,SAxBM8G,EAwBYoG,EAvBnBpG,EAAKC,MAAM,KAAK,IAwBf2B,KAAM,sBAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAxCxB,GAAgCC,aCPhC,IAAMtR,GAAcC,EAAQ,MAOfgsB,GAAb,6B,IAAA,G,EAAA,E,gaAGI,WAAYpiB,GAAO,4BACf,cAAMA,IADS,gCAFN,GAKT,EAAK2B,MAAQ,CACTC,SAAS,EACTC,UAAW7B,EAAM8B,MAAMC,OAAOhL,SAC9BkL,MAAO,GACPC,YAAa,GACbU,KAAM,MAGVvM,UAAmB2J,EAAM8B,MAAMC,OAAOhL,UAXvB,EAHvB,mDA4CI,WACIsC,KAAK8I,YAAa,IA7C1B,+BAgDI,WAAmB,WACf9I,KAAK8I,YAAa,EAEdU,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1D1L,OAAO2L,SAAS,EAAG,GACnB5M,UAAmB,gBAEnB+rB,EAAa1f,UAAU,IAAIrJ,KAAKsI,MAAME,WAAWxH,MAAM,SAAAsI,GACnDA,EAAKC,KAAKO,QAAUR,EAAKC,KAAKO,QAAQwI,QAClC,gBACA,aAAa,EAAKhK,MAAME,UAAU,KAGtC,EAAKN,SAAU,CACXU,MAAOU,EAAKC,KAAKX,MACjBC,YAAaS,EAAKC,KAAKV,YACvBU,KAAMD,EAAKC,YAlE3B,oBAuEI,WACI,OACI,gCACI,gBAACM,EAAA,EAAD,KACI,6BAAQ7J,KAAKsI,MAAMM,OACnB,wBAAMvK,KAAK,cAAcyL,QAAS9J,KAAKsI,MAAMO,eAGjD,gBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,8BACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,GAAIH,MAAO,CAAE4G,cAAe,KACvC,gBAAC,IAAD,CAAY9F,QAAQ,KAAKC,UAAU,MAAOnL,KAAKsI,MAAMiB,KAAOvJ,KAAKsI,MAAMiB,KAAK8P,OAAS,KAGvFrZ,KAAKsI,MAAMiB,MAAQvJ,KAAKsI,MAAMiB,KAAKO,QACjC,gBAACG,EAAA,EAAD,CAAMlL,MAAI,EAACmL,WAAS,EAAC4D,QAAS,EAAGsD,GAAI,GAAID,GAAI,GAAI5G,GAAI,GAAI8G,GAAI,GAAIlH,UAAU,gBAAgBmP,wBAAyB,CAACC,OAAQvZ,KAAKsI,MAAMiB,KAAKO,WAE7I,UAvFxB,wBAiBI,SAAiBiE,GACb,IAtBUpG,EAsBN2B,EAAO,CACP1I,KAAM,gBACNC,SAxBM8G,EAwBYoG,EAvBnBpG,EAAKC,MAAM,KAAK,IAwBf2B,KAAM,8BAGV,OAAOyE,IAAM,CACTvN,OAAQ,OACRwN,IAAI,2CACJvN,QAAS,CAAE,eAAgB,qCAC3B4I,KAAMxM,GAAYQ,UAAUgM,KAC7BtI,MAAK,SAAAkN,GACJ,GAA0B,MAAvBA,EAAQ,OAAmB,CAC1B,IAAIhN,EAAOgN,EAAQ,KAEnB,MAAO,CACHtF,MAAO1H,EAAKqI,KAAKX,MACjBC,YAAa3H,EAAKqI,KAAKV,YACvBU,KAAMrI,EAAKqI,UAZhB,OAeE,SAAU4E,GACf/F,QAAQC,IAAI8F,UAxCxB,GAAkCC,a,2fCYlC,IAAMtR,GAAcC,EAAQ,MAgBtBisB,G,qCACF,WAAYriB,GAAO,4BACf,cAAMA,IADS,uCAUC,YAChBoC,SAAQ,WACJ,EAAKb,SAAS,CACVxJ,SAAU1B,cAAyBA,gBACnCisB,SAAUjsB,YACVksB,OAAMlsB,qBAZd,EAAKsL,MAAQ,CACT5J,SAAU,EACVuqB,SAAU,GACVC,MAAM,GANK,E,oDAoBnB,SAAsB5Y,EAAWC,GAC7B,OACIvQ,KAAKsI,MAAM5J,WAAa6R,EAAU7R,UAClCsB,KAAKsI,MAAM2gB,WAAa1Y,EAAU0Y,UAClCjpB,KAAKsI,MAAM4gB,OAAS3Y,EAAU2Y,O,oBAItC,WACI,IAAIC,EAAYnsB,YAEhB,OACI,uBAAKmN,UAAU,kBACX,gBAAC,KAAD,CACIwI,GAAI,IAAIwW,EAAU,IAClBvW,OAAQ,EACRzI,UAAU,qDAEV,gBAAC,IAAD,CAAiBmD,KAAO8b,MAAahf,MAAO,CAAEmB,MAA8B,QAAvBvL,KAAKsI,MAAM2gB,SAAqB,QAAU,WAEnG,gBAAC,KAAD,CACItW,GAAI,IAAIwW,EAAU,SAClBvW,OAAQ,EACRzI,UAAU,qDAEV,gBAAC,IAAD,CAAiBmD,KAAO6T,MAAS/W,MAAO,CAAEmB,MAA8B,SAAvBvL,KAAKsI,MAAM2gB,SAAsB,QAAU,YAE3E,IAApBjpB,KAAKsI,MAAM4gB,KACR,gBAAC,KAAD,CACIvW,GAAI,IAAIwW,EAAU,QAClBvW,OAAQ,EACRzI,UAAU,qDAEV,gBAACkf,GAAA,EAAD,CAAOC,aAAetpB,KAAKsI,MAAM5J,SAAW8E,IAAK,IAAQ+H,MAAM,WAC3D,gBAACyB,EAAA,EAAD,CAA0B5C,MAAO,CAAEmf,MAAMvpB,KAAKsI,MAAM2gB,SAAqB,gBAIjF,gBAAC,IAAD,CACI9e,UAAU,oDACV2C,QAAS9M,KAAK2G,MAAMiY,OACpB,gBAACyK,GAAA,EAAD,CAAOC,aAAetpB,KAAKsI,MAAM5J,SAAW8E,IAAK,IAAQ+H,MAAM,WAC3D,gBAACyB,EAAA,EAAD,CAA0B5C,MAAO,CAAEmf,MAAMvpB,KAAKsI,MAAM2gB,SAAqB,gBAIrF,gBAAC,KAAD,CACItW,GAAI,IAAIwW,EAAU,WAClBvW,OAAQ,EACRzI,UAAU,qDAEV,gBAAC,IAAD,CAAiBmD,KAAOkc,MAAiBpf,MAAO,CAAEmB,MAA8B,WAAvBvL,KAAKsI,MAAM2gB,SAAwB,QAAU,YAErF,IAApBjpB,KAAKsI,MAAM4gB,KACR,gBAAC,KAAD,CACIvW,GAAI,IAAIwW,EAAU,WAClBvW,OAAQ,EACRzI,UAAU,qDAEV,gBAAC,IAAD,CAAiBmD,KAAOmc,MAASrf,MAAO,CAAEmB,MAA8B,WAAvBvL,KAAKsI,MAAM2gB,SAAwB,QAAU,WAGlG,gBAAC,IAAD,CACI9e,UAAU,oDACV2C,QAAS9M,KAAK2G,MAAMiY,OAChB,gBAAC,IAAD,CAAiBtR,KAAOmc,MAASrf,MAAO,CAAEmB,MAA8B,WAAvBvL,KAAKsI,MAAM2gB,SAAwB,QAAU,gB,GAtFrF7a,aA8FrC,SAAS1H,GAAMC,GACX,OACI,uBAAKC,MAAQD,EAAMC,MAAQD,EAAMC,MAAQ,KAAMC,OAAO,KAAKC,QAAUH,EAAMG,QAAUH,EAAMG,QAAU,eAAgBC,MAAM,8BACvH,yBACI,wBAAMzC,GAAG,QAAQ0C,EAAE,qxB,IAM7B0iB,G,qCAGF,WAAY/iB,GAAO,4BACf,cAAMA,IADS,gCAFN,IAEM,uCAiBC,WAChB,EAAKmC,YAAa,EAElB,IAAIgY,EAAY9jB,aAEhB,GAAI8jB,EAAUxgB,OAAS,EAAG,CAEtB,IAAIqpB,EAAU,GAEd7I,EAAUhd,KAAI,SAAC/E,GACPA,EAAKI,MAAQ,GACbwqB,EAAQ/pB,KAAKb,MAIrB,EAAKmJ,SAAS,CACV4Y,UAAWA,KAInB/X,SAAQ,WACJ,GAAI,EAAKD,WAAY,CACjB,IAAIgY,EAAY9jB,aACZ2sB,EAAU,GAEd7I,EAAUhd,KAAI,SAAC/E,GACPA,EAAKI,MAAQ,GACbwqB,EAAQ/pB,KAAKb,MAIrB,EAAKmJ,SAAS,CACV4Y,UAAW6I,EACX7H,OAAQ9kB,cACRuD,UAAWrC,aAAaqB,QAAQ,cAAgBrB,aAAaqB,QAAQ,cAAgB,aAnDlF,iCAiEL,SAACyI,GACkB,SAAzBhL,YACA,EAAKkL,SAAS,CACV0hB,SAAU5hB,EAAM6hB,gBAGpB,EAAKrW,kBAvEM,iCA2EL,WACV,EAAKtL,SAAS,CACV0hB,SAAU,UA1Ed,EAAKthB,MAAQ,CACTshB,SAAU,KACV9I,UAAW,GACXpiB,SAAU,EACVojB,OAAQ,EACRvhB,UAAW,GACXupB,UAAW,IATA,E,mDAanB,WACI9pB,KAAK8I,YAAa,I,iBA2CtB,SAAIxE,GACAtH,UAAmBsH,K,mBAGvB,SAAMA,GACFtH,YAAqBsH,K,wBAmBzB,WAAY,WACR9D,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,gBACNC,QAAS7D,YACT+D,WAAYf,KAAKsI,MAAM/H,cAE5BS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5BlE,WAAqBK,KAAKC,UAAU4D,GAAO,EAAKoH,MAAM/H,WACtD,IAAIkkB,EAAcznB,gBAEK,IAAnBynB,EAAYpjB,IACZnD,aAAaoD,WAAW,cAG5B,EAAK4G,SAAS,CACV4hB,UAAWrF,EAAYthB,Y,oBAKnC,WAAQ,WACEyQ,EAAOmW,QAAQ/pB,KAAKsI,MAAMshB,UAC1BtlB,EAAKsP,EAAO,sBAAmBoW,EACrC,OACI,2BACI,gBAAC,IAAD,CAAY7f,UAAU,cAAc8f,mBAAkB3lB,EAAIiH,MAAM,UAAUI,aAAW,OAAOmB,QAAS9M,KAAKkqB,YAAYpe,KAAK9L,OACvH,gBAACqpB,GAAA,EAAD,CAAOC,aAActsB,gBAA2BA,cAAwBwG,IAAK,IAAQ+H,MAAM,WACvF,gBAACyB,EAAA,EAAD,QAIR,gBAAC,MAAD,CACI1I,GAAIA,EACJsP,KAAMA,EACNgW,SAAU5pB,KAAKsI,MAAMshB,SACrB3V,QAASjU,KAAKwT,YAAY1H,KAAK9L,MAE/B8Y,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBmR,gBAAiB,CACbpR,SAAU,MACVC,WAAY,UAGhB,uBAAK5O,MAAO,CAAExD,MAAO,IAAKmK,QAAS,KAC/B,yBAAO5G,UAAU,aACb,6BACKnK,KAAKsI,MAAMwY,UAAUhd,KAAI,SAAC/E,EAAMwG,GAAP,OACtB,sBAAIA,IAAKA,GACL,sBAAI4E,UAAU,iBAAiBpL,EAAKV,MACpC,0BACI,gBAAC4O,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,qBACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS,EAAKO,MAAMvB,KAAK,EAAM/M,EAAKc,UACpF,gBAAC,IAAD,CAAiByN,KAAMC,MAASnD,MAAO,CAAEoD,SAAU,WAEvD,gBAACJ,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,eAClC,gBAAC,IAAD,CAAYgB,UAAU,OAAOhB,UAAU,iBAAiBpL,EAAKI,QAEjE,gBAACiO,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,cAAc2C,QAAS,EAAKC,IAAIjB,KAAK,EAAM/M,EAAKc,UAClF,gBAAC,IAAD,CAAiByN,KAAMG,MAAQrD,MAAO,CAAEoD,SAAU,aAI9D,sBAAIpD,MAAO,CAAExD,MAAO,QAChB,uBAAKuD,UAAU,kBACVpL,EAAKgB,UADV,IACqB,gBAAC,GAAD,CAAO+G,QAAQ,gBAAgBF,MAAM,cAM1E,6BAC2B,GAArB5G,KAAKsI,MAAMwZ,OAAc,KACvB,sBAAI1X,MAAO,CAACvD,OAAQ,KAChB,sBAAIsD,UAAU,qBAAd,aACA,sBAAIA,UAAU,GAAGC,MAAO,CAACxD,MAAO,MAAO+G,UAAW,WAC9C,uBAAKxD,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAChDnY,KAAKsI,MAAMwZ,OADjB,IAC0B,gBAAC,GAAD,CAAOhb,QAAQ,gBAAgBF,MAAM,UAK3E,sBAAIwD,MAAO,CAACvD,OAAQ,KAChB,sBAAIsD,UAAU,qBAAd,UACA,sBAAIA,UAAU,GAAGC,MAAO,CAACxD,MAAO,MAAO+G,UAAW,WAC9C,uBAAKxD,UAAU,iBAAiBC,MAAO,CAAE+N,YAAa,KAChDnb,gBAA2BA,cADjC,IAC0D,gBAAC,GAAD,CAAO8J,QAAQ,gBAAgBF,MAAM,YAM/G,gBAAC0gB,GAAA,EAAD,CAAOnc,UAAU,MAAMhB,UAAU,cAC7B,gBAACod,GAAA,EAAD,CACI/I,OAAQxe,KAAKoB,WAAW0K,KAAK9L,MAC7BmH,MAAOnH,KAAKsI,MAAM/H,UAClBqL,SAAW,SAAA5D,GAAK,OAAI,EAAKE,SAAS,CAAE3H,UAAWyH,EAAM+R,OAAO5S,SAC5DqgB,YAAY,aAEhB,gBAACC,GAAA,EAAD,CAASC,YAAY,aACrB,gBAAC,IAAD,CAAYnc,MAAM,UAAUI,aAAW,aAAamB,QAAS9M,KAAKoB,WAAW0K,KAAK9L,OAC9E,gBAAC2nB,GAAA,EAAD,QAGP3nB,KAAKsI,MAAMwhB,UAAUxpB,OAAS,EAC3B,uBAAK6J,UAAU,aACX,gBAAC,IAAD,CAAYA,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,kBAA0EnL,KAAKsI,MAAMwhB,YAGzF,KAEJ,uBAAK3f,UAAU,UACgB,OAA1BnN,aACG,gBAAC,KAAD,CACI2V,GAAI,IAAI3V,YAAqB,QAC7B4V,OAAQ,EACRxI,MAAO,CAAEggB,eAAgB,QACzBtd,QAAS9M,KAAKwT,YAAY1H,KAAK9L,OAE/B,gBAACiN,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,aACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,8BAAtC,eAIR,gBAAC8C,EAAA,EAAD,CAAaC,kBAAkB,EAAMhB,eAAe,EAAMhB,QAAQ,YAAYf,UAAU,aACpF,gBAACiD,EAAA,EAAD,CAAQlC,QAAQ,YAAYf,UAAU,6BAA6B2C,QAAS9M,KAAK2G,MAAM0jB,WAAvF,kB,GAvNRjc,aAkOfkc,GAAb,qCAMI,WAAY3jB,GAAO,4BACf,cAAMA,IADS,6BALT,IAKS,0BAHZ,IAGY,0BAFZ,IAEY,uCA8BC,WAEhBxG,YAAW,WACP,IAAIf,EAAWpC,gBAEf,IAAIoC,EAASoD,WAAmC,GAAtBpD,EAASoD,YACL,GAAtBpD,EAASoD,WAAkBpD,EAASqD,WAAarD,EAASqD,UAAU6B,KAAiC,IAA3BlF,EAASqD,UAAU6B,GAAW,CACxG,IAAI5F,EAAW1B,gBAEgC,GAA3CG,SAASiC,EAASqD,UAAU2f,YACxBjlB,SAASuB,GAAY,EACrB1B,YAAqB,GAErBA,YAAqB,GAGzBA,YAAqBG,SAASiC,EAASqD,UAAUvF,aAI9D,MAEH6L,SAAQ,WACJ,EAAKb,SAAS,CACVrK,WAAYb,cAGZA,cAAyB,EAAKsL,MAAM5K,WACpC,EAAKwK,SAAS,CACVxK,SAAUV,cAGd,EAAKutB,QAGT,EAAKriB,SAAS,CACVnK,SAAUf,gBAIlB,EAAKutB,WAtEU,oCAySF,SAACviB,GACG,UAAdA,EAAMzC,KACL,EAAKilB,aAxST,EAAKliB,MAAQ,CACTmiB,cAAe,GACf3J,UAAW,GACXjjB,WAAY,GACZ0K,SAAS,EACTmiB,UAAU,EACVhtB,SAAU,GACVqV,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7B4X,SAAU,GAEVN,WAAW,EACXO,UAAW,GACXC,gBAAiB,GACjBC,SAAU,GAEVC,SAAS,EACTC,SAAS,EAETC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRptB,SAAU,GAEVqtB,SAAU,MA1BC,EANvB,mCA+EI,WAAM,WACGprB,KAAKuI,UACNvI,KAAKuI,SAAU,EAEXvL,aAA2D,GAAnCgD,KAAKsI,MAAMmiB,cAAcnqB,OACjDE,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,cACNC,QAAS7D,YACTod,QAASpd,iBAEdgE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5BlE,cAAuBkE,EAAKmqB,WAE5BruB,UAAmBkE,EAAK8E,UACxBhJ,cAAuBkE,EAAK8D,WAC5BhI,iBAA0BkE,EAAKoqB,KAC/BtuB,eAAwBkE,EAAK3D,YAC7BP,aAAsBkE,EAAKqqB,QAC3BvuB,YAAqBkE,EAAKsqB,mBAE1B,EAAKtjB,SAAS,CACVyiB,SAAUzpB,EAAKuqB,UACfhB,cAAevpB,EAAKoqB,IACpB/iB,SAAS,IAEb,EAAKA,SAAU,KAxBnB,OA0BO,SAAA6N,OAEPpW,KAAKuI,SAAU,KAhH/B,sBAqHI,WACIvI,KAAKkI,SAAS,CACVwiB,UAAU,MAvHtB,uBA2HI,WACI1qB,KAAKkI,SAAS,CACVwiB,UAAU,MA7HtB,wBAiII,SAAWltB,GACSS,OAAOgU,SAASgG,KAChC/Z,aAAaoD,WAAW,YACxBnB,YAAW,cAER,OAtIX,wBA0II,SAAW3C,GAEP,OADgBS,OAAOgU,SAASM,SACfD,QAAQtS,KAAKsI,MAAM5K,SAAUF,KA5ItD,uBA+II,WACIwC,KAAKkI,SAAS,CACVmiB,WAAW,MAjJvB,wBAqJI,WACIrqB,KAAKkI,SAAS,CACVmiB,WAAW,MAvJvB,qBA2JI,WAAS,WACL,IAAkB,IAAdrqB,KAAK0rB,KAAgB,CACrB1rB,KAAK0rB,MAAO,EAEZ1rB,KAAKkI,SAAS,CACVgjB,SAAU,GACVC,OAAQ,KAGZ,IAAIQ,EAAS3rB,KAAKsI,MAAMsiB,UAOxBe,GAFAA,GADAA,GADAA,GADAA,EAASA,EAAO/jB,MAAM,KAAKgkB,KAAK,KAChBhkB,MAAM,KAAKgkB,KAAK,KAChBhkB,MAAM,KAAKgkB,KAAK,KAChBhkB,MAAM,KAAKgkB,KAAK,KAEhBC,MAAM,GAEtB7rB,KAAKkI,SAAS,CACV2iB,gBAAiBc,IAGrBnrB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,iBACN+qB,OAAQA,MAEb3qB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAG5B,GAFA,EAAKwqB,MAAO,EAERxqB,EAAI,GAAQ,CACZ,EAAKgH,SAAS,CACV6iB,SAAS,EACTC,SAAS,EACTE,SAAU,KAGd,IAAIY,EAAUC,aAAY,WACtB,EAAK7jB,SAAS,CACV+iB,SAAU,EAAK3iB,MAAM2iB,SAAS,IAEP,GAAvB,EAAK3iB,MAAM2iB,UACXe,cAAcF,KAEnB,UAEH,EAAK5jB,SAAS,CACZgjB,SAAUhqB,EAAKiC,aA7MrC,uBAoNI,WAAW,YACW,IAAdnD,KAAKisB,OACLjsB,KAAKisB,MAAO,EAEZjsB,KAAKkI,SAAS,CACVijB,OAAQ,KAGZ3qB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,aACN+qB,OAAQ3rB,KAAKsI,MAAMuiB,oBAExB7pB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAG5B,GAFA,EAAK+qB,MAAO,EAER/qB,EAAI,GAAQ,CACZ,EAAKgH,SAAS,CACV+iB,SAAU,KAGd,IAAIa,EAAUC,aAAY,WACtB,EAAK7jB,SAAS,CACV+iB,SAAU,EAAK3iB,MAAM2iB,SAAS,IAEP,GAAvB,EAAK3iB,MAAM2iB,UACXe,cAAcF,KAEnB,UAEH,EAAK5jB,SAAS,CACVijB,OAAQjqB,EAAKiC,aAtPrC,uBA6PI,WAAW,WACPnD,KAAKkI,SAAS,CACVijB,OAAQ,KAGZ3qB,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,gBACNsrB,IAAKlsB,KAAKsI,MAAMwiB,SAChBa,OAAQ3rB,KAAKsI,MAAMuiB,oBAExB7pB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACxBA,EAAI,IACJlE,WAAoBkE,EAAKirB,MAAOjrB,EAAK7C,MACrC,EAAK+tB,cAEL,EAAKlkB,SAAS,CACZijB,OAAQjqB,EAAKiC,YAjR/B,0BAuRI,WACInD,KAAKkI,SAAS,CACV6iB,SAAS,EACTC,SAAS,EAETE,SAAU,GACVC,OAAQ,OA7RpB,wBAiSI,SAAWkB,GAAK,WACZA,EAAOA,EAAKtS,OAAO5S,MAEnBnH,KAAKkI,SAAS,CACV4iB,SAAUuB,IAGoB,IAA7BlvB,SAASkvB,GAAM,IAAI/rB,QACpBH,YAAW,WACP,EAAKmsB,cACN,OA3Sf,oBAqTI,WAAS,WAEL,OAA2B,IAAvBtsB,KAAKsI,MAAMC,QAEP,gBAAC8C,EAAA,EAAD,CAAQJ,SAAS,QAAQd,UAAU,SAASC,MAAO,CAAEoB,OAAQ,IACzD,gBAAC+gB,GAAA,EAAD,CAASpiB,UAAU,cAEf,gBAACF,EAAA,EAAD,KACI,gBAACA,EAAA,EAAD,CAAMlL,MAAI,EAACqL,MAAO,CAAE+N,YAAa,KAC7B,gBAAC,KAAD,CAAMxF,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,KAC9B,uBAAKqN,IAAI,+BAA+BD,IAAI,oDAGpD,gBAACf,EAAA,EAAD,CAAQ4T,QAAM,GAEV,gBAAC1T,EAAA,EAAD,CAAMlL,MAAI,EAACoL,UAAU,kBACjB,gBAAC,IAAD,CAAYA,UAAU,MAAMe,QAAQ,KAAKC,UAAU,OAAO2B,QAAS9M,KAAK0qB,SAAS5e,KAAK9L,MAAOoK,MAAO,CAAEI,QAAS,OAAQkC,cAAe,QAAU1P,cAAhJ,IAAwK,gBAACwvB,GAAA,EAAD,OACxK,gBAAC,IAAD,CAAYriB,UAAU,MAAMe,QAAQ,KAAKC,UAAU,OAAO2B,QAAS9M,KAAKqqB,UAAUve,KAAK9L,OAAvF,UAGHA,KAAKsI,MAAMyK,SAASjP,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC0E,EAAA,EAAD,CAAMlL,MAAI,EAACwG,IAAKA,GACZ,uBAAK6E,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIsR,YAAa,GAAI7M,gBAAiB,iBAIhF,gBAACrB,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC,KAAD,CACIqL,MAAO,CAAE2G,QAAS,WAClB4B,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,SAC5ByM,UAAqC,SAAzBnK,KAAKsI,MAAMzK,WAAwB,oBAAsB,WAErE,gBAAC,IAAD,CAAYsM,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,WAGR,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC,KAAD,CACIqL,MAAO,CAAE2G,QAAS,WAClB4B,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,WAC5ByM,UAAqC,WAAzBnK,KAAKsI,MAAMzK,WAA0B,oBAAsB,WAEvE,gBAAC,IAAD,CAAYsM,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,cAGR,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC2qB,GAAD,CAAeW,UAAWrqB,KAAKqqB,UAAUve,KAAK9L,WAK1D,gBAAC+J,EAAA,EAAD,CAAQ8T,MAAI,GACR,gBAAC,IAAD,CAAY3S,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,WAAW2C,QAAS9M,KAAK0qB,SAAS5e,KAAK9L,OAAO,gBAAC,IAAD,CAAiBsN,KAAOkc,QAA1H,IAA+IxsB,iBAK7H,QAAzBgD,KAAKsI,MAAMzK,WACR,gBAACoM,EAAA,EAAD,CAAME,UAAU,aACZ,gBAACJ,EAAA,EAAD,CAAQ8T,MAAI,GACP7d,KAAKsI,MAAMyK,SAASjP,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC0E,EAAA,EAAD,CAAMlL,MAAI,EAACwG,IAAKA,GACZ,uBAAK6E,MAAO,CAAExD,MAAO,IAAKC,OAAQ,GAAIsR,YAAa,GAAI7M,gBAAiB,mBAMxF,MAOZ,2BACI,gBAACD,EAAA,EAAD,CAAQJ,SAAS,QAAQd,UAAU,SAASC,MAAO,CAAEoB,OAAQ,IACzD,gBAAC+gB,GAAA,EAAD,CAASpiB,UAAU,cAEf,gBAACF,EAAA,EAAD,KACI,gBAACA,EAAA,EAAD,CAAMlL,MAAI,EAACqL,MAAO,CAAE+N,YAAa,KAC7B,gBAAC,KAAD,CAAMxF,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,IAAKoP,QAAU,WAAQ7O,OAAO2L,SAAS,CAAEiH,IAAK,EAAG4b,SAAU,aACzF,uBAAK1hB,IAAI,+BAA+BD,IAAI,oDAGpD,gBAACf,EAAA,EAAD,CAAQ4T,QAAM,GAEV,gBAAC1T,EAAA,EAAD,CAAMlL,MAAI,EAACoL,UAAU,kBACjB,gBAAC,IAAD,CAAYA,UAAU,MAAMe,QAAQ,KAAKC,UAAU,OAAO2B,QAAS9M,KAAK0qB,SAAS5e,KAAK9L,MAAOoK,MAAO,CAAEI,QAAS,OAAQkC,cAAe,QAAU1P,cAAhJ,IAAwK,gBAACwvB,GAAA,EAAD,OAEvKxvB,aACGA,iBAA4BA,gBAAyBsD,OAAS,EAC1D,gBAAC,KAAD,CAAMqS,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,WAAYyM,UAAU,OAAOnN,iBAE/D,gBAAC,KAAD,CAAM2V,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,YAC9B,gBAAC,IAAD,CAAYyM,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,YAGR,gBAAC,IAAD,CAAYhB,UAAU,MAAMe,QAAQ,KAAKC,UAAU,OAAO2B,QAAS9M,KAAKqqB,UAAUve,KAAK9L,OAAvF,UAIPA,KAAKsI,MAAMmiB,cAAc3mB,KAAI,SAAC/E,EAAMwG,GAAP,OAC1B,gBAAC0E,EAAA,EAAD,CAAMlL,MAAI,EAACwG,IAAKA,GACc,QAAzB,EAAK+C,MAAMzK,WACR,gBAAC,KAAD,CACI0H,IAAKA,EACLoN,GAAI,MAAM5T,EAAKuF,GACfooB,KAAK,EACLC,WAAW,EACXC,YAAa,SAAChoB,GACN4E,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1DH,SAASC,cAAc,SAAS1K,EAAKuF,IAAIoF,UAAUqD,IAAI,cAE3D8E,QAAQ,EACRC,QAAS,GACT+a,YAAY,YACZvoB,GAAI,QAAQvF,EAAKuF,GACjB8F,MAAO,CAAExD,MAAO,cAAe4D,QAAS,OAAQsiB,WAAY,SAAU/b,QAAS,cAE/E,gBAAC,IAAD,CAAY5G,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,OAGpE,gBAAC,KAAD,CAAMsU,GAAI,IAAI,EAAKrK,MAAM5K,SAAS,IAAKyM,UAAU,UAAUC,MAAO,CAAE2G,QAAS,aAAejE,QAAS,WAA0B,oBAAX7O,QAAyBC,aAAaC,QAAQ,OAAQY,EAAKuF,MAC3K,gBAAC,IAAD,CAAY6F,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,WAMhF,gBAAC4L,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC,KAAD,CACIqL,MAAO,CAAE2G,QAAS,WAClB4B,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,SAC5ByM,UAAqC,SAAzBnK,KAAKsI,MAAMzK,WAAwB,oBAAsB,WAErE,gBAAC,IAAD,CAAYsM,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,WAGR,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC,KAAD,CACIqL,MAAO,CAAE2G,QAAS,WAClB4B,GAAI,IAAI3S,KAAKsI,MAAM5K,SAAS,WAC5ByM,UAAqC,WAAzBnK,KAAKsI,MAAMzK,WAA0B,oBAAsB,WAEvE,gBAAC,IAAD,CAAYsM,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAnD,cAGR,gBAAClB,EAAA,EAAD,CAAMlL,MAAI,GACN,gBAAC2qB,GAAD,CAAeW,UAAWrqB,KAAKqqB,UAAUve,KAAK9L,WAK1D,gBAAC+J,EAAA,EAAD,CAAQ8T,MAAI,GACR,gBAAC,IAAD,CAAY3S,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,WAAW2C,QAAS9M,KAAK0qB,SAAS5e,KAAK9L,OAAO,gBAAC,IAAD,CAAiBsN,KAAOkc,QAA1H,IAA+IxsB,iBAK7H,QAAzBgD,KAAKsI,MAAMzK,WACR,gBAACoM,EAAA,EAAD,CAAME,UAAU,aACZ,gBAACJ,EAAA,EAAD,CAAQ8T,MAAI,GACP7d,KAAKsI,MAAMmiB,cAAc3mB,KAAI,SAAC/E,EAAMwG,GAAP,OAC1B,gBAAC,KAAD,CACIA,IAAKA,EACLoN,GAAI,MAAM5T,EAAKuF,GACfooB,KAAK,EACLE,YAAa,SAAChoB,GACN4E,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1DH,SAASC,cAAc,SAAS1K,EAAKuF,IAAIoF,UAAUqD,IAAI,aAEvDvD,SAASuI,eAAe,QAAQhT,EAAKuF,IAAIyoB,gBAAe,GAExDvjB,SAASC,cAAc,cAAcujB,QAAQ,CACzCC,WAAY,KACb,MAEPpb,QAAQ,EACRC,QAAS,GACT+a,YAAY,YACZvoB,GAAI,QAAQvF,EAAKuF,IAEjB,gBAAC,IAAD,CAAY6F,UAAU,MAAMe,QAAQ,KAAKC,UAAU,QAAQpM,EAAKV,YAOhF,MAIR,gBAAC0V,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAMoiB,SACjBnW,WAAW,EACXD,SAAU,KACVL,QAASjU,KAAKktB,UAAUphB,KAAK9L,MAC7BwH,kBAAgB,qBAChByiB,mBAAiB,2BACjB9f,UAAU,aAEV,gBAACkW,EAAA,EAAD,CAAa/b,GAAG,sBAAhB,kBACA,gBAAC+Y,EAAA,EAAD,CAAelT,UAAU,mBAAmBC,MAAO,CAAE4G,cAAe,GAAItG,WAAY,IAC/E1K,KAAKsI,MAAMqiB,SAAS7mB,KAAI,SAAC/E,EAAMwG,GAAP,OACrB,gBAAC,KAAD,CACIA,IAAKA,EACL4E,UAAY,EAAK7B,MAAM5K,UAAYqB,EAAKiK,KAAO,SAAW,GAC1D2J,GAAI,CAAEJ,SAAU,EAAK4a,WAAWpuB,EAAKiK,OACrC8D,QAAS,WAAQ3M,YAAW,WAAMnD,eAAwB,IAAKiB,OAAOgU,SAASmb,WAAa,OAE5F,gBAAC,IAAD,CAAYliB,QAAQ,KAAKC,UAAU,OAAOhB,UAAW,cAAepL,EAAKV,YAQzF,gBAAC0V,EAAA,EAAD,CACIH,KAAM5T,KAAKsI,MAAM+hB,UACjB9V,WAAW,EACXD,SAAU,KACVL,QAASjU,KAAKosB,WAAWtgB,KAAK9L,MAC9BwH,kBAAgB,qBAChByiB,mBAAiB,2BACjB9f,UAAU,aAEV,gBAACkW,EAAA,EAAD,CAAa/b,GAAG,sBAAhB,gBACA,gBAAC+Y,EAAA,EAAD,CAAelT,UAAU,oBACrB,uBAAKA,UAAU,oBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,cAApD,kBACA,gBAAC,KAAD,CACIA,UAAU,YACVkjB,KAAK,oBACL7F,YAAY,oBACZ8F,UAAWttB,KAAKsI,MAAMyiB,QACtB5jB,MAAOnH,KAAKsI,MAAMsiB,UAClB2C,WAAYvtB,KAAKwtB,eACjB5hB,SAAW,SAAA5D,GAAK,OAAI,EAAKM,MAAMyiB,QAAU,EAAK7iB,SAAS,CAAE0iB,UAAW5iB,EAAM+R,OAAO5S,QAAW,MAE/FnH,KAAKsI,MAAM0iB,QACR,gBAAC,IAAD,CAAY9f,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,eAAe2C,QAAS9M,KAAKytB,aAAa3hB,KAAK9L,OAAnG,mBAEA,KAEHA,KAAKsI,MAAM4iB,SAAS5qB,OAAS,EAC1B,uBAAK8J,MAAO,CAAEgC,UAAW,GAAI2E,QAAS,GAAIzF,gBAAiB,UAAWuH,aAAc,IAChF,gBAAC,IAAD,CAAY3H,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAEoD,SAAU,SAAUjC,MAAO,SAAWvL,KAAKsI,MAAM4iB,WAGxG,MAGPlrB,KAAKsI,MAAM0iB,QACR,uBAAK7gB,UAAU,oBACX,gBAAC,IAAD,CAAYe,QAAQ,KAAKC,UAAU,OAAOhB,UAAU,cAApD,cACA,uBAAKA,UAAU,oBACX,gBAAC,KAAD,CACIA,UAAU,YACVkjB,KAAK,OACLlmB,MAAOnH,KAAKsI,MAAMwiB,SAElBlf,SAAW5L,KAAK0tB,WAAW5hB,KAAK9L,QAEnCA,KAAKsI,MAAM2iB,SAAW,EACnB,gBAAC,IAAD,CAAY/f,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAEoD,SAAU,SAAU9C,WAAY,KAAO,4BAA4B1K,KAAKsI,MAAM2iB,SAAS,SAE1I,gBAAC,IAAD,CAAY/f,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAEoD,SAAU,SAAU9C,WAAY,GAAIgG,OAAQ,UAAW9J,MAAO,eAAiBkG,QAAS9M,KAAK2tB,UAAU7hB,KAAK9L,OAA/J,uBAGPA,KAAKsI,MAAM6iB,OAAO7qB,OAAS,EACxB,uBAAK8J,MAAO,CAAEgC,UAAW,GAAI2E,QAAS,GAAIzF,gBAAiB,UAAWuH,aAAc,IAChF,gBAAC,IAAD,CAAY3H,QAAQ,KAAKC,UAAU,OAAOf,MAAO,CAAEoD,SAAU,SAAUjC,MAAO,SAAWvL,KAAKsI,MAAM6iB,SAGxG,MAIR,MAGPnrB,KAAKsI,MAAMyiB,QACR,gBAACxN,GAAA,EAAD,CAAenT,MAAO,CAAE2G,QAAS,cAC7B,gBAAC3D,EAAA,EAAD,CAAQN,QAAS9M,KAAKwqB,QAAQ1e,KAAK9L,MAAOoK,MAAO,CAAEkB,gBAAiB,UAAWC,MAAO,OAAQwF,QAAS,aAAvG,gBAGJ,KAEH/Q,KAAKsI,MAAM0iB,QACR,gBAACzN,GAAA,EAAD,CAAenT,MAAO,CAAE2G,QAAS,cAC7B,gBAAC3D,EAAA,EAAD,CAAQN,QAAS9M,KAAKssB,UAAUxgB,KAAK9L,MAAOoK,MAAO,CAAEkB,gBAAiB,UAAWC,MAAO,OAAQwF,QAAS,aAAzG,oBAGJ,MAIkB,QAAzB/Q,KAAKsI,MAAMzK,WACR,gBAACkM,EAAA,EAAD,CAAQ8T,MAAI,GACR,uBAAKzT,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,GAAIrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,MACpH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,GAAIrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACpH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,GAAIrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACpH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,GAAIrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACpH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,GAAIrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACpH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,IAAKrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACrH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,IAAKrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACrH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,IAAKrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACrH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,IAAKrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACrH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4F,IAAK,IAAKrF,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,QAGzH,KAGJ,gBAAC7jB,EAAA,EAAD,CAAQ8T,MAAI,GACR,gBAACmL,GAAD,CAAwBpK,MAAQ5e,KAAKqqB,UAAUve,KAAK9L,cAtnBxE,GAA4BoO,a,8cC5V5B,IAAMtR,GAAcC,EAAQ,MAItB8wB,GAAS,CAAE7wB,cAOjB,SAAS8wB,GAAT,GAAoC,IAAlBzB,EAAkB,EAAlBA,KAAMnlB,EAAY,EAAZA,SACtB,OACE,gBAAC,KAAD,CACE6mB,OAAQ,YAAuB,IAApBC,EAAoB,EAApBA,cAET,OADIA,IAAeA,EAAcC,OAAS5B,GACnCnlB,KAMR,SAASgnB,KACd,OACE,gBAACJ,GAAD,CAAQzB,KAAM,KACV,gBAACpiB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,6CAA6CC,MAAO,CAAEgC,UAAW,KACvF,gBAACnC,EAAA,EAAD,CAAMlL,MAAI,EAACwL,GAAI,IACX,gBAAC,IAAD,CAAYW,QAAQ,KAAKC,UAAU,MAAnC,8B,IAQVgjB,G,qCACF,WAAYxnB,GAAO,4BACf,cAAMA,IADS,uCA+BC,YAChBoC,SAAQ,WACJ,EAAKb,SAAS,CACVxK,SAAUV,cAGd,EAAKoxB,qBAlCT,EAAK9lB,MAAQ,CACT8iB,SAAU,KACV1tB,SAAU,GACV6K,SAAS,GANE,E,2CAUnB,WAAc,WACNvL,aACAwD,MAAM,2CAA4C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAM7D,GAAYQ,UAAU,CACxBsD,KAAM,gBACNC,QAAS7D,YACTuM,KAAM,WAEXvI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC5B,EAAKgH,SAAS,CACVkjB,SAAUlqB,EAAKkqB,SACf7iB,SAAS,OAZjB,OAeO,SAAA6N,S,oBAcf,WACI,OACI,0BAAQjM,UAAU,UACd,gBAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,iBACtB,gBAACF,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAG9G,GAAI,GAAIJ,UAAU,QACrD,gBAAC,IAAD,CAAYe,QAAQ,SAApB,kBAA2C,IAAIjI,MAAOorB,gBAE1D,gBAACpkB,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAG9G,GAAI,IACvC,gBAAC,KAAD,CACIoI,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,SAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,eAEJ,gBAAC,KAAD,CACIyH,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,QAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,aAEJ,gBAAC,KAAD,CACIyH,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,sBAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,sBAGR,gBAACjB,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAG9G,GAAI,IACvC,gBAAC,KAAD,CACIoI,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,8BAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,gCAEJ,gBAAC,KAAD,CACIyH,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,WAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,wBAEJ,gBAAC,KAAD,CACIyH,GAAK,IAAI3S,KAAKsI,MAAM5K,SAAS,iBAC7B0M,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAYlf,QAAQ,SAApB,4BAGNlL,KAAKsI,MAAMC,QACT,gBAAC0B,EAAA,EAAD,CAAMlL,MAAI,EAACiZ,GAAI,EAAG5G,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAG9G,GAAI,GAAIJ,UAAU,YACnDnK,KAAKsI,MAAM8iB,UAAYprB,KAAKsI,MAAM8iB,SAASkD,QACzC,gBAAC,KAAD,CACI3b,GAAI,CAAEJ,SAAUvS,KAAKsI,MAAM8iB,SAASkD,SACpCvU,OAAO,SACP3P,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAiB9c,KAAMihB,OAAankB,MAAO,CAAEoD,SAAU,OAAQuD,QAAS,OAG5E,KAEF/Q,KAAKsI,MAAM8iB,UAAYprB,KAAKsI,MAAM8iB,SAASoD,UACzC,gBAAC,KAAD,CACI7b,GAAI,CAAEJ,SAAUvS,KAAKsI,MAAM8iB,SAASoD,WACpCzU,OAAO,SACP3P,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAiB9c,KAAMmhB,OAAarkB,MAAO,CAAEoD,SAAU,OAAQuD,QAAS,OAG5E,KAEF/Q,KAAKsI,MAAM8iB,UAAYprB,KAAKsI,MAAM8iB,SAASsD,QACzC,gBAAC,KAAD,CACI/b,GAAI,CAAEJ,SAAUvS,KAAKsI,MAAM8iB,SAASsD,SACpC3U,OAAO,SACP3P,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAiB9c,KAAMqhB,OAAiBvkB,MAAO,CAAEoD,SAAU,OAAQuD,QAAS,OAGhF,KAEF/Q,KAAKsI,MAAM8iB,UAAYprB,KAAKsI,MAAM8iB,SAASwD,QACzC,gBAAC,KAAD,CACIjc,GAAI,CAAEJ,SAAUvS,KAAKsI,MAAM8iB,SAASwD,SACpC7U,OAAO,SACP3P,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAiB9c,KAAMuhB,OAAMzkB,MAAO,CAAEoD,SAAU,OAAQuD,QAAS,OAGrE,KAGA,gBAAC,KAAD,CACI4B,GAAI,CAAEJ,SAAU,yBAChBwH,OAAO,SACP3P,MAAO,CAAEggB,eAAgB,SAEzB,gBAAC,IAAD,CAAiB9c,KAAMwhB,OAAiB1kB,MAAO,CAAEoD,SAAU,OAAQuD,QAAS,QAKxF,W,GAlJG3C,aA0Jd2gB,GAAb,qCACI,WAAYpoB,GAAO,4BACf,cAAMA,IADS,uCA8BC,YAChBoC,SAAQ,WACJ,EAAKb,SAAS,CACVrK,WAAYb,cAGhB,EAAKkL,SAAS,CACVxK,SAAUV,oBAlClB,EAAKsL,MAAQ,CACTmiB,cAAe,GACf3J,UAAW,GACXjjB,WAAY,GACZ0K,SAAS,EACTmiB,UAAU,EACVhtB,SAAU,GACVqV,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC4X,SAAU,GAEVN,WAAW,EACXO,UAAW,GACXC,gBAAiB,GACjBC,SAAU,GAEVC,SAAS,EACTC,SAAS,EAETC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRptB,SAAU,GAEVqtB,SAAU,MA1BC,EADvB,oDA2CI,SAAsB9a,EAAWC,GAC7B,OACIvQ,KAAKsI,MAAMzK,aAAe0S,EAAU1S,YACpCmC,KAAKsI,MAAM5K,WAAa6S,EAAU7S,WA9C9C,oBAkDI,WAEI,OACI,gBAAC,MAAcmwB,GACX,uBAAK1jB,UAAU,QAEX,gBAACmgB,GAAD,MAEA,gBAAC,KAAD,KACI,gBAAC,KAAD,CACI3iB,KAAK,qBACLiL,OAAQ,EACRzH,UAAY0K,KAEhB,gBAAC,KAAD,CACIlO,KAAK,mBACLiL,OAAQ,EACRzH,UAAYiN,KAEhB,gBAAC,KAAD,CACIzQ,KAAK,kBACLiL,OAAQ,EACRzH,UAAYuG,KAEhB,gBAAC,KAAD,CACI/J,KAAK,aACLiL,OAAQ,EACRzH,UAAYuG,KAEhB,gBAAC,KAAD,CACIkB,OAAK,EACLjL,KAAK,sBACLwD,UAAYwO,KAEhB,gBAAC,KAAD,CACIhS,KAAK,4BACLiL,OAAQ,EACRzH,UAAYpD,KAEhB,gBAAC,KAAD,CACIJ,KAAK,kBACLiL,OAAQ,EACRzH,UAAYmW,KAEhB,gBAAC,KAAD,CACI3Z,KAAK,mBACLiL,OAAQ,EACRzH,UAAYwd,KAEhB,gBAAC,KAAD,CACIhhB,KAAK,kBACLiL,OAAQ,EACRzH,UAAYyd,KAEhB,gBAAC,KAAD,CACIjhB,KAAK,2BACLiL,OAAQ,EACRzH,UAAY0d,KAEhB,gBAAC,KAAD,CACIlhB,KAAK,gCACLiL,OAAQ,EACRzH,UAAY2d,KAEhB,gBAAC,KAAD,CACInhB,KAAK,wCACLiL,OAAQ,EACRzH,UAAY4d,KAEhB,gBAAC,KAAD,CACIphB,KAAK,KAEL,gBAAC,KAAD,CAAU/H,MAAI,EACV+S,GAAI,gBAIZ,gBAAC,KAAD,CACIxH,UAAY+iB,MAKM,QAAzBluB,KAAKsI,MAAMzK,WACR,gBAACkM,EAAA,EAAD,CAAQ8T,MAAI,GACR,uBAAKzT,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAC1H,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,IAAOrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAG9H,gBAAC7jB,EAAA,EAAD,CAAQ8T,MAAI,GACR,uBAAKzT,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OACvH,uBAAKxjB,MAAO,CAAExD,MAAO,OAAQC,OAAQ,EAAGoE,SAAU,QAAS4B,OAAQ,GAAIrB,OAAQ,EAAGF,gBAAiB,UAAWsiB,QAAS,OAI/H,gBAACO,GAAD,YAjKpB,GAAyB/f,aC5MzB4gB,UAAkB,gBAAC,KAAD,KAAe,gBAACD,GAAD,OAAwBvlB,SAASuI,eAAgB,S,eCRlF,IAAIjO,EAAM,CACT,OAAQ,IACR,UAAW,KAIZ,SAASmrB,EAAeC,GACvB,IAAI5qB,EAAK6qB,EAAsBD,GAC/B,OAAOE,EAAoB9qB,GAE5B,SAAS6qB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEvrB,EAAKorB,GAAM,CACpC,IAAI/e,EAAI,IAAImf,MAAM,uBAAyBJ,EAAM,KAEjD,MADA/e,EAAEkc,KAAO,mBACHlc,EAEP,OAAOrM,EAAIorB,GAEZD,EAAeM,KAAO,WACrB,OAAOC,OAAOD,KAAKzrB,IAEpBmrB,EAAeQ,QAAUN,EACzBO,EAAOC,QAAUV,EACjBA,EAAe3qB,GAAK,OCtBhBsrB,EAA2B,GAG/B,SAASR,EAAoBS,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqB7F,IAAjB8F,EACH,OAAOA,EAAaH,QAGrB,IAAID,EAASE,EAAyBC,GAAY,CACjDvrB,GAAIurB,EACJE,QAAQ,EACRJ,QAAS,IAUV,OANAK,EAAoBH,GAAUI,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASP,GAG3EM,EAAOK,QAAS,EAGTL,EAAOC,QAIfP,EAAoBc,EAAIF,EjB5BpBnzB,EAAW,GACfuyB,EAAoBe,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASrV,EAAI,EAAGA,EAAIve,EAASyD,OAAQ8a,IAAK,CAGzC,IAFA,IAAKiV,EAAUC,EAAIC,GAAY1zB,EAASue,GACpCsV,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS/vB,OAAQqwB,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaf,OAAOD,KAAKH,EAAoBe,GAAGS,OAAOrrB,GAAS6pB,EAAoBe,EAAE5qB,GAAK8qB,EAASM,MAC9IN,EAASQ,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG1CG,IACF7zB,EAASg0B,OAAOzV,IAAK,GACrBgV,EAASE,KAGX,OAAOF,EAtBNG,EAAWA,GAAY,EACvB,IAAI,IAAInV,EAAIve,EAASyD,OAAQ8a,EAAI,GAAKve,EAASue,EAAI,GAAG,GAAKmV,EAAUnV,IAAKve,EAASue,GAAKve,EAASue,EAAI,GACrGve,EAASue,GAAK,CAACiV,EAAUC,EAAIC,IkBJ/BnB,EAAoB0B,EAAKpB,IACxB,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,IAAOtB,EAAiB,QACxB,IAAM,EAEP,OADAN,EAAoBpoB,EAAE+pB,EAAQ,CAAEE,EAAGF,IAC5BA,GCLR3B,EAAoBpoB,EAAI,CAAC2oB,EAASuB,KACjC,IAAI,IAAI3rB,KAAO2rB,EACX9B,EAAoBC,EAAE6B,EAAY3rB,KAAS6pB,EAAoBC,EAAEM,EAASpqB,IAC5EiqB,OAAO2B,eAAexB,EAASpqB,EAAK,CAAE6rB,YAAY,EAAMC,IAAKH,EAAW3rB,MCJ3E6pB,EAAoBkC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOvxB,MAAQ,IAAIwxB,SAAS,cAAb,GACd,MAAOrhB,GACR,GAAsB,iBAAXlS,OAAqB,OAAOA,QALjB,GCAxBmxB,EAAoBC,EAAI,CAACoC,EAAKC,IAAUlC,OAAOmC,UAAUC,eAAe3B,KAAKwB,EAAKC,GCClFtC,EAAoByC,EAAKlC,IACH,oBAAXmC,QAA0BA,OAAOC,aAC1CvC,OAAO2B,eAAexB,EAASmC,OAAOC,YAAa,CAAE5qB,MAAO,WAE7DqoB,OAAO2B,eAAexB,EAAS,aAAc,CAAExoB,OAAO,KCLvDioB,EAAoB4C,IAAOtC,IAC1BA,EAAOuC,MAAQ,GACVvC,EAAOxoB,WAAUwoB,EAAOxoB,SAAW,IACjCwoB,G,MCER,IAAIwC,EAAkB,CACrBC,IAAK,GAaN/C,EAAoBe,EAAEQ,EAAKyB,GAA0C,IAA7BF,EAAgBE,GAGxD,IAAIC,EAAuB,CAACC,EAA4BhpB,KACvD,IAGIumB,EAAUuC,GAHT/B,EAAUkC,EAAaC,GAAWlpB,EAGhB8R,EAAI,EAC3B,IAAIyU,KAAY0C,EACZnD,EAAoBC,EAAEkD,EAAa1C,KACrCT,EAAoBc,EAAEL,GAAY0C,EAAY1C,IAKhD,IAFG2C,GAASA,EAAQpD,GACjBkD,GAA4BA,EAA2BhpB,GACrD8R,EAAIiV,EAAS/vB,OAAQ8a,IACzBgX,EAAU/B,EAASjV,GAChBgU,EAAoBC,EAAE6C,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgB7B,EAASjV,IAAM,EAEhCgU,EAAoBe,KAGjBsC,EAAqBC,KAA4B,sBAAIA,KAA4B,uBAAK,GAC1FD,EAAmB9yB,QAAQ0yB,EAAqBvmB,KAAK,KAAM,IAC3D2mB,EAAmB7yB,KAAOyyB,EAAqBvmB,KAAK,KAAM2mB,EAAmB7yB,KAAKkM,KAAK2mB,K,GC3CvF,IAAIE,EAAsBvD,EAAoBe,OAAEnG,EAAW,CAAC,MAAM,IAAOoF,EAAoB,QAC7FuD,EAAsBvD,EAAoBe,EAAEwC,I","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = cart_info.count;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props.item )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? props.match.params.cityName : '',\n            itemLink: !this.props.item ? props.match.params.itemLink : '',\n            title: '',\n            description: '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(props.match.params.cityName);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n        \n        \n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                        Аллергены\n                                    </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ width: '100%', overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                Аллергены\n                            </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        \n        //  <FontAwesomeIcon icon={faRubleSign} />\n        \n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 50\n                        });\n                    }, 300)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('#item_')[1];\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }\n            }, 1300);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                page: data.page,\n                title: data.title,\n                description: data.description,\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                        >\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                />\n                            </picture>\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                        >\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                />\n                            </picture>\n                        </Link>\n                    )\n                    \n                }else{\n                    if( item.item && parseInt(item.item) > 0 ){\n                        banners_pc.push(\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                    onClick={this.openItemPC.bind(this, item.item)}\n                                />\n                            </picture>\n                        )\n                        \n                        banners_mobile.push(\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                    onClick={this.openItem.bind(this, item.item)}\n                                />\n                            </picture>\n                        )\n                    }else{\n                        banners_pc.push(\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                />\n                            </picture>\n                        )\n                        \n                        banners_mobile.push(\n                            <picture style={{ width: 'inherit', height: 'auto' }}>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                    //alt={this.state.item.name}\n                                    //title={this.state.item.name}\n                                    style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                    onDragStart={handleDragStart}\n                                />\n                            </picture>\n                        )\n                    }\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Hidden xsDown>\n                        <div style={{ width: '79.3vw', marginLeft: '9.6vw', borderRadius: 10, height: 300, marginTop: 80, marginBottom: 50, backgroundColor: 'rgb(229, 229, 229)' }} />\n                    \n                        <div>\n                            <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                {this.state.testData.map((it, k) => (\n                                    <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px'}}>\n                                        <Hidden xsDown>\n                                            <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </Hidden>\n                                        <Hidden smUp>\n                                            <div style={{ width: '79.3vw', marginLeft: 15, height: 170, marginBottom: 10, backgroundColor: '#e5e5e5' }} />\n                                            <div style={{ marginLeft: 15}}>\n                                                <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                                <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                                <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                                <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            </div>\n                                        </Hidden>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>\n                        \n                    </Hidden>\n                    <Hidden smUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    { this.state.banners_pc.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"pc\"\n                            data={this.state.banners_pc}\n                        />\n                    }\n                </Hidden>\n                <Hidden smUp>\n                    { this.state.banners_mobile.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"mobile\"\n                            data={this.state.banners_mobile}\n                        />\n                    }\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => \n                    <div key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                            <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                        </Grid>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                            {cat.items.map((it, k) => (\n                                <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                    <Hidden xsDown>\n                                        <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                    </Hidden>\n                                    <Hidden smUp>\n                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                    </Hidden>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                )}\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </MuiDialogContent>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: null,\n            city_name: props.match.params.cityName,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( props.location.search.length > 3 ){\n            \n            let order_pay = props.location.search;\n            \n            let p1 = order_pay.split('&');\n    \t\tlet bank = p1[0].split('bank=');\n    \t\tbank = bank[1];\n\n    \t\tlet order_id = p1[1].split('orderId=');\n            order_id = order_id[1];\n            \n            this.checkPay(bank, order_id);            \n        }\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            \n            let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n            \n            if( check_reload.length > 0 ){\n                setTimeout(()=>{\n                    this.loadData();\n                }, 6000)\n            }\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(this.props.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: false,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }else{\n                        let data = {\n                            orderType: cartData.orderType,\n                            orderAddr: '',\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: '',\n                            orderPredTime: '',\n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha,\n                            \n                        };\n                        \n                        itemsStore.saveCartData(data);\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }else{\n                    if( this.state.pic_point.length > 0 ){\n                        this.choosePic(this.state.pic_point[0]['id']);\n                    }\n                    \n                    if( this.state.my_addr.length > 0 ){\n                        this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                    }\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        if( this.state.orderPromo.length == 0 ){\n            this.setState({\n                orderPromoText: ''\n            })\n        }else{\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_promo_web', \n                    city_id: itemsStore.getCity(),\n                    promo_name: this.state.orderPromo\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n                let check_promo = itemsStore.checkPromo();\n                  \n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            })\n        }\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.newAddrInfo && parseInt(this.state.newAddrInfo.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                    })\n                }else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street+' '+this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    window.location.pathname = '/'+this.state.city_name+'/profile'\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ item.city_name+', '+item.street+' '+item.home+( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                promoText: check_promo.text\n            })\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        \n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true;\n            \n            if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        is_load: true,\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }else{\n                this.is_load = false;\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        localStorage.removeItem('cartData');\n        setTimeout(()=>{\n            //window.location.href = this_addr.replace(this.state.cityName, city);\n        }, 300)\n        \n    }\n    \n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 === false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms1 = false;\n                \n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-60} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-60} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                            component={ Profile }\n                        />\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                            component={ PageAbout }\n                        />\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                            component={ PageJob }\n                        />\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                            component={ PageInstPay }\n                        />\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                            component={ PageOferta }\n                        />\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                            component={ PagePolitika }\n                        />\n                        <Route\n                            path='/'\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(6021)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}