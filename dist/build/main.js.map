{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","console","log","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Ruble","width","height","viewBox","xmlns","d","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","ItemInfoPopover","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","propTypes","PropTypes","Item","newValue","setState","itemTab","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","srcSet","img_new","img_new_update","src","alt","minHeight","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","position","AppBar","backgroundColor","zIndex","elevation","Tabs","onChange","changeTab","justifyContent","Tab","label","allergens","marginTop","marginBottom","maxHeight","overflow","display","flexDirection","alignItems","bottom","smUp","textAlign","spacing","propsData","axios","url","response","error","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","pagination","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","CardContent","openItem","padding","paddingTop","CardActions","marginLeft","ShoppingCartOutlined","sm","md","xl","Transition","ref","Slide","direction","Home","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","banners_pc","banners_mobile","aktia_id","to","exact","borderRadius","b_img_full","onDragStart","img_app","testData","openModal","openModalPC","margin","flexWrap","cat","it","openItemPC","page_h","dangerouslySetInnerHTML","__html","Dialog","fullScreen","handleClose","TransitionComponent","Toolbar","autoFocus","faTimes","itemId","maxWidth","fullWidth","handleClosePC","disableTypography","top","right","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","Actii","actii","location","act_id","openDialog","showItem","openMSG","statusMSG","textMSG","Snackbar","autoHideDuration","closeAlert","message","action","size","Close","img_full","promo_title","closeDialog","activePromo","info","Profile","history","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","user","mail","pay_id","payId","repeat","is_create","trueOrder","pathname","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","Backdrop","CircularProgress","DialogContent","DialogContentText","DialogActions","mdDown","date_end","lgUp","orders","flex","my_orders","status_order","is_delete","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","type_order_addr_new","time_order_name","time_order","is_preorder","text_time","unix_time_to_client","sum_order","marginRight","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","orderCheck","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","saveDataCustomAddr","this_pay","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","OutlinedInput","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","promoText","handleClick","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","this_addr","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","code","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","animate","scrollLeft","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = cart_info.count;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    console.log( 'my_dops', my_dops )\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(){\n    return (\n        <svg width=\"50\" height=\"20\" viewBox=\"0 0 1500 300\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( props )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? props.match.params.cityName : '',\n            itemLink: !this.props.item ? props.match.params.itemLink : '',\n            title: '',\n            description: '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(props.match.params.cityName);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer dis_none\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <picture>\n                               <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                               <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                    \n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 250, overflow: 'auto' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ maxHeight: 70, width: 'auto' }}\n                                                    />\n                                                </picture>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                        Аллергены\n                                    </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '100%' }}>\n                                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceLabel\">Цена: </Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{this.state.item.price}</Typography>\n                                    <Ruble />\n                                </div>\n                                \n                                {this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={12} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: '35vh', overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '35vh', overflow: 'auto' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ maxHeight: 70, width: 'auto' }}\n                                                    />\n                                                </picture>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                Аллергены\n                            </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceLabel\">Цена: </Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{this.state.item.price}</Typography>\n                                    <Ruble />\n                                </div>\n                                \n                                {this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\n\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 1,\n            \n            pagination: this.state.type == 'pc' ? true : false,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type}>\n                <div className=\"swiper-wrapper\">\n                    {this.state.data.map((item, key) => \n                        <div className=\"swiper-slide\" key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(){\n    return (\n        <svg width=\"50\" height=\"20\" viewBox=\"0 0 1500 200\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        \n        //  <FontAwesomeIcon icon={faRubleSign} />\n        \n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }}\n                        >\n                            <img style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', minHeight: 150 }}\n                        >\n                            <img style={{ width: 'inherit', height: 'auto', minHeight: 150 }} src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img style={{ width: 'inherit', height: 'auto', minHeight: 150 }} src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                <Hidden xsDown>\n                    { this.state.banners_pc.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"pc\"\n                            data={this.state.banners_pc}\n                        />\n                    }\n                </Hidden>\n                <Hidden smUp>\n                    { this.state.banners_mobile.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"mobile\"\n                            data={this.state.banners_mobile}\n                        />\n                    }\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => \n                    <div key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\">\n                            <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                        </Grid>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                            {cat.items.map((it, k) => (\n                                <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                    <Hidden xsDown>\n                                        <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                    </Hidden>\n                                    <Hidden smUp>\n                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                    </Hidden>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                )}\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog maxWidth={'md'} fullWidth={true} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClosePC.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </MuiDialogContent>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://jacofood.ru/src/img/aktii/\"+item.img_full} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: null,\n            city_name: props.match.params.cityName,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( props.location.search.length > 3 ){\n            \n            let order_pay = props.location.search;\n            \n            let p1 = order_pay.split('&');\n    \t\tlet bank = p1[0].split('bank=');\n    \t\tbank = bank[1];\n\n    \t\tlet order_id = p1[1].split('orderId=');\n            order_id = order_id[1];\n            \n            this.checkPay(bank, order_id);            \n        }\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                console.log( json )\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(this.props.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                /*setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        })\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);*/\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon /> : parseInt(item.status_order) == 6 ? <CheckIcon /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { parseInt(item.time_to_client) == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.unix_time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 7 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 7 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( 'item', this.props.item )\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                            style={{ minHeight: 150 }}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            console.log( 'need_dop', need_dop );\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                console.log( 'cartItems_main', main )\n                console.log( 'cartItems_need_dop', dop_new )\n                console.log( 'cartItems_promo', cartPromoItems )\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n                \n                \n            })\n        }else{\n            console.log( 'this_false' )\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    window.location.pathname = '/'+this.state.city_name+'/profile'\n                }, 300)\n            }\n        });\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', padding: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: newCart,\n                promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n            })\n            \n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                promoText: check_promo.text\n            })\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true\n            if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.userName = json.user_name;\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        is_load: true,\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n    \n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'create_profile', \n                number: number\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    stage_1: false,\n                    stage_2: true, \n                    errPhone: ''\n                })\n            \n                let timerId = setInterval(() => {\n                    this.setState({\n                        timerSMS: this.state.timerSMS-1\n                    })\n                    if( this.state.timerSMS == 0 ){\n                        clearInterval(timerId);\n                    }\n                }, 1000);\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.userName && itemsStore.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-60} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-60} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link key={key} className={ this.state.cityName == item.link ? 'active' : '' } to={{ pathname: this.getNewLink(item.link) }} onClick={() => { setTimeout(()=>{ window.location.reload(); }, 100) }}>\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                            component={ Profile }\n                        />\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                            component={ PageAbout }\n                        />\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                            component={ PageJob }\n                        />\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                            component={ PageInstPay }\n                        />\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                            component={ PageOferta }\n                        />\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                            component={ PagePolitika }\n                        />\n                        \n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(6021)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}