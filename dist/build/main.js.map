{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","console","log","title","description","body","length","promoName","fetch","method","headers","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","type_order","point_id_dev","point_id_pic","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","get_item","path","split","ItemInfoPopover","props","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","Item","state","is_load","city_name","match","params","itemLink","_isMounted","autorun","link","setState","document","querySelector","classList","remove","scrollTo","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","src","img_full","alt","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","smUp","display","justifyContent","spacing","width","height","backgroundColor","propsData","data","page","axios","url","response","error","Element","Scroll","scroller","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","elevation","CardContent","to","CardMedia","image","img_full_date_update","minHeight","padding","CardActions","flexDirection","marginLeft","sm","md","xl","openItem","img_app","img_app_update","Transition","ref","Slide","direction","Home","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","fetchData","banners_pc","banners_mobile","aktia_id","exact","b_img_full","onDragStart","testData","openModal","margin","paddingTop","flexWrap","cat","marginBottom","mouseTracking","infinite","disableButtonsControls","it","page_h","content","dangerouslySetInnerHTML","__html","Dialog","fullScreen","handleClose","TransitionComponent","AppBar","position","Toolbar","autoFocus","faTimes","itemId","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","Actii","actii","location","act_id","openDialog","showItem","img_min","promo_title","closeDialog","aria-labelledby","disableTypography","top","right","TabPanel","children","value","index","other","role","hidden","a11yProps","Profile","useParams","RenderProfile","propTypes","PropTypes","arr_day","i","user_id","info","userMail","user","mail","spam","newValue","valueTab","changeM","target","changeDay","checked","my_spam","openMSG","statusMSG","textMSG","arr_m","my_mail","day","mo","nameM","my_date","my_name","Snackbar","autoHideDuration","closeAlert","message","borderRadius","action","size","Close","zIndex","Tabs","changeTab","Tab","label","mdDown","activePromo","date_end","lgUp","textAlign","orders","my_orders","order_id","date_time_new","AttachMoney","is_delete","Check","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","alignItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","loadData","cartItems_new","thisitem","item_","img_date_update","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","orderPay","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","orderComment","loadTimePred","orderSdacha","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","errorOpen","orderCheck","orderPromo","orderPromoText","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","street","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","pay","text_err","saveDataCustomAddr","this_pay","RadioGroup","changeAddr","Radio","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","marginTop","OutlinedInput","DialogContent","DialogContentText","DialogActions","fullWidth","DialogTitle","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","SimplePopover","promoText","handleClick","Badge","badgeContent","ShoppingCartOutlined","marginRight","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","this_addr","replace","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","code","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","faMapMarkerAlt","scrollIntoView","animate","scrollLeft","maxWidth","closeCity","chooseCity","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","stores","CustomBottomNavigation","thisPage","this_city","faUtensils","fill","faUser","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","pathname","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","bottom","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n  \n  fetchData() {\n    console.log( 'Post.fetchData()' );\n\n    \n    return {\n        title: 'my title',\n        description: 'my description',\n        body: 'my body',\n    };\n    \n}\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    if( orderInfo.orderType ){\n      let type_order = parseInt( orderInfo.orderType ) ?? 0,\n          point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0,\n          point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }else{\n      let type_order = 0,\n          point_id_dev = 0,\n          point_id_pic = 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            //this_item = cart.allItems[ el_cart.item_id ];\n            this_item = allItems.filter( (item) => item.id == el_cart.item_id )[0];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.filter( (item) => item.id == el.item_id )[0];\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        console.log( 'need', allPrice )\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.filter( (item) => item.item_id == id );\n      \n      if( cart_info.length > 0 ){\n        cart_info = cart_info[0];\n      }else{\n        cart_info.count = 0;\n      }\n      \n      let item_info = all_items.filter( (item) => item.id == id )[0];\n      \n      if(item_info){\n        let count = parseInt(cart_info.count) + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        //my_cart = my_cart.filter( (item) => item.count > 0 );\n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: props.match.params.cityName,\n            itemLink: props.match.params.itemLink\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem_mobile\">\n                        <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={12} className=\"MainLine\">\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"SecondLine\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{this.state.item.info_weight}</Typography>\n                            <ItemInfoPopover items={this.state.item.items} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"BtnLine\">\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                \n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent>\n                        <Link to={\"/\"+itemsStore.getCity()+\"/menu/\"+this.state.item.link} >\n                            <CardMedia\n                                component=\"img\"\n                                alt={this.state.item.name}\n                                image={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full+'?'+this.state.item.img_full_date_update}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                            <CardContent style={{ padding: '1.2vw' }}>\n                                <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                                <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                            </CardContent>\n                        </Link>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"span\">{this.state.item.info_weight}</Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.state.item.name}\n                            image={'https://jacofood.ru/src/img_app/'+this.state.item.img_app+'?'+this.state.item.img_app_update}\n                            title={this.state.item.name}\n                        />\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.filter( (item) => item.id == id )[0];\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                <Hidden xsDown>\n                    <AliceCarousel \n                        mouseTracking \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_pc} \n                    />\n                </Hidden>\n                <Hidden smUp>\n                    <AliceCarousel \n                        mouseTracking \n                        disableButtonsControls={true}\n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_mobile} \n                    />\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => (\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        {cat.items.map((it, k) => (\n                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '16px 8px', display: 'flex'}}>\n                                <Hidden xsDown>\n                                    <CardItem data={it} type={'pc'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                                <Hidden smUp>\n                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                            </Grid>\n                        ))}\n                    </Grid>\n                ))}\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '2.2rem', color: '#000' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n    \t\t\t\t\ticonImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport axios from 'axios';\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            page: null,\n            city_name: props.match.params.cityName,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://newjacofood.ru/src/img/aktii/\"+item.img_min} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst queryString = require('query-string');\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport function Profile() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderProfile cityName={cityName} />\n    );\n}\n\nclass RenderProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            city_name: this.props.cityName,\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo){\n        itemsStore.setPromo(JSON.stringify(promo))\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <table className=\"TableOrders\">\n                                <thead>\n                                    <tr>\n                                        <td><Typography variant=\"h5\" component=\"span\">№</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Дата</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Сумма</Typography></td>\n                                        <td></td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <tr key={key}>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.order_id}</Typography></td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.date_time_new}</Typography></td>\n                                            <td>\n                                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{item.sum} <AttachMoneyIcon fontSize=\"small\" /></Typography>\n                                            </td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{parseInt(item.is_delete) == 1 ? <CloseIcon /> : <CheckIcon />}</Typography></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                \n                \n                \n                \n                \n                \n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalProfile\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalProfileContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: ''\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        this.loadData();\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img,\n                        imgUpdate: thisitem.img_date_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.filter( (item_) => parseInt(item_.id) == parseInt(item.id) )[0];\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        if( newValue == 0 ){\n            let thisitem = this.state.orderAddr;\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n              });\n              \n              if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }\n            \n            this.startOrderNext();\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false \n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                if( json.st ){\n                    this.setState({\n                        orderCheck: true\n                    })\n                }else{\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text_err\n                        },\n                        errorOpen: true\n                    })\n                }\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={() => this.setState({ orderCheck: false })}>\n                                <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                            </ButtonGroup>\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\n\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            this.setState({\n                cartItems: cartItems\n            })\n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'home' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        let promoName = this.state.promoName;\n    \n        if( promoName == '' ){\n          /*storage.save({\n            key: 'promoName',\n            data: '',\n            expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n          });*/\n          \n          //cart.promo_info = null;\n          //cart.cart_new_promo = [];\n          \n          /*let allPrice = 0;\n          \n          cart.cart_new.forEach( (el_cart, key_cart) => {\n            allPrice += parseInt(el_cart.one_price) * parseInt(el_cart.count);\n            cart.cart_new[ key_cart ].all_price = parseInt(el_cart.one_price) * parseInt(el_cart.count);\n          })*/\n          \n          //allPrice += parseInt(cart.summ_div);\n          \n          //BadgePrice.set('price', allPrice);\n        }else{\n            let point_id = 0;\n          //let type_order = cart.typeOrder;\n            let type_order = 1;\n          \n            if( type_order == 0 ){\n            //point_id = cart.point_id_dev ?? 0;\n                point_id = 1;\n            }else{\n                point_id = 1;\n            //point_id = cart.point_id_pic ?? 0;\n            }\n          \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_promo', \n                    point_id: point_id,\n                    city_id: itemsStore.getCity(),\n                    promo_name: promoName\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setPromo( JSON.stringify(json), promoName );\n                let check_promo = itemsStore.checkPromo();\n              \n                this.setState({\n                    promoText: check_promo.text\n                })\n              \n            /*cart.promo_info = json;\n            \n            this.setState({ textPromoStatus: json.status_promo })\n            \n            if( json.status_promo ){\n              let res_promo = cart.check_promo();\n              \n              if( res_promo.st ){\n                this.setState({ textPromoStatus: true })\n                this.setState({ textPromoText: json.promo_text.true })\n                \n                storage.save({\n                  key: 'promoName',\n                  data: promoName,\n                  expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n                });\n              }else{\n                this.setState({ textPromoStatus: false })\n                this.setState({ textPromoText: json.promo_text.false })\n                \n                storage.save({\n                  key: 'promoName',\n                  data: '',\n                  expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n                });\n              }\n            }else{\n              this.setState({ textPromoText: json.promo_text.false })\n              \n              let res_promo = cart.check_promo();\n            }\n            \n            this.setState({ textPromoShow: true })*/\n            });\n        }\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_cat_web', \n                    city_id: itemsStore.getCity(),\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                itemsStore.userName = json.user_name;\n                \n                itemsStore.setDops(json.need_dop);\n                itemsStore.setAllItems(json.all_items);\n                itemsStore.setAllItemsCat(json.arr);\n                itemsStore.setFreeItems(json.free_items);\n                itemsStore.setBanners(json.baners)\n                itemsStore.setCityRU(json.this_city_name_ru);\n                \n                this.setState({\n                    cityList: json.city_list,\n                    categoryItems: json.arr, \n                    is_load: true,\n                });\n            })\n            .catch(err => { });\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    static openLoginNew(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'create_profile', \n            number: number\n          })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n          if( json['st'] ){\n            this.setState({ \n              stage_1: false,\n              stage_2: true, \n              errPhone: ''\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n            \n            \n            //setTimeout(() => { clearInterval(timerId); }, 60000);\n            \n            //this.checkAuth(2, 'Профиль создан')\n            //AppMetrica.reportEvent('Профиль создан', {number: this.state.number});\n          }else{\n            //this.checkAuth(3, 'Ошибка создание профиля')\n            //AppMetrica.reportEvent('Ошибка создание профиля', {number: this.state.number});\n            this.setState({\n              errPhone: json.text\n            });\n          }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.userName && itemsStore.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-100} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-100} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Typography key={key} variant=\"h5\" component=\"span\" className={\"ModalLabel \"+( this.state.cityName == item.link ? 'active' : '' )} onClick={this.chooseCity.bind(this, item.link)}>{item.name}</Typography>\n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\nimport { Header } from '../header';\n\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Жако роллы и пицца — сеть кафе</Typography>\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">О Компании</Typography>\n                        <Typography variant=\"body1\">Вакансии</Typography>\n                        <Typography variant=\"body1\">Публичная оферта</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        console.log( props )\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route exact path='/:cityName/profile/'>\n                            {!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    <Hidden lgUp>\n                        <CustomBottomNavigation login={ Header.openLogin } />\n                    </Hidden>\n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(3492)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}