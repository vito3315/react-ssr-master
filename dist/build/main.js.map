{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","console","log","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","get_item","path","split","ItemInfoPopover","props","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","Item","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","setState","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","srcSet","img_new","img_new_update","src","alt","minHeight","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","smUp","display","justifyContent","spacing","width","height","backgroundColor","propsData","axios","url","response","error","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","pagination","clickable","renderBullet","index","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","elevation","CardContent","to","padding","paddingTop","CardActions","flexDirection","marginLeft","ShoppingCartOutlined","sm","md","xl","openItem","CardMedia","image","Transition","ref","Slide","direction","Home","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","banners_pc","banners_mobile","aktia_id","exact","borderRadius","b_img_full","onDragStart","img_app","testData","openModal","margin","flexWrap","cat","marginBottom","it","page_h","dangerouslySetInnerHTML","__html","Dialog","fullScreen","handleClose","TransitionComponent","AppBar","position","Toolbar","autoFocus","faTimes","itemId","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","Actii","actii","location","act_id","openDialog","showItem","openMSG","statusMSG","textMSG","Snackbar","autoHideDuration","closeAlert","message","action","size","Close","img_full","promo_title","closeDialog","aria-labelledby","disableTypography","top","right","activePromo","info","TabPanel","children","value","other","role","hidden","a11yProps","propTypes","PropTypes","Profile","history","loadData","newValue","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","user","mail","pay_id","payId","repeat","is_create","trueOrder","pathname","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","Backdrop","zIndex","CircularProgress","DialogContent","DialogContentText","DialogActions","Tabs","changeTab","Tab","mdDown","date_end","lgUp","textAlign","orders","flex","my_orders","status_order","is_delete","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","fullWidth","type_order_addr_new","time_order_name","time_order","is_preorder","text_time","unix_time_to_client","sum_order","marginRight","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","alignItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","orderCheck","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","saveDataCustomAddr","this_pay","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","marginTop","OutlinedInput","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","promoText","handleClick","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","this_addr","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","code","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","animate","scrollLeft","maxWidth","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","bottom","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = cart_info.count;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    console.log( 'my_dops', my_dops )\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( props )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? props.match.params.cityName : '',\n            itemLink: !this.props.item ? props.match.params.itemLink : '',\n            title: '',\n            description: '',\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(props.match.params.cityName);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <picture>\n                               <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                               <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem_mobile\">\n                        <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                            <picture>\n                               <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                               <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={12} className=\"MainLine\">\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"SecondLine\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{this.state.item.info_weight}</Typography>\n                            <ItemInfoPopover items={this.state.item.items} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"BtnLine\">\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y]);\n// CSS\n//swiper css must come first\nimport \"swiper/swiper.min.css\";\n// your custom css must come second to overwrite certain stylings in swiper.css\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 1,\n            \n            pagination: this.state.type == 'pc' ? true : false,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type}>\n                <div className=\"swiper-wrapper\">\n                    {this.state.data.map((item, key) => \n                        <div className=\"swiper-slide\" key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent>\n                        <Link to={\"/\"+itemsStore.getCity()+\"/menu/\"+this.state.item.link} >\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                            <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                                <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                                <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                                <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                            </CardContent>\n                        </Link>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.state.item.name}\n                            image={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update}\n                            //image={'https://jacofood.ru/src/img_app/'+this.state.item.img_app+'?'+this.state.item.img_app_update}\n                            title={this.state.item.name}\n                        />\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }}\n                        >\n                            <img style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                            style={{ width: 'inherit', height: 'auto', minHeight: 150 }}\n                        >\n                            <img style={{ width: 'inherit', height: 'auto', minHeight: 150 }} src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ width: 'inherit', height: 'auto', minHeight: 300, borderRadius: 15 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img style={{ width: 'inherit', height: 'auto', minHeight: 150 }} src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.filter( (item) => item.id == id )[0];\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        /*\n        \n        <AliceCarousel \n                        mouseTracking \n                        \n                        slidesPerPage={3}\n                        slidesPerScroll={3}\n                        centered\n                        \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_pc} \n                    />\n        \n                    <AliceCarousel \n                        mouseTracking \n                        disableButtonsControls={true}\n                        \n                        slidesPerPage={3}\n                        slidesPerScroll={3}\n                        centered\n                        \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_mobile} \n                    />\n                    \n        */\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                \n                <Hidden xsDown>\n                    { this.state.banners_pc.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"pc\"\n                            data={this.state.banners_pc}\n                        />\n                    }\n                </Hidden>\n                <Hidden smUp>\n                    { this.state.banners_mobile.length == 0 ? null :\n                        <CoverFlowCarousel\n                            type=\"mobile\"\n                            data={this.state.banners_mobile}\n                        />\n                    }\n                </Hidden>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                {itemsStore.getAllItemsCat().map((cat, key) => \n                    <div key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\">\n                            <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                        </Grid>\n                        <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                            {cat.items.map((it, k) => (\n                                <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                    <Hidden xsDown>\n                                        <CardItem data={it} type={'pc'} openItem={this.openItem.bind(this)} />\n                                    </Hidden>\n                                    <Hidden smUp>\n                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                    </Hidden>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                )}\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '2.2rem', color: '#000' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://jacofood.ru/src/img/aktii/\"+item.img_full} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: null,\n            city_name: props.match.params.cityName,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( props.location.search.length > 3 ){\n            \n            let order_pay = props.location.search;\n            \n            let p1 = order_pay.split('&');\n    \t\tlet bank = p1[0].split('bank=');\n    \t\tbank = bank[1];\n\n    \t\tlet order_id = p1[1].split('orderId=');\n            order_id = order_id[1];\n            \n            this.checkPay(bank, order_id);            \n        }\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                console.log( json )\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(this.props.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                /*setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        })\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);*/\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon /> : parseInt(item.status_order) == 6 ? <CheckIcon /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { parseInt(item.time_to_client) == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.unix_time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 7 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 7 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( 'item', this.props.item )\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                            style={{ minHeight: 150 }}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            console.log( 'need_dop', need_dop );\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                console.log( 'cartItems_main', main )\n                console.log( 'cartItems_need_dop', dop_new )\n                console.log( 'cartItems_promo', cartPromoItems )\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n                \n                \n            })\n        }else{\n            console.log( 'this_false' )\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    window.location.pathname = '/'+this.state.city_name+'/profile'\n                }, 300)\n            }\n        });\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', padding: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: newCart,\n                promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n            })\n            \n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                promoText: check_promo.text\n            })\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true\n            if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.userName = json.user_name;\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        is_load: true,\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n    \n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'create_profile', \n                number: number\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    stage_1: false,\n                    stage_2: true, \n                    errPhone: ''\n                })\n            \n                let timerId = setInterval(() => {\n                    this.setState({\n                        timerSMS: this.state.timerSMS-1\n                    })\n                    if( this.state.timerSMS == 0 ){\n                        clearInterval(timerId);\n                    }\n                }, 1000);\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.userName && itemsStore.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-60} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-60} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link key={key} className={ this.state.cityName == item.link ? 'active' : '' } to={{ pathname: this.getNewLink(item.link) }} onClick={() => { setTimeout(()=>{ window.location.reload(); }, 100) }}>\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                            component={ Profile }\n                        />\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                            component={ PageAbout }\n                        />\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                            component={ PageJob }\n                        />\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                            component={ PageInstPay }\n                        />\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                            component={ PageOferta }\n                        />\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                            component={ PagePolitika }\n                        />\n                        \n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(6021)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}