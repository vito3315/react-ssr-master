{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","console","log","title","description","body","length","promoName","fetch","method","headers","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","type_order","point_id_dev","point_id_pic","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Item","props","useParams","itemLink","RenderItem","ItemInfoPopover","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","state","is_load","_isMounted","autorun","link","setState","document","querySelector","classList","remove","scrollTo","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","src","img_full","alt","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","smUp","display","justifyContent","spacing","width","height","backgroundColor","Element","Scroll","scroller","handleDragStart","e","preventDefault","CardItem","data","nextProps","nextState","Card","elevation","CardContent","to","CardMedia","image","img_full_date_update","minHeight","padding","CardActions","flexDirection","marginLeft","sm","md","xl","openItem","img_app","img_app_update","Transition","ref","Slide","direction","Home","RenderHome","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","banners_pc","banners_mobile","aktia_id","exact","b_img_full","onDragStart","testData","openModal","margin","paddingTop","flexWrap","cat","marginBottom","mouseTracking","infinite","disableButtonsControls","it","Dialog","fullScreen","handleClose","TransitionComponent","AppBar","position","Toolbar","autoFocus","faTimes","itemId","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","RenderContact","dynamicallyLoadScript","city_name","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","get_city","path","split","Actii","staticContext","actii","showItem","openDialog","location","pathname","Helmet","content","page","page_h","img_min","promo_title","closeDialog","aria-labelledby","disableTypography","top","right","dangerouslySetInnerHTML","__html","axios","url","response","error","TabPanel","children","value","index","other","role","hidden","a11yProps","Profile","RenderProfile","propTypes","PropTypes","arr_day","i","user_id","info","userMail","user","mail","spam","newValue","valueTab","changeM","target","changeDay","checked","my_spam","openMSG","statusMSG","textMSG","arr_m","my_mail","day","mo","nameM","my_date","my_name","Snackbar","autoHideDuration","closeAlert","message","borderRadius","action","size","Close","zIndex","Tabs","changeTab","Tab","label","mdDown","activePromo","date_end","lgUp","textAlign","orders","my_orders","order_id","date_time_new","AttachMoney","is_delete","Check","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","Cart","RenderCart","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","alignItems","img","imgUpdate","faGift","desc","CartItemMobile","loadData","cartItems_new","thisitem","item_","img_date_update","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","orderPay","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","orderComment","loadTimePred","orderSdacha","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","errorOpen","orderCheck","orderPromo","orderPromoText","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","street","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","pay","text_err","saveDataCustomAddr","this_pay","RadioGroup","changeAddr","Radio","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","marginTop","OutlinedInput","DialogContent","DialogContentText","DialogActions","fullWidth","DialogTitle","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","stores","CustomBottomNavigation","thisPage","this_city","faUtensils","Badge","badgeContent","ShoppingCartOutlined","fill","faMapMarkerAlt","faUser","Status","code","render","status","NotFound","StickyFooter","loadPageInfo","soc_link","getFullYear","link_fb","textDecoration","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","SimplePopover","promoText","handleClick","marginRight","openLogin","App","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","user_name","arr","baners","this_city_name_ru","city_list","this_addr","replace","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","animate","scrollLeft","maxWidth","closeCity","chooseCity","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","bottom","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n  \n  fetchData() {\n    console.log( 'Post.fetchData()' );\n\n    \n    return {\n        title: 'my title',\n        description: 'my description',\n        body: 'my body',\n    };\n    \n}\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    if( orderInfo.orderType ){\n      let type_order = parseInt( orderInfo.orderType ) ?? 0,\n          point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0,\n          point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }else{\n      let type_order = 0,\n          point_id_dev = 0,\n          point_id_pic = 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            //this_item = cart.allItems[ el_cart.item_id ];\n            this_item = allItems.filter( (item) => item.id == el_cart.item_id )[0];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.filter( (item) => item.id == el.item_id )[0];\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        console.log( 'need', allPrice )\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.filter( (item) => item.item_id == id );\n      \n      if( cart_info.length > 0 ){\n        cart_info = cart_info[0];\n      }else{\n        cart_info.count = 0;\n      }\n      \n      let item_info = all_items.filter( (item) => item.id == id )[0];\n      \n      if(item_info){\n        let count = parseInt(cart_info.count) + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        //my_cart = my_cart.filter( (item) => item.count > 0 );\n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nexport function Item(props = 0) {\n    let { itemLink } = useParams();\n    let { cityName } = useParams();\n    \n    itemsStore.setCity(cityName);\n  \n    if( props.item ){\n        return (\n            <RenderItem itemLink={itemLink} item={props.item} type={\"props\"} />\n        );\n    }\n  \n    return (\n        <RenderItem itemLink={itemLink} type={\"render\"} />\n    );\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nclass RenderItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().filter( (item) => item.link == this.props.itemLink )[0];\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.filter( (item) => item.item_id == this.state.item['id'] )[0];\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( this.props.type == 'render' ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem_mobile\">\n                        <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={12} className=\"MainLine\">\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"SecondLine\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{this.state.item.info_weight}</Typography>\n                            <ItemInfoPopover items={this.state.item.items} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"BtnLine\">\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                \n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nconst handleDragStart = (e) => e.preventDefault();\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent>\n                        <Link to={\"/\"+itemsStore.getCity()+\"/menu/\"+this.state.item.link} >\n                            <CardMedia\n                                component=\"img\"\n                                alt={this.state.item.name}\n                                image={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full+'?'+this.state.item.img_full_date_update}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                            <CardContent style={{ padding: '1.2vw' }}>\n                                <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                                <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                            </CardContent>\n                        </Link>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"span\">{this.state.item.info_weight}</Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.state.item.name}\n                            image={'https://jacofood.ru/src/img_app/'+this.state.item.img_app+'?'+this.state.item.img_app_update}\n                            title={this.state.item.name}\n                        />\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function Home() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderHome />\n    );\n}\n\nclass RenderHome extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            banners_pc: [],\n            banners_mobile: []\n        };\n    }\n\n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.filter( (item) => item.id == id )[0];\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\">\n                \n                <Hidden xsDown>\n                    <AliceCarousel \n                        mouseTracking \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_pc} \n                    />\n                </Hidden>\n                <Hidden smUp>\n                    <AliceCarousel \n                        mouseTracking \n                        disableButtonsControls={true}\n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_mobile} \n                    />\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => (\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        {cat.items.map((it, k) => (\n                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '16px 8px', display: 'flex'}}>\n                                <Hidden xsDown>\n                                    <CardItem data={it} type={'pc'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                                <Hidden smUp>\n                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                            </Grid>\n                        ))}\n                    </Grid>\n                ))}\n                \n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '2.2rem', color: '#000' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nexport function Contact() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderContact cityName={cityName} />\n    );\n}\n\nclass RenderContact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            city_name: this.props.cityName,\n            is_load: false,\n        };\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n    \t\t\t\t\ticonImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\n/*export function Actii() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderActii cityName={cityName} />\n    );\n}*/\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //console.log( 'location', props.location )\n        //console.log( 'context', props.context )\n        \n        if( props.staticContext ) {\n            this.state = {\n                actii: props.staticContext.data,  \n                is_load: false,\n                showItem: null,\n                openDialog: false,\n                city_name: get_city(props.location.pathname),\n            };\n        } else {\n            this.state = {\n                actii: [],  \n                is_load: false,\n                showItem: null,\n                openDialog: false,\n                city_name: get_city(props.location.pathname),\n            };\n        }\n        \n        /*this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            city_name: get_city(props.location.pathname),\n        };*/\n    }\n    \n    static fetchData() {\n        console.log( 'Post.fetchData()' );\n\n        let data = {\n            type: 'get_page_info', \n            city_id: 'samara',\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    data: json.data\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        /*fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });*/\n        \n        \n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                        \n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://newjacofood.ru/src/img/aktii/\"+item.img_min} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst queryString = require('query-string');\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport function Profile() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderProfile cityName={cityName} />\n    );\n}\n\nclass RenderProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            city_name: this.props.cityName,\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo){\n        itemsStore.setPromo(JSON.stringify(promo))\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <table className=\"TableOrders\">\n                                <thead>\n                                    <tr>\n                                        <td><Typography variant=\"h5\" component=\"span\">№</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Дата</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Сумма</Typography></td>\n                                        <td></td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <tr key={key}>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.order_id}</Typography></td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.date_time_new}</Typography></td>\n                                            <td>\n                                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{item.sum} <AttachMoneyIcon fontSize=\"small\" /></Typography>\n                                            </td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{parseInt(item.is_delete) == 1 ? <CloseIcon /> : <CheckIcon />}</Typography></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                \n                \n                \n                \n                \n                \n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalProfile\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalProfileContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nconst queryString = require('query-string');\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport function Cart() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderCart cityName={cityName} />\n    );\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass RenderCart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.cityName,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: ''\n        };\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        this.loadData();\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img,\n                        imgUpdate: thisitem.img_date_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.filter( (item_) => parseInt(item_.id) == parseInt(item.id) )[0];\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        if( newValue == 0 ){\n            let thisitem = this.state.orderAddr;\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n              });\n              \n              if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }\n            \n            this.startOrderNext();\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false \n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                if( json.st ){\n                    this.setState({\n                        orderCheck: true\n                    })\n                }else{\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text_err\n                        },\n                        errorOpen: true\n                    })\n                }\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={() => this.setState({ orderCheck: false })}>\n                                <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                            </ButtonGroup>\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/cart'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                    </Badge>\n                </Link>\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Жако роллы и пицца — сеть кафе</Typography>\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">О Компании</Typography>\n                        <Typography variant=\"body1\">Вакансии</Typography>\n                        <Typography variant=\"body1\">Публичная оферта</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                        { this.state.soc_link && this.state.soc_link.link_fb ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_fb }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                            </Link>\n                                :\n                            null\n                        }\n                        { this.state.soc_link && this.state.soc_link.link_inst ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_inst }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                            </Link>\n                                :\n                            null\n                        }\n                        { this.state.soc_link && this.state.soc_link.link_ok ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_ok }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                            </Link>\n                                :\n                            null\n                        }\n                        { this.state.soc_link && this.state.soc_link.link_vk ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_vk }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                            </Link>\n                                :\n                            null\n                        }\n                        \n                            <Link\n                                to={{ pathname: 'https://t.me/jacofood' }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                            </Link>\n                                \n                    </Grid>\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            this.setState({\n                cartItems: cartItems\n            })\n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() == 'home' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        let promoName = this.state.promoName;\n    \n        if( promoName == '' ){\n          /*storage.save({\n            key: 'promoName',\n            data: '',\n            expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n          });*/\n          \n          //cart.promo_info = null;\n          //cart.cart_new_promo = [];\n          \n          /*let allPrice = 0;\n          \n          cart.cart_new.forEach( (el_cart, key_cart) => {\n            allPrice += parseInt(el_cart.one_price) * parseInt(el_cart.count);\n            cart.cart_new[ key_cart ].all_price = parseInt(el_cart.one_price) * parseInt(el_cart.count);\n          })*/\n          \n          //allPrice += parseInt(cart.summ_div);\n          \n          //BadgePrice.set('price', allPrice);\n        }else{\n            let point_id = 0;\n          //let type_order = cart.typeOrder;\n            let type_order = 1;\n          \n            if( type_order == 0 ){\n            //point_id = cart.point_id_dev ?? 0;\n                point_id = 1;\n            }else{\n                point_id = 1;\n            //point_id = cart.point_id_pic ?? 0;\n            }\n          \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_promo', \n                    point_id: point_id,\n                    city_id: itemsStore.getCity(),\n                    promo_name: promoName\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setPromo( JSON.stringify(json), promoName );\n                let check_promo = itemsStore.checkPromo();\n              \n                this.setState({\n                    promoText: check_promo.text\n                })\n              \n            /*cart.promo_info = json;\n            \n            this.setState({ textPromoStatus: json.status_promo })\n            \n            if( json.status_promo ){\n              let res_promo = cart.check_promo();\n              \n              if( res_promo.st ){\n                this.setState({ textPromoStatus: true })\n                this.setState({ textPromoText: json.promo_text.true })\n                \n                storage.save({\n                  key: 'promoName',\n                  data: promoName,\n                  expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n                });\n              }else{\n                this.setState({ textPromoStatus: false })\n                this.setState({ textPromoText: json.promo_text.false })\n                \n                storage.save({\n                  key: 'promoName',\n                  data: '',\n                  expires: 1000 * 3600 * 24 * parseInt( cart.days_cart )\n                });\n              }\n            }else{\n              this.setState({ textPromoText: json.promo_text.false })\n              \n              let res_promo = cart.check_promo();\n            }\n            \n            this.setState({ textPromoShow: true })*/\n            });\n        }\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    load(){\n        if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_cat_web', \n                    city_id: itemsStore.getCity(),\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                itemsStore.userName = json.user_name;\n                \n                itemsStore.setDops(json.need_dop);\n                itemsStore.setAllItems(json.all_items);\n                itemsStore.setAllItemsCat(json.arr);\n                itemsStore.setFreeItems(json.free_items);\n                itemsStore.setBanners(json.baners)\n                itemsStore.setCityRU(json.this_city_name_ru);\n                \n                this.setState({\n                    cityList: json.city_list,\n                    categoryItems: json.arr, \n                    is_load: true,\n                });\n                \n                \n            })\n            .catch(err => { });\n        }\n    }  \n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cartItems: itemsStore.getItems()\n            })\n            \n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.load();\n        })\n    }\n\n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'create_profile', \n            number: number\n          })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n          if( json['st'] ){\n            this.setState({ \n              stage_1: false,\n              stage_2: true, \n              errPhone: ''\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n            \n            \n            //setTimeout(() => { clearInterval(timerId); }, 60000);\n            \n            //this.checkAuth(2, 'Профиль создан')\n            //AppMetrica.reportEvent('Профиль создан', {number: this.state.number});\n          }else{\n            //this.checkAuth(3, 'Ошибка создание профиля')\n            //AppMetrica.reportEvent('Ошибка создание профиля', {number: this.state.number});\n            this.setState({\n              errPhone: json.text\n            });\n          }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName ||\n            this.state.categoryItems.length !== nextState.categoryItems.length ||\n            this.state.openCity !== nextState.openCity ||\n            this.state.openLogin !== nextState.openLogin\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                        <Toolbar className=\"sub_header\">\n                            \n                            <Grid>\n                                <Grid item style={{ marginRight: 15 }}>\n                                    <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                        <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                    </Link> \n                                </Grid>\n                                <Hidden mdDown>\n                                    \n                                    <Grid item className=\"CityProfileNav\">\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                        \n                                        {itemsStore.getToken() ?\n                                            itemsStore.userName && itemsStore.userName.length > 0 ?\n                                                <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                    :\n                                                <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                                </Link>\n                                                :\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                        }\n                                    </Grid>\n                                    \n                                    {this.state.categoryItems.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' ?\n                                                <ScrollLink \n                                                    key={key}\n                                                    to={\"cat\"+item.id} \n                                                    spy={true} \n                                                    isDynamic={true}\n                                                    onSetActive={(el) => { \n                                                        /*if( document.querySelector('.activeCat') ){\n                                                            document.querySelector('.activeCat').classList.remove('activeCat');\n                                                        }\n                                                        document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        \n                                                        document.querySelector('.scrollCat').classList.add('mandatory');\n                                                        setTimeout(()=>{\n                                                            document.querySelector('.scrollCat').classList.remove('mandatory');\n                                                        }, 1000)*/\n                                                        \n                                                        if( document.querySelector('.activeCat') ){\n                                                            document.querySelector('.activeCat').classList.remove('activeCat');\n                                                        }\n                                                        document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        \n                                                        /*document.querySelector('.scrollCat').classList.add('mandatory');\n                                                        document.querySelector('.activeCat').classList.add('activeCatTest');\n                                                        setTimeout(()=>{\n                                                            if( document.querySelector('.scrollCat') ){\n                                                                document.querySelector('.scrollCat').classList.remove('mandatory');\n                                                                document.querySelector('.activeCat').classList.remove('activeCatTest');\n                                                            }\n                                                        }, 1000)*/\n                                                    }} \n                                                    smooth={true} \n                                                    offset={-100} \n                                                    activeClass=\"activeCat\" \n                                                    id={'link_'+item.id} \n                                                    style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                                >\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </ScrollLink> \n                                                    :\n                                                <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/actii\"} \n                                            className=\"catLink\"\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contact\"} \n                                            className=\"catLink\"\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                    </Grid>\n                                </Hidden>\n                            </Grid>\n                        \n                            <Hidden lgUp>\n                                <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                            </Hidden>\n                                    \n                        </Toolbar>\n                        \n                        {this.state.activePage == 'home' ?\n                            <Grid className=\"scrollCat\">\n                                <Hidden lgUp>\n                                    {this.state.categoryItems.map((item, key) => \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                document.querySelector('.scrollCat').animate({\n                                                    scrollLeft: 200\n                                                }, 100);\n                                                \n                                                \n                                                \n                                                /*document.querySelector('.scrollCat').classList.add('mandatory');\n                                                document.querySelector('.activeCat').classList.add('activeCatTest');\n                                                setTimeout(()=>{\n                                                    if( document.querySelector('.scrollCat') ){\n                                                        document.querySelector('.scrollCat').classList.remove('mandatory');\n                                                        document.querySelector('.activeCat').classList.remove('activeCatTest');\n                                                    }\n                                                }, 1000)*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                            \n                                    )}\n                                </Hidden>\n                            </Grid>\n                                :\n                            null\n                        }\n                    </AppBar>\n                    \n                    <Dialog\n                        open={this.state.openCity}\n                        fullWidth={true}\n                        maxWidth={'xs'}\n                        onClose={this.closeCity.bind(this)}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        className=\"ModalCity\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                        <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                            {this.state.cityList.map((item, key) => \n                                <Typography key={key} variant=\"h5\" component=\"span\" className={\"ModalLabel \"+( this.state.cityName == item.link ? 'active' : '' )} onClick={this.chooseCity.bind(this, item.link)}>{item.name}</Typography>\n                            )}\n                        </DialogContent>\n                    </Dialog>\n                    \n                    <Dialog\n                        open={this.state.openLogin}\n                        fullWidth={true}\n                        maxWidth={'xs'}\n                        onClose={this.closeLogin.bind(this)}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        className=\"ModalAuth\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                        <DialogContent className=\"ModalContent_1_1\">\n                            <div className=\"ModalContent_1_2\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                <InputMask \n                                    className=\"InputMask\"\n                                    mask=\"8 (999) 999-99-99\" \n                                    placeholder=\"8 (999) 999-99-99\" \n                                    disabled={!this.state.stage_1}\n                                    value={this.state.userLogin}\n                                    onKeyPress={this.handleKeyPress}\n                                    onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                />\n                                {this.state.stage_2 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                        :\n                                    null\n                                }\n                                {this.state.errPhone.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            {this.state.stage_2 ?\n                                <div className=\"ModalContent_1_3\">\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                    <div className=\"ModalContent_1_2\">\n                                        <InputMask \n                                            className=\"InputMask\"\n                                            mask=\"9999\" \n                                            value={this.state.userCode}\n                                            //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                            onChange={ this.changeCode.bind(this) }\n                                        />\n                                        {this.state.timerSMS > 0 ?\n                                            <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                :\n                                            <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                        }\n                                    </div>\n                                    {this.state.errSMS.length > 0 ?\n                                        <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                            <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                </div>\n                                    :\n                                null\n                            }\n                        </DialogContent>\n                        {this.state.stage_1 ?\n                            <DialogActions style={{ padding: '12px 24px' }}>\n                                <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        {this.state.stage_2 ?\n                            <DialogActions style={{ padding: '12px 24px' }}>\n                                <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                        </Hidden>\n                            :\n                        null\n                    }\n                    \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route exact path='/:cityName/profile/'>\n                            {!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    <Hidden lgUp>\n                        <CustomBottomNavigation login={this.openLogin.bind(this)} />\n                    </Hidden>\n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(860)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}