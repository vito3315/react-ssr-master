{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","type_order","point_id_dev","point_id_pic","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","console","log","items_on_price","new_one_price","test","all_items","cart_info","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","get_item","path","split","ItemInfoPopover","props","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","Item","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","setState","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","src","img_full","alt","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","smUp","display","justifyContent","spacing","width","height","backgroundColor","propsData","axios","url","response","error","Element","Scroll","scroller","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","elevation","CardContent","to","CardMedia","image","img_full_date_update","minHeight","padding","CardActions","flexDirection","marginLeft","sm","md","xl","openItem","img_app","img_app_update","Transition","ref","Slide","direction","Home","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","banners_pc","banners_mobile","aktia_id","exact","b_img_full","onDragStart","testData","openModal","margin","paddingTop","flexWrap","cat","marginBottom","mouseTracking","infinite","disableButtonsControls","it","page_h","dangerouslySetInnerHTML","__html","Dialog","fullScreen","handleClose","TransitionComponent","AppBar","position","Toolbar","autoFocus","faTimes","itemId","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","Actii","actii","location","act_id","openDialog","showItem","openMSG","statusMSG","textMSG","Snackbar","autoHideDuration","closeAlert","message","borderRadius","action","size","Close","promo_title","closeDialog","aria-labelledby","disableTypography","top","right","activePromo","info","TabPanel","children","value","index","other","role","hidden","a11yProps","Profile","useParams","RenderProfile","propTypes","PropTypes","arr_day","i","user_id","userMail","user","mail","spam","newValue","valueTab","changeM","target","changeDay","checked","my_spam","arr_m","my_mail","day","mo","nameM","my_date","my_name","zIndex","Tabs","changeTab","Tab","label","mdDown","date_end","lgUp","textAlign","orders","my_orders","order_id","date_time_new","AttachMoney","is_delete","Check","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","alignItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","loadData","cartItems_new","thisitem","item_","img_date_update","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","orderPay","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","orderComment","loadTimePred","orderSdacha","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","errorOpen","orderCheck","orderPromo","orderPromoText","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","street","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","pay","text_err","saveDataCustomAddr","this_pay","RadioGroup","changeAddr","Radio","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","marginTop","OutlinedInput","DialogContent","DialogContentText","DialogActions","fullWidth","DialogTitle","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","SimplePopover","newCart","promoText","handleClick","Badge","badgeContent","ShoppingCartOutlined","marginRight","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","this_addr","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","code","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","faMapMarkerAlt","scrollIntoView","animate","scrollLeft","maxWidth","closeCity","chooseCity","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","stores","CustomBottomNavigation","thisPage","this_city","faUtensils","fill","faUser","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","pathname","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","bottom","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    if( orderInfo.orderType ){\n      let type_order = parseInt( orderInfo.orderType ) ?? 0,\n          point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0,\n          point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }else{\n      let type_order = 0,\n          point_id_dev = 0,\n          point_id_pic = 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            //this_item = cart.allItems[ el_cart.item_id ];\n            this_item = allItems.filter( (item) => item.id == el_cart.item_id )[0];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = cart.allItems[ el_cart.item_id ];\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.filter( (item) => item.id == el.item_id )[0];\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        console.log( 'need', allPrice )\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.filter( (item) => item.item_id == id );\n      \n      if( cart_info.length > 0 ){\n        cart_info = cart_info[0];\n      }else{\n        cart_info.count = 0;\n      }\n      \n      let item_info = all_items.filter( (item) => item.id == id )[0];\n      \n      if(item_info){\n        let count = parseInt(cart_info.count) + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        //my_cart = my_cart.filter( (item) => item.count > 0 );\n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.filter( (item) => item.id == el.item_id )[0];\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: props.match.params.cityName,\n            itemLink: props.match.params.itemLink,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem_mobile\">\n                        <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={12} className=\"MainLine\">\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"SecondLine\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{this.state.item.info_weight}</Typography>\n                            <ItemInfoPopover items={this.state.item.items} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"BtnLine\">\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent>\n                        <Link to={\"/\"+itemsStore.getCity()+\"/menu/\"+this.state.item.link} >\n                            <CardMedia\n                                component=\"img\"\n                                alt={this.state.item.name}\n                                image={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full+'?'+this.state.item.img_full_date_update}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                            <CardContent style={{ padding: '1.2vw' }}>\n                                <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                                <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                            </CardContent>\n                        </Link>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"span\">{this.state.item.info_weight}</Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.state.item.name}\n                            image={'https://jacofood.ru/src/img_app/'+this.state.item.img_app+'?'+this.state.item.img_app_update}\n                            title={this.state.item.name}\n                        />\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.filter( (item) => item.id == id )[0];\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                <Hidden xsDown>\n                    <AliceCarousel \n                        mouseTracking \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_pc} \n                    />\n                </Hidden>\n                <Hidden smUp>\n                    <AliceCarousel \n                        mouseTracking \n                        disableButtonsControls={true}\n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_mobile} \n                    />\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => (\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        {cat.items.map((it, k) => (\n                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '16px 8px', display: 'flex'}}>\n                                <Hidden xsDown>\n                                    <CardItem data={it} type={'pc'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                                <Hidden smUp>\n                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                            </Grid>\n                        ))}\n                    </Grid>\n                ))}\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '2.2rem', color: '#000' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://jacofood.ru/src/img/aktii/\"+item.img_full} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst queryString = require('query-string');\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport function Profile() {\n    let { cityName } = useParams();\n  \n    itemsStore.setCity(cityName);\n  \n    return (\n        <RenderProfile cityName={cityName} />\n    );\n}\n\nclass RenderProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            city_name: this.props.cityName,\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo){\n        itemsStore.setPromo(JSON.stringify(promo))\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <table className=\"TableOrders\">\n                                <thead>\n                                    <tr>\n                                        <td><Typography variant=\"h5\" component=\"span\">№</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Дата</Typography></td>\n                                        <td><Typography variant=\"h5\" component=\"span\">Сумма</Typography></td>\n                                        <td></td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <tr key={key}>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.order_id}</Typography></td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{item.date_time_new}</Typography></td>\n                                            <td>\n                                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{item.sum} <AttachMoneyIcon fontSize=\"small\" /></Typography>\n                                            </td>\n                                            <td><Typography variant=\"h5\" component=\"span\">{parseInt(item.is_delete) == 1 ? <CloseIcon /> : <CheckIcon />}</Typography></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                \n                \n                \n                \n                \n                \n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalProfile\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalProfileContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: ''\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img,\n                        imgUpdate: thisitem.img_date_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.filter( (item_) => parseInt(item_.id) == parseInt(item.id) )[0];\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        if( newValue == 0 ){\n            let thisitem = this.state.orderAddr;\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n              });\n              \n              if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }\n            \n            this.startOrderNext();\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false \n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                if( json.st ){\n                    this.setState({\n                        orderCheck: true\n                    })\n                }else{\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text_err\n                        },\n                        errorOpen: true\n                    })\n                }\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={() => this.setState({ orderCheck: false })}>\n                                <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                            </ButtonGroup>\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\n\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            \n            console.log( itemsStore.getPromo() )\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: newCart,\n                promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n            })\n            \n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                promoText: check_promo.text\n            })\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_cat_web', \n                    city_id: itemsStore.getCity(),\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                itemsStore.userName = json.user_name;\n                \n                itemsStore.setDops(json.need_dop);\n                itemsStore.setAllItems(json.all_items);\n                itemsStore.setAllItemsCat(json.arr);\n                itemsStore.setFreeItems(json.free_items);\n                itemsStore.setBanners(json.baners)\n                itemsStore.setCityRU(json.this_city_name_ru);\n                \n                this.setState({\n                    cityList: json.city_list,\n                    categoryItems: json.arr, \n                    is_load: true,\n                });\n            })\n            .catch(err => { });\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    static openLoginNew(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'create_profile', \n            number: number\n          })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n          if( json['st'] ){\n            this.setState({ \n              stage_1: false,\n              stage_2: true, \n              errPhone: ''\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n            \n            \n            //setTimeout(() => { clearInterval(timerId); }, 60000);\n            \n            //this.checkAuth(2, 'Профиль создан')\n            //AppMetrica.reportEvent('Профиль создан', {number: this.state.number});\n          }else{\n            //this.checkAuth(3, 'Ошибка создание профиля')\n            //AppMetrica.reportEvent('Ошибка создание профиля', {number: this.state.number});\n            this.setState({\n              errPhone: json.text\n            });\n          }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.userName && itemsStore.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-100} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-100} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Typography key={key} variant=\"h5\" component=\"span\" className={\"ModalLabel \"+( this.state.cityName == item.link ? 'active' : '' )} onClick={this.chooseCity.bind(this, item.link)}>{item.name}</Typography>\n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Жако роллы и пицца — сеть кафе</Typography>\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        console.log( props )\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route exact path='/:cityName/profile/'>\n                            {!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                            component={ PageAbout }\n                        />\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                            component={ PageJob }\n                        />\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                            component={ PageInstPay }\n                        />\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                            component={ PageOferta }\n                        />\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                            component={ PagePolitika }\n                        />\n                        \n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    <Hidden lgUp>\n                        <CustomBottomNavigation login={ Header.openLogin } />\n                    </Hidden>\n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(6021)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}