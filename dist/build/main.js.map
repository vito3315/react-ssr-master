{"version":3,"sources":["webpack://react-ssr/webpack/runtime/chunk loaded","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/","webpack://react-ssr/webpack/bootstrap","webpack://react-ssr/webpack/runtime/compat get default export","webpack://react-ssr/webpack/runtime/define property getters","webpack://react-ssr/webpack/runtime/global","webpack://react-ssr/webpack/runtime/hasOwnProperty shorthand","webpack://react-ssr/webpack/runtime/make namespace object","webpack://react-ssr/webpack/runtime/node module decorator","webpack://react-ssr/webpack/runtime/jsonp chunk loading","webpack://react-ssr/webpack/startup"],"names":["deferred","queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","orderType","orderAddr","point_id","orderPic","this_date","moment","format","this_time","this_dow","Date","status_promo","text","promo_text","limits","date","min","max","time","type_order","point_id_dev","point_id_pic","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","get_item","path","split","ItemInfoPopover","props","React","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-describedby","edge","color","aria-label","onClick","event","currentTarget","icon","faInfoCircle","style","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","Typography","variant","component","protein","fat","carbohydrates","kkal","Item","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","setState","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","xs","paddingBottom","paddingRight","src","img_full","alt","paddingLeft","gutterBottom","tmp_desc","info_weight","faRubleSign","ButtonGroup","disableElevation","disableRipple","Button","add","bind","minus","faMinus","faPlus","smUp","display","justifyContent","spacing","width","height","backgroundColor","propsData","axios","url","response","error","console","log","Element","Scroll","scroller","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","elevation","CardContent","to","CardMedia","image","img_full_date_update","minHeight","padding","CardActions","flexDirection","marginLeft","sm","md","xl","openItem","img_app","img_app_update","Transition","ref","Slide","direction","Home","hash","duration","delay","smooth","offset","getElementById","getBoundingClientRect","banners_pc","banners_mobile","aktia_id","exact","b_img_full","onDragStart","testData","openModal","margin","paddingTop","flexWrap","cat","marginBottom","mouseTracking","infinite","disableButtonsControls","it","page_h","dangerouslySetInnerHTML","__html","Dialog","fullScreen","handleClose","TransitionComponent","AppBar","position","Toolbar","autoFocus","faTimes","itemId","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","href","phone_new","Actii","actii","location","act_id","openDialog","showItem","openMSG","statusMSG","textMSG","Snackbar","autoHideDuration","closeAlert","message","borderRadius","action","size","Close","promo_title","closeDialog","aria-labelledby","disableTypography","top","right","activePromo","info","TabPanel","children","value","index","other","role","hidden","a11yProps","propTypes","PropTypes","Profile","arr_day","i","user_id","userMail","user","mail","spam","newValue","valueTab","changeM","target","changeDay","checked","my_spam","arr_m","my_mail","day","mo","nameM","my_date","my_name","zIndex","Tabs","changeTab","Tab","label","mdDown","date_end","lgUp","textAlign","orders","flex","my_orders","status_order","is_delete","order_id","date_time_new","AttachMoney","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","alignItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","loadData","cartItems_new","thisitem","item_","img_date_update","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","orderPay","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","orderComment","loadTimePred","orderSdacha","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","pic_point","all_addr","date_pred","picPointInfo","timePred","errorOpen","orderCheck","orderPromo","orderPromoText","get_addr_pic","get_my_addr","get_addr","choosePic","pointId","check_promo","street","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","payFull","typeOrder","addrPic","comment","addrDev","pay","text_err","saveDataCustomAddr","this_pay","RadioGroup","changeAddr","Radio","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","changePredDay","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","marginTop","OutlinedInput","DialogContent","DialogContentText","DialogActions","fullWidth","DialogTitle","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","SimplePopover","newCart","promoText","handleClick","Badge","badgeContent","ShoppingCartOutlined","marginRight","textDecoration","openLogin","Header","load","sendSMS","categoryItems","openCity","cityList","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","arr","baners","this_city_name_ru","city_list","this_addr","pathname","number","join","slice","timerId","setInterval","clearInterval","cod","token","closeLogin","code","checkCode","ArrowDropDown","spy","isDynamic","onSetActive","activeClass","whiteSpace","faMapMarkerAlt","scrollIntoView","animate","scrollLeft","maxWidth","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","cursor","repeatSMS","opacity","stores","CustomBottomNavigation","thisPage","this_city","faUtensils","fill","faUser","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","bottom","ReactDOM","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"build/main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    return this.cityNameRU;\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.userName = userName;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    if( orderInfo.orderType ){\n      let type_order = parseInt( orderInfo.orderType ) ?? 0,\n          point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0,\n          point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }else{\n      let type_order = 0,\n          point_id_dev = 0,\n          point_id_pic = 0;\n    }\n    \n    let this_date = moment(by_time).format(\"YYYY-MM-DD\"),\n        this_time = moment(by_time).format(\"H:mm\"),\n        this_dow = parseInt(moment(by_time).format(\"E\"));\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Данный промокод не распространяется на указанный вами день. Попробуйте изменить дату заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Введённый вами промокод не может быть применён на указанное время. Попробуйте изменить время заказа.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = cart_info.count;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = item_info['price'];\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count >= 0 ){\n        if( count < 0 ){\n          count = 0;\n        }\n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: props.match.params.cityName,\n            itemLink: props.match.params.itemLink,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    /*\n        <div itemscope itemtype=\"https://schema.org/Product\"> \n\t\t\t<meta itemprop=\"name\" content={this.state.item.name} /> \n\t\t\t<link itemprop=\"url\" href={'https://jacofood.ru/'} /> \n\t\t\t<link itemprop=\"image\" href=\"https://jacofood.ru/src/img/items/<?=$site->data['page']['item']['img']?>\" /> \n\t\t\t<meta itemprop=\"category\" content=\"<?=$site->data['page']['item']['cat_name']?>\" /> \n\t\t\t<div itemprop=\"offers\" itemscope itemtype=\"https://schema.org/Offer\"> \n\t\t\t\t<meta itemprop=\"priceCurrency\" content=\"RUB\" /> \n\t\t\t\t<meta itemprop=\"price\" content=\"<?=$site->data['page']['item']['price']?>\" /> \n\t\t\t\t<link itemprop=\"availability\" href=\"https://schema.org/InStock\" /> \n\t\t\t</div> \n\t\t\t<meta itemprop=\"description\" content=\"<?=$site->data['page']['item']['tmp_desc']?>\" /> \n\t\t</div>\n    */\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\">\n                        <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingRight: 12 }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                            { this.state.item.info_weight.length > 0 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{'Вес: '+this.state.item.info_weight} <ItemInfoPopover items={this.state.item.items} /></Typography>\n                                :\n                                null\n                            }\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{'Цена: '+this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            \n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem_mobile\">\n                        <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full} alt={this.state.item.name} />\n                        </Grid>\n                        <Grid item xs={12} className=\"MainLine\">\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc ItemPrice\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"SecondLine\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc ItemOther\">{this.state.item.info_weight}</Typography>\n                            <ItemInfoPopover items={this.state.item.items} />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{'Состав: '+this.state.item.tmp_desc}</Typography>\n                        </Grid>\n                        <Grid item xs={12} className=\"BtnLine\">\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\nvar Element  = Scroll.Element;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent>\n                        <Link to={\"/\"+itemsStore.getCity()+\"/menu/\"+this.state.item.link} >\n                            <CardMedia\n                                component=\"img\"\n                                alt={this.state.item.name}\n                                image={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img_full+'?'+this.state.item.img_full_date_update}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                            <CardContent style={{ padding: '1.2vw' }}>\n                                <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                                <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                            </CardContent>\n                        </Link>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"span\">{this.state.item.info_weight}</Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                            :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.state.item.name}\n                            image={'https://jacofood.ru/src/img_app/'+this.state.item.img_app+'?'+this.state.item.img_app_update}\n                            title={this.state.item.name}\n                        />\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: true,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            openItem: null,\n            openModal: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: props.match.params.cityName,\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    scroller.scrollTo(\"myScrollToElement\", {\n                        duration: 800,\n                        delay: 500,\n                        smooth: \"easeInOutQuart\",\n                        offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 150\n                    });\n                }\n            }, 2000);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            console.log( data )\n            \n            this.setState( {\n                page: data.page\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            \n            console.log( itemsStore.getAllItemsCat() )\n            \n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            let banners_pc = [],\n                banners_mobile = [];\n            \n            itemsStore.getBanners().map((item, key) => {\n                if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                    banners_pc.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                    banners_mobile.push(\n                        <Link\n                            to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                            exact={ true }\n                        >\n                            <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                        </Link>\n                    )\n                    \n                }else{\n                    banners_pc.push(\n                        <img style={{ minHeight: 380 }} src={\"https://jacofood.ru/src/img/banners/\"+item.b_img_full+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                    \n                    banners_mobile.push(\n                        <img src={\"https://jacofood.ru/src/img/banners/\"+item.img_app+\"?date=2021_03_12_13_56_39\"} onDragStart={handleDragStart} />\n                    )\n                }\n            })\n            \n            this.setState({ \n                banners_pc: banners_pc,\n                banners_mobile: banners_mobile\n            });\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.filter( (item) => item.id == id )[0];\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n\n    render() {\n        if( itemsStore.getAllItemsCat().length == 0 ){\n            return (\n                <Element name=\"myScrollToElement\">\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingTop: 64, flexWrap: 'wrap' }} className=\"MainItems mainContainer\">\n                        {this.state.testData.map((cat, key) => [\n                            <div key={key}>\n                                <Hidden xsDown>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px'}}>\n                                        <div style={{ width: 260, height: 170, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 120, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        <div style={{ width: 260, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                    </Grid>\n                                </Hidden>\n                                <Hidden smUp>\n                                    <Grid item xs={12} sm={4} md={3} xl={3} style={{ padding: '16px 8px', display: 'flex', flexDirection: 'row'}}>\n                                        <div style={{ width: 200, height: 170, backgroundColor: '#e5e5e5' }} />\n                                        <div style={{ marginLeft: 15}}>\n                                            <div style={{ width: 100, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                            <div style={{ width: 150, height: 20, backgroundColor: '#e5e5e5', marginBottom: 10 }} />\n                                        </div>\n                                    </Grid>\n                                </Hidden>\n                            </div>    \n                        ])}\n                    </Grid>\n                </Element>\n            );\n        }\n        \n        return (\n            <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                <Hidden xsDown>\n                    <AliceCarousel \n                        mouseTracking \n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_pc} \n                    />\n                </Hidden>\n                <Hidden smUp>\n                    <AliceCarousel \n                        mouseTracking \n                        disableButtonsControls={true}\n                        //autoPlay={true}\n                        //autoPlayInterval={3000}\n                        infinite={true}\n                        items={this.state.banners_mobile} \n                    />\n                </Hidden>\n                \n                {itemsStore.getAllItemsCat().map((cat, key) => (\n                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" key={key} name={\"cat\"+cat.id} id={\"cat\"+cat.id}>\n                        {cat.items.map((it, k) => (\n                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '16px 8px', display: 'flex'}}>\n                                <Hidden xsDown>\n                                    <CardItem data={it} type={'pc'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                                <Hidden smUp>\n                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                </Hidden>\n                            </Grid>\n                        ))}\n                    </Grid>\n                ))}\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                {this.state.openItem ?\n                    <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                        <AppBar style={{ position: 'relative', backgroundColor: '#fff', height: 50 }}>\n                            <Toolbar style={{ display: 'flex', justifyContent: 'space-between', height: 50, minHeight: 50 }}>\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" style={{ height: 33 }} />\n                            \n                                <Button autoFocus color=\"inherit\" onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '2.2rem', color: '#000' }} />\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                        <div>\n                            <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                        </div>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Element>\n        );\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            this.setState({\n                points: json,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.points}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\"></Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            this.setState({ \n                actii: json.actii, \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.filter( (item) => item.id == act_id )[0];\n                    \n                    this.openDialog(this_item);\n                    window.location.hash = '';\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    {this.state.actii.map((item, key) =>\n                        <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                            <img src={\"https://jacofood.ru/src/img/aktii/\"+item.img_full} alt={item.promo_title} style={{ width: '100%' }} onClick={this.openDialog.bind(this, item)} />\n                        </Grid>\n                    )}\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, useParams, useHistory } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            \n            title: '',\n            description: '',\n            page: null,\n            city_name: props.match.params.cityName,\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: ''\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{item.sum} <AttachMoneyIcon fontSize=\"small\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon /> : <CheckIcon />}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    <div>\n                                                        <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                    </div>\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalProfile\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalProfileContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <img src={\"https://newjacofood.ru/src/img/items/\"+this.state.item.img+'?'+this.state.item.imgUpdate} />\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: ''\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n                \n            console.log( json )\n            \n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img,\n                        imgUpdate: thisitem.img_date_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.filter( (item_) => parseInt(item_.id) == parseInt(item.id) )[0];\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: item.img,\n                            imgUpdate: item.img_date_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img,\n                            imgUpdate: thisitem.img_date_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        if( newValue == 0 ){\n            let thisitem = this.state.orderAddr;\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.filter( (item) => item.id == pointId )[0];\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            console.log( check_promo )\n            \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            this.setState({\n                orderPromoText: check_promo.text\n            })\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n              });\n              \n              if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }\n            \n            this.startOrderNext();\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({ \n                orderCheckDop: false \n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                if( json.st ){\n                    this.setState({\n                        orderCheck: true\n                    })\n                }else{\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text_err\n                        },\n                        errorOpen: true\n                    })\n                }\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                            <FontAwesomeIcon icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            style={{ width: '100%' }}\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Адрес\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? this.state.orderAddr.city_name+', '+this.state.orderAddr.street+' '+this.state.orderAddr.home+', Пд. '+this.state.orderAddr.pd+', Эт. '+this.state.orderAddr.et+', Кв. '+this.state.orderAddr.kv : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\">\n                                <FormControl  variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<FontAwesomeIcon icon={faRubleSign} />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\">\n                            <div>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={item.city_name+', '+item.street+' '+item.home+', Пд. '+item.pd+', Эт. '+item.et+', Кв. '+item.kv} />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"newAddrMobile\">\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Адрес\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseTimeDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseTimeDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+', Пд.:'+\n                                    this.state.orderAddr.pd+', Эт.:'+\n                                    this.state.orderAddr.et+', Кв.:'+\n                                    this.state.orderAddr.kv\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <FontAwesomeIcon icon={faRubleSign} /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={() => this.setState({ orderCheck: false })}>\n                                <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                            </ButtonGroup>\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\n\n\nclass SimplePopover extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            promoName: '',\n            promoText: '',\n        };\n    }\n    \n    componentDidMount = () => {\n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            let cartItems = itemsStore.getItems();\n            \n            console.log( itemsStore.getPromo() )\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: newCart,\n                promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n            })\n            \n            itemsStore.getSumDiv();\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            console.log( check_promo )\n            \n            this.setState({\n                promoText: check_promo.text\n            })\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <FontAwesomeIcon icon={faRubleSign} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <FontAwesomeIcon icon={faRubleSign} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Промокод дает: {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_cat_web', \n                    city_id: itemsStore.getCity(),\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                itemsStore.userName = json.user_name;\n                \n                itemsStore.setDops(json.need_dop);\n                itemsStore.setAllItems(json.all_items);\n                itemsStore.setAllItemsCat(json.arr);\n                itemsStore.setFreeItems(json.free_items);\n                itemsStore.setBanners(json.baners)\n                itemsStore.setCityRU(json.this_city_name_ru);\n                \n                this.setState({\n                    cityList: json.city_list,\n                    categoryItems: json.arr, \n                    is_load: true,\n                });\n            })\n            .catch(err => { });\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        window.location.href = this_addr.replace(this.state.cityName, city);\n    }\n    \n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        \n        console.log( this_addr )\n        console.log( this.state.cityName )\n        console.log( city )\n        \n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    static openLoginNew(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        this.setState({\n            errPhone: '',\n            errSMS: ''\n        });\n        \n        let number = this.state.userLogin;\n        \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        \n        number = number.slice(1);\n        \n        this.setState({\n            userLoginFormat: number\n        })\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'create_profile', \n            number: number\n          })\n        }).then(res => res.json()).then(json => {\n            console.log( json )\n            \n          if( json['st'] ){\n            this.setState({ \n              stage_1: false,\n              stage_2: true, \n              errPhone: ''\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n            \n            \n            //setTimeout(() => { clearInterval(timerId); }, 60000);\n            \n            //this.checkAuth(2, 'Профиль создан')\n            //AppMetrica.reportEvent('Профиль создан', {number: this.state.number});\n          }else{\n            //this.checkAuth(3, 'Ошибка создание профиля')\n            //AppMetrica.reportEvent('Ошибка создание профиля', {number: this.state.number});\n            this.setState({\n              errPhone: json.text\n            });\n          }\n        });\n    }\n    \n    repeatSMS(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify({\n            type: 'repeat_sms', \n            number: this.state.userLoginFormat\n          })\n        }).then(res => res.json()).then(json => {\n          if( json['st'] ){\n            this.setState({\n              timerSMS: 59\n            })\n            \n            let timerId = setInterval(() => {\n              this.setState({\n                timerSMS: this.state.timerSMS-1\n              })\n              if( this.state.timerSMS == 0 ){\n                  clearInterval(timerId);\n              }\n            }, 1000);\n          }else{\n                this.setState({\n                    errSMS: json.text\n                });\n          }\n        });\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    render() {\n        \n        if( !this.state.is_load ){\n            return null;\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.userName && itemsStore.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                {this.state.categoryItems.map((item, key) => \n                                    <Grid item key={key}>\n                                        {this.state.activePage == 'home' ?\n                                            <ScrollLink \n                                                key={key}\n                                                to={\"cat\"+item.id} \n                                                spy={true} \n                                                isDynamic={true}\n                                                onSetActive={(el) => { \n                                                    if( document.querySelector('.activeCat') ){\n                                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                                    }\n                                                    document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                }} \n                                                smooth={true} \n                                                offset={-100} \n                                                activeClass=\"activeCat\" \n                                                id={'link_'+item.id} \n                                                style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 8px' }}\n                                            >\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </ScrollLink> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 8px' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link> \n                                        }\n                                    </Grid>)\n                                }\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className=\"catLink\"\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            document.querySelector('.scrollCat').animate({\n                                                scrollLeft: 200\n                                            }, 100);\n                                        }} \n                                        smooth={true} \n                                        offset={-100} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link key={key} to={{ pathname: this.getNewLink(item.link) }} onClick={() => { window.location.reload(); }}>\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel \"+( this.state.cityName == item.link ? 'active' : '' )}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faUser, faPlus, faMinus, faGift, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: ''\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage()\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? 'black' : 'gray' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {itemsStore.getToken() ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            soc_link: null,\n            cityName: '',\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Typography variant=\"body1\">Жако роллы и пицца — сеть кафе</Typography>\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        console.log( props )\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                               \n                    <Header />        \n                    \n                    <Switch>\n                        <Route\n                            path='/:cityName/contact'\n                            exact={ true }\n                            component={ Contact }\n                        />\n                        <Route\n                            path='/:cityName/actii'\n                            exact={ true }\n                            component={ Actii }\n                        />\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                            component={ Home }\n                        />\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                            component={ Profile }\n                        />\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                            component={ Item }\n                        />\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                            component={ Cart }\n                        />\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                            component={ PageAbout }\n                        />\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                            component={ PageJob }\n                        />\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                            component={ PageInstPay }\n                        />\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                            component={ PageOferta }\n                        />\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                            component={ PagePolitika }\n                        />\n                        \n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    <Hidden lgUp>\n                        <CustomBottomNavigation login={ Header.openLogin } />\n                    </Hidden>\n                    <StickyFooter />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ssr\"] = self[\"webpackChunkreact_ssr\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(6021)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}