{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","itemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","state","is_load","city_name","itemLink","linkItem","title","data","description","_isMounted","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","Helmet","content","Box","component","className","Grid","container","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","Hidden","smUp","textAlign","margin","flexWrap","wordWrap","propsData","page","axios","url","response","cats","all","error","console","log","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","Card","CardContent","cursor","openItem","is_new","top","right","padding","CardActions","marginLeft","sm","md","xl","CardItemBot","nextProps","nextState","href","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","offset","duration","smooth","search","location","checkItem","act_id","innerWidth","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","baners","aktia_id","to","exact","borderRadius","onDragStart","removeEventListener","history","pushState","touchStart","touchEnd","startMove","pageY","handleClose","page_h","cat","main_link","spacing","mdUp","Backdrop","open","CircularProgress","smDown","xsDown","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","dangerouslySetInnerHTML","__html","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","def_type","renderPay","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","onKeyPress","enterPromoMobile","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","dop_text","fontWeight","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","aria-describedby","handleClick","transformOrigin","textDecoration","openLogin","HeaderCat","Header","load","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","openCity","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","user_name","sms1","number","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","whiteSpace","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"mappings":"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","file":"main.78be0472bb0e5172fe79.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token') );  \n        }, 300 )\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@material-ui/core/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        /*if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }*/\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Box component=\"div\" className=\"pcItem\" >\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n//import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            console.log( 'city', city ) \n            \n            if( city == 'samara' && parseInt(this.state.item['id']) == 238 ){\n                this.setState({\n                    old_price: 715,\n                    is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 238 ){\n                this.setState({\n                    old_price: 675,\n                    is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                console.log( 'city', city ) \n                \n                if( city == 'samara' && parseInt(this.state.item['id']) == 238 ){\n                    this.setState({\n                        old_price: 715,\n                        is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 238 ){\n                    this.setState({\n                        old_price: 675,\n                        is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginLeft: 0, width: '100%' }}>\n                            <div>\n                                <Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography>\n                            </div>\n                            { this.state.is_old_price === false ? null :\n                                <Typography className=\"CardPriceItem_old\" variant=\"h5\" component=\"span\">{this.state.old_price} <Ruble /></Typography>\n                            }\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={6} sm={6} md={6} xl={6} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                                //ref={el => this.elementSource = el}\n                            />\n                            <img \n                                //ref={el => this.elementImg = el}\n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6} xl={6} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <div>\n                                { this.state.is_old_price === false ? null :\n                                    <Typography gutterBottom className=\"CardPriceItem_old\" variant=\"h5\" component=\"span\">{this.state.old_price} <Ruble width=\"20\" viewBox=\"100 -100 800 300\" /></Typography>\n                                }\n                                <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            </div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n                } );\n            } );\n        }\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden mdUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden smDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden mdUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <Hidden xsDown>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Hidden>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            \n                            <MuiDialogContent className=\"modalActiiContent\">\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </MuiDialogContent>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                        sum_div: point['sum_div'], \n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            let search = window.location.search;\n            \n            if( search.length > 0 ){\n                \n                if(search.indexOf('orderId') > 0){\n                    let order_pay = window.location.search;\n                \n                    let p1 = order_pay.split('&');\n            \t\tlet bank = p1[0].split('bank=');\n            \t\tbank = bank[1];\n\n            \t\tlet order_id = p1[1].split('orderId=');\n                    order_id = order_id[1];\n                    \n                    this.checkPay(bank, order_id);\n                    \n                    let state = { },\n                        title = '',\n                        url = window.location.pathname;\n\n                    window.history.pushState(state, title, url)\n                }\n                \n                if(search.indexOf('trueOrder') > 0){\n                    let state = { },\n                        title = '',\n                        url = window.location.pathname;\n\n                    window.history.pushState(state, title, url)\n                }\n            }\n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        this.setState({ hasError: true })\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                }else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        try{\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                }else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            size=\"small\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            size=\"small\"\n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                        id=\"PROMONAME\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    onKeyPress={this.enterPromoMobile}\n                                    id=\"PromoMobile\"\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv )\n                                        } />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\">\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\"> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n                \n                setTimeout( () => {\n                    this.sms1 = false;\n                }, 300 )\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden mdUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden smDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden mdUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden mdUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden mdUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                 \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}