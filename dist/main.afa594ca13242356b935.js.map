{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","itemsStore","items","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","promo_text","limits","date","min","max","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","console","log","state","is_load","city_name","match","params","itemLink","title","description","_isMounted","autorun","link","kkal","protein","fat","carbohydrates","fetchData","data","page","document","querySelector","classList","remove","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","className","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","component","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","allergens","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","smUp","textAlign","margin","flexWrap","wordWrap","spacing","propsData","axios","url","response","cats","error","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","CardItem","nextProps","nextState","Card","CardContent","cursor","openItem","is_new","top","right","padding","CardActions","marginLeft","sm","md","xl","CardItemBot","href","Transition","ref","Slide","direction","Home","now","arrMax","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","acc","curr","b","hash","duration","smooth","offset","checkItem","location","pathname","act_id","innerWidth","openItemPC","replace","history","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","all","baners","aktia_id","to","exact","borderRadius","onDragStart","removeEventListener","touchStart","touchEnd","startMove","pageY","handleClose","this_link","mainLink","findIndex","CSSTransition","transitionName","transitionEnterTimeout","transitionLeaveTimeout","cat","main_link","it","Backdrop","open","CircularProgress","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Actii","actii","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","page_h","dangerouslySetInnerHTML","__html","closeDialog","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","type_order_addr_new","time_order_name","time_order","is_preorder","text_time","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","pic_point","choosePic","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","saveDataCustomAddr","id_addr","changePredDay","this_pay","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","aria-describedby","handleClick","transformOrigin","textDecoration","openLogin","Header","load","sendSMS","arr","main_cat","categoryItemsNew","categoryItems","openCity","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_name","this_city_name_ru","sms1","number","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","globalState","ReactDOM","GLOBAL_STATE","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"mappings":"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","file":"main.afa594ca13242356b935.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: promo_info.promo_text.false\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n  };\n\n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props.item )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? props.match.params.cityName : '',\n            itemLink: !this.props.item ? props.match.params.itemLink : '',\n            title: '',\n            description: '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(props.match.params.cityName);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                        Аллергены\n                                    </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                Аллергены\n                            </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n//import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        \n        //  <FontAwesomeIcon icon={faRubleSign} />\n        \n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </a>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: null,\n            title: '',\n            description: ''\n        };\n        \n        this.loadBanners( this.props.data.all.other.cats.baners );\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData\n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                console.log( 'fetchData', json )\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if ((time + 500 - Date.now()) < 0) {\n                    itemsStore.getAllItemsCat().map( (item, key) => {\n                        var elem = document.getElementById('cat'+item.id);\n                        if( elem ){\n                            var top = elem.getBoundingClientRect().top + document.body.scrollTop - 60;\n                            \n                            if(top < 0){\n                                arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                            }\n                        }\n                    })\n                    \n                    if( arrMax.length > 0 ){\n                        let max = arrMax.reduce((acc, curr) => acc.b > curr.b ? acc : curr);\n                        \n                        arrMax = [];\n                        \n                        if( max.length > 0 ){\n                            if( document.querySelector('.activeCat') ){\n                                document.querySelector('.activeCat').classList.remove('activeCat');\n                            }\n                            if( document.querySelector('#link_'+max[0].main_id) ){\n                                document.querySelector('#link_'+max[0].main_id).classList.add('activeCat');\n                            }\n                        }\n                    }\n                    \n                    time = Date.now();\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 50\n                        });\n                    }, 300)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let hash = window.location.pathname;\n                \n                let checkItem = hash.split('/item/');\n                \n                console.log( 'checkItem', checkItem )\n                \n                if( checkItem.length > 1 ){\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    let item = allItems.find( (item) => item.link == act_id );\n                    \n                    console.log( 'checkItem allItems', allItems )\n                    console.log( 'checkItem act_id', act_id )\n                    console.log( 'checkItem item', item )\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(item.id);\n                    }else{\n                        this.openItemPC(item.id);\n                    }\n                    \n                    let str = window.location.pathname;\n                    str.replace(\"/item/\"+act_id, '');\n                    \n                    this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                /*return ;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('?item_')[1];\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }*/\n            }, 1300);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                page: data.page,\n                title: data.title,\n                description: data.description,\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            this.loadBanners(itemsStore.getBanners());\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        \n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        console.log( 'itemsStore.getAllItemsCat()', itemsStore.getAllItemsCat() );\n        console.log( 'mainLink', mainLink );\n        \n        return (\n            <CSSTransition component=\"div\" transitionName=\"example\" transitionEnterTimeout={500} transitionLeaveTimeout={300} >\n                {this.state.is_load === false ?\n                    <Element name=\"myScrollToElement\" className=\"Category\">\n                        \n                        \n                        {itemsStore.getAllItemsCat().map((cat, key) => \n                            mainLink == '' || mainLink == cat.main_link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                            \n                        )}\n                        \n                        <Hidden smUp>\n                            <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </Hidden>\n                    </Element>\n                        :\n                    <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                        <Helmet>\n                            <title>{this.state.title}</title>\n                            <meta name=\"description\" content={this.state.description} />\n                        </Helmet>\n                        \n                        <Hidden xsDown>\n                            { this.state.banners_pc.length == 0 ? null :\n                                <CoverFlowCarousel\n                                    type=\"pc\"\n                                    data={this.state.banners_pc}\n                                />\n                            }\n                        </Hidden>\n                        <Hidden smUp>\n                            { this.state.banners_mobile.length == 0 ? null :\n                                <CoverFlowCarousel\n                                    type=\"mobile\"\n                                    data={this.state.banners_mobile}\n                                />\n                            }\n                        </Hidden>\n                        \n                        {itemsStore.getAllItemsCat().map((cat, key) => \n                            mainLink == '' || mainLink == cat.main_link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <Hidden xsDown>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Hidden>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                            \n                        )}\n                        \n                        {this.state.openItem ?\n                            <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                                <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                        <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                    </IconButton>\n                                </MuiDialogTitle>\n                                <div>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                                </div>\n                            </Dialog>\n                                :\n                            null\n                        }\n                        \n                        {this.state.openItem ?\n                            <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                                <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                        <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                    </IconButton>\n                                </MuiDialogTitle>\n                                \n                                <MuiDialogContent className=\"modalActiiContent\">\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                                </MuiDialogContent>\n                            </Dialog>\n                                :\n                            null\n                        }\n                        \n                    </Element>\n                }\n            </CSSTransition>\n        )\n        \n        \n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: null,\n            city_name: props.match.params.cityName,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( props.location.search.length > 3 ){\n            \n            let order_pay = props.location.search;\n            \n            let p1 = order_pay.split('&');\n    \t\tlet bank = p1[0].split('bank=');\n    \t\tbank = bank[1];\n\n    \t\tlet order_id = p1[1].split('orderId=');\n            order_id = order_id[1];\n            \n            this.checkPay(bank, order_id);            \n        }\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            \n            let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n            \n            if( check_reload.length > 0 ){\n                setTimeout(()=>{\n                    this.loadData();\n                }, 6000)\n            }\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(this.props.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            \n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: false,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }else{\n                        let data = {\n                            orderType: cartData.orderType,\n                            orderAddr: '',\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: '',\n                            orderPredTime: '',\n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha,\n                            \n                        };\n                        \n                        itemsStore.saveCartData(data);\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }else{\n                    if( this.state.pic_point.length > 0 ){\n                        this.choosePic(this.state.pic_point[0]['id']);\n                    }\n                    \n                    if( this.state.my_addr.length > 0 ){\n                        this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                    }\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name+'/');\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        if( this.state.orderPromo.length == 0 ){\n            this.setState({\n                orderPromoText: ''\n            })\n        }else{\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_promo_web', \n                    city_id: itemsStore.getCity(),\n                    promo_name: this.state.orderPromo\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n                let check_promo = itemsStore.checkPromo();\n                  \n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            })\n        }\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.newAddrInfo && parseInt(this.state.newAddrInfo.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                    })\n                }else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street+' '+this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    window.location.pathname = '/'+this.state.city_name+'/profile'\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv )\n                                        } />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: props.match.params.cityName,\n            title: '',\n            description: '',\n            page: null\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props )\n        \n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n        itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n        itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n        itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n        itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n        itemsStore.setBanners(this.props.data.all.other.cats.baners)\n        //itemsStore.setCityRU(json.this_city_name_ru);\n        \n        \n        this.state = {      \n            this_link: this.props.this_link,\n            categoryItemsNew: this.props.data.all.other.cats.main_cat,\n            \n            categoryItems: this.props.data.all.other.cats.arr,\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city,\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data.all.other.cats.city_list,\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null\n        };\n    }\n    \n    componentDidMount = () => {\n        \n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true;\n            \n            if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    console.log( json )\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    //itemsStore.setDops(json.need_dop);\n                    //itemsStore.setAllItems(json.all_items);\n                    //itemsStore.setAllItemsCat(json.arr);\n                    //itemsStore.setAllItemsCatNew(json.main_cat);\n                    //itemsStore.setFreeItems(json.free_items);\n                    //itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        //cityList: json.city_list,\n                        //categoryItems: json.arr, \n                        //categoryItemsNew: json.main_cat,\n                        is_load: true,\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }else{\n                this.is_load = false;\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        localStorage.removeItem('cartData');\n        setTimeout(()=>{\n            //window.location.href = this_addr.replace(this.state.cityName, city);\n        }, 300)\n        \n    }\n    \n    getNewLink(city){\n        let this_addr = this.state.this_link;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 === false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms1 = false;\n                \n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }} \n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/actii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contact\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            /*if( document.querySelector('.scrollCat') ){\n                                                document.querySelector('.scrollCat').animate({\n                                                    scrollLeft: 200\n                                                }, 100);\n                                            }*/\n                                        }} \n                                        smooth={true} \n                                        offset={-60} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contact' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\n//const initialState = !process.env.IS_SERVER ? window.__INITIAL_DATA__ : {};\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        console.log( this.props )\n        console.log( props )\n        //console.log( 'initialState', initialState )\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={\"/\"+this.state.cityName+\"/\"} /> : <Profile />}\n        \n        \n                    \n        \n        return (\n            <Provider { ...stores }>\n                \n                    <div className=\"home\">\n                                   \n                        <Header \n                            data={this.props.globalState.data} \n                            city={this.props.globalState.city} \n                            this_link={this.props.globalState.this_link} />        \n                        \n                        <Switch>\n                            <Route\n                                path='/:cityName/contact'\n                                exact={ true }\n                                component={ Contact }\n                            />\n                            <Route\n                                path='/:cityName/actii'\n                                exact={ true }\n                                component={ Actii }\n                            />\n                            <Route\n                                path='/:cityName/menu'\n                                exact={ true }\n                            >\n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName'\n                                exact={ true }\n                            >\n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/item/:id'\n                                exact={ true }\n                            >\n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route \n                                exact \n                                path='/:cityName/profile/'\n                                component={ Profile }\n                            />\n                            <Route\n                                path='/:cityName/menu/:itemLink'\n                                exact={ true }\n                            >\n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/cart'\n                                exact={ true }\n                                component={ Cart }\n                            />\n                            <Route\n                                path='/:cityName/about'\n                                exact={ true }\n                                component={ PageAbout }\n                            />\n                            <Route\n                                path='/:cityName/jobs'\n                                exact={ true }\n                                component={ PageJob }\n                            />\n                            <Route\n                                path='/:cityName/instpayorders'\n                                exact={ true }\n                                component={ PageInstPay }\n                            />\n                            <Route\n                                path='/:cityName/publichnaya-oferta'\n                                exact={ true }\n                                component={ PageOferta }\n                            />\n                            <Route\n                                path='/:cityName/politika-konfidencialnosti'\n                                exact={ true }\n                                component={ PagePolitika }\n                            />\n                            <Route\n                                path='/'\n                            >\n                                <Redirect push\n                                    to={\"/togliatti\"}\n                                />\n                            </Route>\n                            \n                            <Route\n                                component={ NotFound }\n                            />\n                        </Switch>\n                        \n                     \n                        {this.state.activePage == 'cart' ?\n                            <Hidden lgUp>\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n                                :\n                            <Hidden lgUp>\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n                        }\n                        \n                        <StickyFooter cityName={ this.props.globalState.city } />\n                    </div>\n                \n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}