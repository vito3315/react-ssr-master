{"version":3,"file":"main.7d3da9f0f9ebf9a6e9b0.js","mappings":"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","sources":["webpack://react-ssr/./server/routes.js","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["const { Home } = require( '../src/components/home' );\nconst { HomeCat } = require( '../src/components/home' );\nconst { Item } = require( '../src/components/item' );\nconst { Contact } = require( '../src/components/contact' );\nconst { Actii } = require( '../src/components/actii' );\nconst { Profile } = require( '../src/components/profile' );\nconst { Cart } = require( '../src/components/cart' );\n\nconst { PageAbout } = require( '../src/components/pageAbout' );\nconst { PageJob } = require( '../src/components/pageJob' );\nconst { PageInstPay } = require( '../src/components/pageInstPay' );\nconst { PageOferta } = require( '../src/components/pageOferta' );\nconst { PagePolitika } = require( '../src/components/pagePolitika' );\n\nmodule.exports = [\n    {\n        path: '/:cityName',\n        exact: true,\n        component: Home,\n        type: 'home',\n        code: 200\n    },\n    {\n        path: '/:cityName/home',\n        exact: true,\n        component: Home,\n        type: 'home',\n        code: 200\n    },\n    {\n        path: '/:cityName/menu',\n        exact: true,\n        component: Home,\n        type: 'home',\n        code: 200\n    },\n    {\n        path: '/:cityName/contacts',\n        exact: true,\n        component: Contact,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/akcii/:act_id',\n        exact: true,\n        component: Actii,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/akcii',\n        exact: true,\n        component: Actii,\n        type: '',\n        code: 200\n    },\n    \n    {\n        path: '/:cityName/menu/:itemLink',\n        exact: true,\n        component: HomeCat,\n        type: 'home',\n        code: 200\n    },\n    {\n        path: '/:cityName/item/:itemLink',\n        exact: true,\n        component: Item,\n        type: 'item',\n        code: 200\n    },\n    {\n        path: '/:cityName/menu/:catLink/:itemId',\n        exact: true,\n        component: Item,\n        type: 'item',\n        code: 200\n    },\n    {\n        path: '/',\n        exact: true,\n        component: Home,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/profile',\n        exact: true,\n        component: Profile,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/cart',\n        exact: true,\n        component: Cart,\n        type: '',\n        code: 200\n    },\n    \n    {\n        path: '/:cityName/about',\n        exact: true,\n        component: PageAbout,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/jobs',\n        exact: true,\n        component: PageJob,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/instpayorders',\n        exact: true,\n        component: PageInstPay,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/publichnaya-oferta',\n        exact: true,\n        component: PageOferta,\n        type: '',\n        code: 200\n    },\n    {\n        path: '/:cityName/politika-konfidencialnosti',\n        exact: true,\n        component: PagePolitika,\n        type: '',\n        code: 200\n    },\n    \n    {\n        path: '/sitemap.xml',\n        exact: true,\n        type: 'other',\n        code: 200\n    },\n    \n    {\n        path: '*',\n        component: Home,\n        type: 'home',\n        code: 404\n    },\n];","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport AppBar from '@mui/material/AppBar';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nimport Input from '@mui/material/Input';\n\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        {this.state.item.img_app.length > 0 ?\n                            <picture>\n                                <source srcSet={`\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_276x276.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_292x292.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_366x366.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_466x466.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_585x585.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_732x732.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_1168x1168.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_1420x1420.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_2000x2000.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${this.state.item.img_name}_276x276.jpg`} loading=\"lazy\" />\n                            </picture>\n                                :\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{ this.state.type == 'dop' ? '' : this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\">\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >{this.state.count}</Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    {this.state.item.img_app.length > 0 ?\n                        <picture style={{ width: '40%' }}>\n                            <source srcSet={`\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_276x276.jpg 138w, \n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_292x292.jpg 146w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_366x366.jpg 183w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_466x466.jpg 233w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_585x585.jpg 292w\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_732x732.jpg 366w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_1168x1168.jpg 584w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_1420x1420.jpg 760w,\n                                https://storage.yandexcloud.net/site-img/${this.state.item.img_app}_2000x2000.jpg 1875w`} \n                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                            <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${this.state.item.img_name}_276x276.jpg`} loading=\"lazy\" />\n                        </picture>\n                            :\n                        <picture style={{ width: '40%' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                loading=\"lazy\"\n                            />\n                        </picture>\n                    }\n\n\n                    \n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            img_app: thisitem.img_app,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                img_app: thisitem.img_app,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                img_app: thisitem.img_app,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                img_app: thisitem.img_app,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                img_app: thisitem.img_app,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = '';\n\n        let street1 = document.querySelector('#newAddrStreet') ? document.querySelector('#newAddrStreet').value : '';\n        let street2 = document.querySelector('#newAddrStreetModal') ? document.querySelector('#newAddrStreetModal').value : '';\n\n        street = street1.length > 0 ? street1 : street2.length > 0 ? street2 : '';\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                \n                \n                <Grid item container sx={{ display: { xs: 'none', sm: 'flex' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={ \n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Accordion>\n                            <AccordionSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className=\"newAddr\">\n                                <div>\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"newAddrStreet\"\n                                        size=\"small\"\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                        options={this.state.all_addr.map((option) => option.value)}\n                                        renderInput={(params) => (\n                                            <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                        )}\n                                    />\n                                    <TextField \n                                        label=\"Дом\" \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        value={this.state.newAddrHome} \n                                        onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField \n                                        label=\"Подъезд\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrPD} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Этаж\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrET} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Квартира\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrKV} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />  \n                                </div>\n                                <div>\n                                    <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                        <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                        <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                    </ButtonGroup>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1}>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </TabPanel>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className='_comment_'>\n                            <TextField\n                                id=\"outlined-multiline-flexible\"\n                                label=\"Комментарий курьеру\"\n                                multiline\n                                rowsMax={2}\n                                value={this.state.orderComment}\n                                onChange={this.changeComment}\n                                variant=\"outlined\" \n                                size={'small'} \n                                type={ 'text' }\n                            />\n\n                        </div>\n                            :\n                        null\n                    }\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Оплата</FormLabel>\n                            <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                {this.state.renderPay.map((item, key) => \n                                    <FormControlLabel key={key} value={item.type} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={item.title} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                            <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                <FormControlLabel value='1' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Как можно быстрее\" />\n                                <FormControlLabel value='2' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Предзаказ\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    {this.state.orderTimes == 2 ?\n                        <div>\n                            <FormControl style={{ width: '30%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                    displayEmpty\n                                    value={this.state.orderPredDay}\n                                    onChange={this.changePredDay}\n                                    inputProps={{\n                                    id: 'age-native-simple',\n                                    }}\n                                >\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '20%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    displayEmpty\n                                    size='small'\n                                    value={this.state.orderPredTime}\n                                    onChange={this.changePredTime}\n                                    inputProps={{\n                                    id: 'age-native-simple1',\n                                    }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                            :\n                        null\n                    }\n                    \n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                    </div>\n                    <div>\n                        <table className=\"tableCart\">\n                            <tbody>\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <tr className=\"rowAboutDop\">\n                                    <td colSpan='3'>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                        <br />\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                    </td>\n                                </tr>\n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Доставка:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Итого:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"orderSdacha\">\n                            <div>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                    <Input\n                                        type=\"number\"\n                                        id=\"standard-adornment-weight\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>    \n                            :\n                        null\n                    }\n                    <div className=\"promoOrder\">\n                        <div>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                    id=\"PROMONAME\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                </Grid>\n            \n            \n                <Grid item container sx={{ display: { xs: 'flex', sm: 'none' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                this.state.orderAddr.city_name+', '+\n                                this.state.orderAddr.street+' '+\n                                this.state.orderAddr.home+\n                                \n                                ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                    : ''}</Typography>\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                        <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                        </div>\n                    </TabPanel>\n                    \n                    <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                    </div>\n                    <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                    </div>\n                    <div style={{ marginTop: 15 }}>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.orderPromo}\n                                onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                onKeyPress={this.enterPromoMobile}\n                                id=\"PromoMobile\"\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.orderPromoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                    </div>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Комментарий курьеру\"\n                                    multiline\n                                    rowsMax={2}\n                                    value={this.state.orderComment}\n                                    onChange={this.changeComment}\n                                    variant=\"outlined\" \n                                    size={'small'} \n                                    type={ 'text' }\n                                />\n                            </form>\n                        </div>\n                            :\n                        null\n                    }\n                                            \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type=\"number\"\n                                    style={{ width: '100%' }}\n                                    value={this.state.orderSdacha}\n                                    onChange={this.changeSdacha}\n                                    endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                    label=\"Подготовить сдачу с\"\n                                />\n                            </FormControl>\n                        </div>\n                        :\n                        null\n                    }\n                    \n                    <div>\n                        <div className=\"tableMobile\">\n                            {this.state.cartItems_main.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            {this.state.cartItems_promo.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            <div className=\"boxItem rowAboutDop\">\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                <br />\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                            </div>\n                            \n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            \n                        </div>\n                        \n                        \n                    </div>\n                \n                    <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                        <div style={{ padding: '5px 0px' }}>\n                            <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div style={{ paddingBottom: 5 }}>\n                            <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </Grid>\n                \n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreetModal\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material/Box';\n\n//import LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconClose } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n\n\n\n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            //modules: [Navigation, Pagination, A11y, Autoplay],\n\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            //autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                //clickable: true,\n                \n            },\n\n            /*pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},*/\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    render() {\n\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"} style={{ overflow: 'hidden', position: 'relative' }}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" />\n                        <div className=\"swiper-button-next\" />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        //const width = window.innerWidth;\n\n        let width = 0;\n        let GRID = 0;\n\n        //const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 1280;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg`} \n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 320;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: '3%' }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: '100%', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: '500', color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_ hidddenText3\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"outlined\" onClick={this.add.bind(this)}>\n                                        В корзину за {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass CardItemBotNew extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        //const width = window.innerWidth;\n\n        let width = 0;\n        let GRID = 0;\n\n        //const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 1280;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    dataSrc={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                \n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    dataSrc={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 320;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                               \n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    dataSrc={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: '500', color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_ hidddenText3\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"outlined\" onClick={this.add.bind(this)}>\n                                        В корзину за {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            \n        };\n    }\n\n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                if( this._isMounted === true ){\n                    this.setState( {\n                        page: data.page,\n                        title: data.title,\n                        description: data.description,\n\n\n                    } );\n                }\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat()\n                })\n            }\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <React.Fragment key={k}>\n                                            <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                <CardItemBotNew data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Grid>\n                                        \n                                            <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <CardItemBotNew data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                            </Grid>\n                                        </React.Fragment>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    \n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Box>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    \n                    <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Box>\n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Box>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} sx={{ padding: { xs: '0px 5%', sm: '0px 20px' } }} style={{ margin: 0, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Grid>\n                                            \n                                                <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Grid>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <div style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                </div>\n                            </DialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Dialog disableElevation maxWidth={'md'} sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                <div className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose style={{ width: 'inherit', height: 'inherit', fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                </div>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog disableElevation maxWidth={'lg'} sx={{ display: { xs: 'none', lg: 'block' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                <div className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -32, left: 16, zIndex: 1500, width: 25, height: 25, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose style={{ width: 'inherit', height: 'inherit', fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                </div>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Dialog sx={{ display: { xs: 'block', md: 'none' } }} disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <div style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                    </div>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                    { this.state.openItem.items.length == 1 ? null :\n                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                    }\n\n                                    <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                        { this.state.openItem.items.map( (item, key) =>\n                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                    </div>\n                                                </div>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) }\n                                    </div>\n                                    \n                                    \n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'block', sm: 'none' } }} disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <div style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                    </div>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                        <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                            { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                                    :\n                                                null\n                                            }\n                                            { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                null\n                                                    :\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                            }\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcSet={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <div className='IconButtonClose' style={{ position: 'absolute', top: -32, left: 16, zIndex: 2000, width: 25, height: 25, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose style={{ width: 'inherit', height: 'inherit', fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                </div>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcSet={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog sx={{ display: { xs: 'none', lg: 'block' } }} disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <div className='IconButtonClose' style={{ position: 'absolute', top: -32, left: 16, zIndex: 2000, width: 25, height: 25, backgroundColor: 'transparent', cursor: 'pointer' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose style={{ width: 'inherit', height: 'inherit', fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                                </div>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcSet={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      //backgroundColor: '#f5f5f9',\n      //color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false,\n\n            img_name: this.props.item ? this.props.item.img_app.length > 0 ? this.props.item.img_app : this.props.item.img_new : '',\n            img_type: this.props.item ? this.props.item.img_app.length > 0 ? 'new' : 'old' : 'old',\n            desc: this.props.item ? this.props.item.marc_desc_full.length > 0 ? this.props.item.marc_desc_full : this.props.item.tmp_desc : ''\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item,\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {this.state.img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcSet={`\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} className=\"img\" src={`https://storage.yandexcloud.net/site-img/${this.state.img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? null :\n                                    <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                        <div>\n                                            <HtmlTooltip\n                                                onClose={this.handleTooltipClose.bind(this)}\n                                                open={this.state.openTooltip}\n                                                disableFocusListener\n                                                disableHoverListener\n                                                disableTouchListener\n                                                PopperProps={{\n                                                    disablePortal: true,\n                                                }}\n                                                title={\n                                                <React.Fragment>\n                                                    <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                    \n                                                    { this.state.item.items.length == 1 ? null :\n                                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                    }\n\n                                                    <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                        { this.state.item.items.map( (item, key) =>\n                                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                    </div>\n                                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                    </div>\n                                                                </div>\n                                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                    </div>\n                                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                        </div>\n                                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                        </div>\n                                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        ) }\n                                                    </div>\n                                                </React.Fragment>\n                                                }\n                                            >\n                                                <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                    { this.state.openTooltip === true ?\n                                                        <IconInfoBlack />\n                                                            :\n                                                        <IconInfoWhite />\n                                                    }\n                                                    \n                                                </div>\n                                            </HtmlTooltip>\n                                        </div>\n                                    </ClickAwayListener>\n                                }\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup elevation={0} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc ? this.props.openSetPc.bind(this, this.state.item.items) : null }>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{this.state.desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {this.state.img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcSet={`\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${this.state.img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${this.state.img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? null :\n                                    <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo ? this.props.openInfo.bind(this) : null}>\n                                        { this.props.openModalPCInfo && this.props.openModalPCInfo === true ?\n                                            <IconInfoBlack />\n                                                :\n                                            <IconInfoWhite />\n                                        }\n                                    </div>\n                                }\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup elevation={0} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc ? this.props.openSetPc.bind(this, this.state.item.items) : null}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{this.state.desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableelevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', backgroundColor: '#fff' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart _NON_HOVER_' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableelevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', backgroundColor: '#fff' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@mui/material/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport AppBar from '@mui/material/AppBar';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'none', lg: 'block' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'block', lg: 'none' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                        size=\"small\"\n                                    />\n                                    <TextField \n                                        InputProps={{ readOnly: true }} \n                                        label=\"Номер телефона\" \n                                        value={this.state.info.user.login} \n                                        className=\"input\" \n                                        size=\"small\"\n                                    />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField \n                                            label=\"Дата рождения\" \n                                            className=\"input\" \n                                            InputProps={{ readOnly: true }} \n                                            value={this.state.info.user.date_bir} \n                                            size=\"small\"\n                                        />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\" size=\"small\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                    size=\"small\"\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                  size=\"small\"\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                        size=\"small\"\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={\n                                            <Checkbox \n                                                checked={ parseInt(this.state.spam) == 1 ? true : false } \n                                                name=\"checkedC\" \n                                                sx={{\n                                                    '&.Mui-checked': {\n                                                        color: '#c03',\n                                                    },\n                                                }}\n                                            />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </DialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel \n                                        key={key} \n                                        value={item.id} \n                                        control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } \n                                        label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                        </ButtonGroup>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\n\nimport TextField from '@mui/material/TextField';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\n\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, MiniActionsCartButtonPrize, IconRuble, MyTextInput, IconClose } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport Modal from '@mui/material/Modal';\n// web.cjs is required for IE11 support\nimport { useSpring, animated } from '@react-spring/web';\n\nimport AuthCode from 'react-auth-code-input';\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n      from: { opacity: 0 },\n      to: { opacity: open ? 1 : 0 },\n      onStart: () => {\n        if (open && onEnter) {\n          onEnter();\n        }\n      },\n      onRest: () => {\n        if (!open && onExited) {\n          onExited();\n        }\n      },\n    });\n  \n    return (\n      <animated.div ref={ref} style={style} {...other}>\n        {children}\n      </animated.div>\n    );\n});\n\nFade.propTypes = {\n    children: PropTypes.element,\n    in: PropTypes.bool.isRequired,\n    onEnter: PropTypes.func,\n    onExited: PropTypes.func,\n};\n\nclass ModalLogin extends React.Component{\n    sms1 = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            open: false,\n\n            typeLogin: 'start',\n            fromType: 'start',\n            loginLogin: '',\n            pwdLogin: '',\n            newPassword: '',\n            genPwd: '',\n            checkCode: '',\n\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            \n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            timerSMS: 89,\n            timerSMSTime: this.toTime(89),\n            errPhone: '',\n            errSMS: '',\n\n            errTitle: '',\n            errText1: '',\n            errText2: '',\n        };\n    }\n\n    componentDidUpdate(){\n        if( this.props.isOpen != this.state.open ){\n            this.setState({\n                open: this.props.isOpen,\n                typeLogin: 'start',\n                fromType: 'start',\n                loginLogin: '',\n                pwdLogin: '',\n                newPassword: '',\n                genPwd: '',\n                checkCode: '',\n    \n                pwd: '',\n                ResPWD: false,\n                NeedCode: false,\n                \n    \n                openLogin: false,\n                userLogin: '',\n                userLoginFormat: '',\n                userCode: '',\n                \n                timerSMS: 89,\n                timerSMSTime: this.toTime(89),\n                errPhone: '',\n                errSMS: '',\n\n                errTitle: '',\n                errText1: '',\n                errText2: '',\n            })\n        }\n    }\n\n    componentDidMount(){\n        this.gen_password();\n    }\n\n    getData = (method, data = {}, is_load = true) => {\n        if( is_load == true ){\n            this.setState({\n                is_load: true\n            })\n        }\n        \n        data.type = method;\n\n        return fetch(config.urlApi, {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify( data )\n        }).then(res => res.json()).then(json => {\n          return json;\n        })\n        .catch(err => { \n          setTimeout( () => {\n            this.setState({\n              is_load: false\n            })\n          }, 300 )\n          console.log( err )\n        });\n    }  \n\n    open(){\n        this.setState({\n            open: true\n        })\n    }\n\n    close(){\n        this.props.close();\n        /*this.setState({\n            open: false,\n            fromType: 'start',\n            typeLogin: 'start',\n            loginLogin: '',\n            pwdLogin: '',\n            newPassword: '',\n        })*/\n    }\n\n    changeData(type, event){\n        let data = event.target.value;\n\n        if( type == 'loginLogin' ){\n            if( isNaN(data) && data != '+' ){\n                return ;\n            }\n\n            if( parseInt(data[0]) == 9 ){\n                data = '8' + data;\n            }\n            if( data[0] == '+' && parseInt(data[1]) == '7' ){\n                data = data.slice(2);\n                data = '8' + data;\n            }\n\n            data = data.split(' ').join('');\n            data = data.split('(').join('');\n            data = data.split(')').join('');\n            data = data.split('-').join('');\n            data = data.split('_').join('');\n        }\n\n        this.setState({\n            [type]: data\n        })\n    }\n\n    checkLoginKey(type, event){\n        if( parseInt(event.keyCode) == 13 ){\n            if( parseInt(type) == 1 ){\n                this.logIn();\n            }\n            if( parseInt(type) == 2 ){\n                this.sendSMS();\n            }\n\n            if( parseInt(type) == 3 ){\n                this.checkCode();\n            }\n\n            if( parseInt(type) == 4 ){\n                this.sendsmsNewLogin();\n            }\n        }\n    }\n\n    async logIn(){\n        let data = {\n            number: this.state.loginLogin,\n            pwd: this.state.pwdLogin \n        };\n\n        let res = await this.getData('site_login', data);\n\n        if( res.st === false ){\n            if( res.type == 'modal' ){\n                this.setState({\n                    typeLogin: 'error',\n                    errTitle: res.title,\n                    errText1: res.text1,\n                    errText2: res.text2,\n                });\n            }else{\n                this.setState({\n                    errPhone: res.text\n                });\n            }\n        }else{\n            this.setState({ \n                errPhone: '',\n                errTitle: '',\n                errText1: '',\n                errText2: '',\n            })\n\n            itemsStore.setToken( res.token, res.name ); \n            itemsStore.setUserName(res.name);\n\n            this.close();\n        }\n    }\n\n    async createProfileFetch(number, token){\n        let data = {\n            number: number,\n            token: token \n        };\n\n        this.setState({ \n            fromType: this.state.typeLogin,\n            typeLogin: 'loginSMSCode'\n        })\n\n        let timerId = setInterval(() => {\n            this.setState({\n                timerSMS: this.state.timerSMS-1,\n                timerSMSTime: this.toTime(this.state.timerSMS-1)\n            })\n            if( this.state.timerSMS == 0 ){\n                clearInterval(timerId);\n            }\n        }, 1000);\n\n        let res = await this.getData('create_profile', data);\n\n        if( res['st'] === true ){\n            this.setState({ \n                errPhone: '',\n                errTitle: '',\n                errText1: '',\n                errText2: '',\n            })\n        }else{\n            if( res.type == 'modal' ){\n                this.setState({\n                    typeLogin: 'error',\n                    errTitle: res.title,\n                    errText1: res.text1,\n                    errText2: res.text2,\n                });\n            }else{\n                this.setState({\n                    errPhone: res.text\n                });\n            }\n        }\n        \n        setTimeout( () => {\n            this.sms1 = false;\n        }, 300 )\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            let number = this.state.loginLogin;\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    this.createProfileFetch(number, token);\n                });\n            });\n        }\n    }\n\n    toTime(seconds) {\n        let date = new Date(null);\n        date.setSeconds(seconds);\n        return date.toISOString().substr(14, 5);\n    }\n\n    changeCode(data){\n        this.setState({\n            checkCode: data\n        })\n\n        if( data.length == 4 ){\n            setTimeout( () => {\n                this.checkCode();\n            }, 300 )\n        }\n    }\n\n    async checkCode(){\n        let data = {\n            number: this.state.loginLogin,\n            cod: this.state.checkCode \n        };\n\n        let res = await this.getData('check_profile', data);\n\n        if( res.st === false ){\n            if( res.type == 'modal' ){\n                this.setState({\n                    typeLogin: 'error',\n                    errTitle: res.title,\n                    errText1: res.text1,\n                    errText2: res.text2,\n                });\n            }else{\n                this.setState({\n                    errPhone: res.text\n                });\n            }\n        }else{\n            this.setState({ \n                errPhone: '',\n                errTitle: '',\n                errText1: '',\n                errText2: '',\n            })\n\n            itemsStore.setToken( res.token, res.name ); \n            itemsStore.setUserName(res.name);\n\n            if( this.state.fromType == 'create' ){\n                this.setState({ \n                    fromType: this.state.typeLogin,\n                    typeLogin: 'finish'\n                })\n            }else{\n                this.close();\n            }\n        }\n    }\n\n    gen_password(){\n        var password = \"\";\n        var symbols = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+?\";\n        for (var i = 0; i < 10; i++){\n            password += symbols.charAt(Math.floor(Math.random() * symbols.length));     \n        }\n        \n        this.setState({\n            genPwd: password\n        })\n    }\n\n    async sendsmsNewLoginFetch(token){\n        let data = {\n            number: this.state.loginLogin,\n            pwd: this.state.newPassword,\n            token: token \n        };\n\n        this.setState({ \n            fromType: this.state.typeLogin,\n            typeLogin: 'loginSMSCode'\n        })\n\n        let timerId = setInterval(() => {\n            this.setState({\n                timerSMS: this.state.timerSMS-1,\n                timerSMSTime: this.toTime(this.state.timerSMS-1)\n            })\n            if( this.state.timerSMS == 0 ){\n                clearInterval(timerId);\n            }\n        }, 1000);\n\n        let json = await this.getData('sendsmsrp', data);\n\n        if( json['st'] ){\n            this.setState({ \n                errPhone: '',\n                errTitle: '',\n                errText1: '',\n                errText2: '',\n            })\n        }else{\n            if( res.type == 'modal' ){\n                this.setState({\n                    typeLogin: 'error',\n                    errTitle: res.title,\n                    errText1: res.text1,\n                    errText2: res.text2,\n                });\n            }else{\n                this.setState({\n                    errPhone: res.text\n                });\n            }\n        }\n        \n        setTimeout( () => {\n            this.sms1 = false;\n            this.setState({\n                is_load_new: false\n            })\n        }, 300 )\n    }\n\n    sendsmsNewLogin(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    this.sendsmsNewLoginFetch(token);\n                });\n            });\n        }\n    }\n\n    render(){\n        return (\n            <Modal\n                open={this.props.isOpen}\n                onClose={this.props.close}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                className=\"class123\"\n                \n            >\n                <Fade in={this.props.isOpen}>\n                    \n\n                    { this.state.typeLogin != 'start' ? null :\n                        <Box className='modalLoginStart'>\n\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/account-icon-240x240.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Мой аккаунт</Typography>\n                            </div>\n                            \n                            <MyTextInput type={\"phone\"} placeholder=\"Телефон\" value={ this.state.loginLogin } func={ this.changeData.bind(this, 'loginLogin') } onKeyDown={this.checkLoginKey.bind(this, 1)} className=\"inputLogin\" />\n\n                            <div className='loginErr'>\n                                <Typography component=\"span\">{this.state.errPhone}</Typography>\n                            </div>\n\n                            <MyTextInput type={\"password\"} placeholder=\"Пароль\" value={ this.state.pwdLogin } func={ this.changeData.bind(this, 'pwdLogin') } onKeyDown={this.checkLoginKey.bind(this, 1)} className=\"inputLogin\" />\n\n                            <div className='loginLosePWD'>\n                                <Typography component=\"span\" onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'resetPWD' }) } }>Забыли пароль ?</Typography>\n                            </div>\n\n                            <div className='loginLogin' onClick={this.logIn.bind(this)}>\n                                <Typography component=\"span\">Войти</Typography>\n                            </div>\n\n                            <div className='loginCreate' onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'create' }); this.gen_password(); } }>\n                                <Typography component=\"span\">Создать новый аккаунт</Typography>\n                            </div>\n\n                            <div className='loginSMS'>\n                                <Typography component=\"span\" onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'loginSMS' }) } }>Войти по смс</Typography>\n                            </div>\n                            \n                        </Box>\n                    }\n                    { this.state.typeLogin != 'loginSMS' ? null :\n                        <Box className='modalLoginCreate'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/account-icon-240x240.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Вход по СМС</Typography>\n                            </div>\n                            \n                            <MyTextInput type={\"phone\"} placeholder=\"Телефон\" value={ this.state.loginLogin } func={ this.changeData.bind(this, 'loginLogin') } onKeyDown={this.checkLoginKey.bind(this, 2)} className=\"inputLogin\" style={{ marginBottom: 0 }} />\n                            \n                            <div className='loginErr'>\n                                <Typography component=\"span\">{this.state.errPhone}</Typography>\n                            </div>\n\n                            <div className='loginLogin' onClick={this.sendSMS.bind(this)}>\n                                <Typography component=\"span\">Получить код</Typography>\n                            </div>\n                            \n                            <div className='loginCreate' onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'start' }) } }>\n                                <Typography component=\"span\">У меня есть аккаунт</Typography>\n                            </div>\n                        </Box>\n                    }\n                    { this.state.typeLogin != 'loginSMSCode' ? null :\n                        <Box className='modalLoginSMSCode'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/tripple_dop.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Проверим телефон ?</Typography>\n                            </div>\n\n                            <div className='loginSubHeader' style={{ display: 'none' }}>\n                                <Typography component=\"span\">Сейчас мы вам позвоним.</Typography>\n                                <Typography component=\"span\">Введите последние 4 цифры номера.</Typography>\n                            </div>\n\n                            <div className='loginSubHeader'>\n                                <Typography component=\"span\">Введите 4 цифры из смс.</Typography>\n                            </div>\n                            \n                            <div className={this.state.timerSMS > 0 ? 'loginAutCode' : 'loginAutCodeOther'}>\n                                <AuthCode autoFocus={true} allowedCharacters='numeric' length=\"4\" onChange={ this.changeCode.bind(this) } />\n                            </div>\n\n                            <div className='loginErr'>\n                                <Typography component=\"span\">{this.state.errPhone}</Typography>\n                            </div>\n\n                            { this.state.timerSMS > 0 ?\n                                <div className='loginTimer'>\n                                    <Typography component=\"span\">Повторно отправить можно через {this.state.timerSMSTime}</Typography>\n                                </div>\n                                    :\n                                <div className='loginTimerSend' onClick={this.sendSMS.bind(this)}>\n                                    <Typography component=\"span\">Отправить код еще раз</Typography>\n                                </div>\n                            }\n                            \n                            <div className={'loginSend ' + (this.state.checkCode.length == 4 ? '' : 'disabled') } onClick={this.checkCode.bind(this)}>\n                                <Typography component=\"span\">Отправить</Typography>\n                            </div>\n                            \n                            <div className='loginPrev'>\n                                <Typography component=\"span\" onClick={ () => { this.setState({ typeLogin: this.state.fromType }) } }>Изменить номер телефона</Typography>\n                            </div>\n                        </Box>\n                    }\n                    { this.state.typeLogin != 'resetPWD' ? null :\n                        <Box className='modalLoginReset'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/account-icon-240x240.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Восстановление пароля</Typography>\n                            </div>\n                            \n                            <MyTextInput type={\"phone\"} placeholder=\"Телефон\" value={ this.state.loginLogin } func={ this.changeData.bind(this, 'loginLogin') } onKeyDown={this.checkLoginKey.bind(this, 4)} className=\"inputLogin\" />\n                            \n                            <div className='loginErr'>\n                                <Typography component=\"span\">{this.state.errPhone}</Typography>\n                            </div>\n\n                            <MyTextInput type={\"password\"} placeholder=\"Придумай пароль\" value={ this.state.newPassword } func={ this.changeData.bind(this, 'newPassword') } onKeyDown={this.checkLoginKey.bind(this, 4)} className=\"inputLogin\" />\n\n                            <div className='loginLogin' onClick={this.logIn.bind(this)}>\n                                <Typography component=\"span\">Создать аккаунт</Typography>\n                            </div>\n                            \n                            <div className='loginCreate' onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'start' }) } }>\n                                <Typography component=\"span\">У меня есть аккаунт</Typography>\n                            </div>\n                        </Box>\n                    }\n                    { this.state.typeLogin != 'create' ? null :\n                        <Box className='modalLoginCreateNew'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/account-icon-240x240_white.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Новый аккаунт</Typography>\n                            </div>\n                            \n                            <MyTextInput type={\"phone\"} placeholder=\"Телефон\" value={ this.state.loginLogin } func={ this.changeData.bind(this, 'loginLogin') } onKeyDown={this.checkLoginKey.bind(this, 4)} className=\"inputLogin\" />\n\n                            <div className='loginErr'>\n                                <Typography component=\"span\">{this.state.errPhone}</Typography>\n                            </div>\n\n                            <MyTextInput type={\"password\"} placeholder=\"Придумайте пароль\" value={ this.state.newPassword } func={ this.changeData.bind(this, 'newPassword') } onKeyDown={this.checkLoginKey.bind(this, 4)} className=\"inputLogin\" />\n\n                            <div className='loginSubHeader'>\n                                <Typography component=\"span\">Надежный пароль - строчные и заглавные буквы, цифры и символы.</Typography>\n                                <Typography component=\"span\">Например: {this.state.genPwd}</Typography>\n                            </div>\n\n                            <div className='loginErrText'>\n                                <Typography component=\"span\"></Typography>\n                            </div>\n\n                            <div className='loginLogin' onClick={this.sendsmsNewLogin.bind(this)}>\n                                <Typography component=\"span\">Создать аккаунт</Typography>\n                            </div>\n                            \n                            <div className='loginCreate' onClick={ () => { this.setState({ fromType: this.state.typeLogin, typeLogin: 'start' }) } }>\n                                <Typography component=\"span\">У меня есть аккаунт</Typography>\n                            </div>\n                        </Box>\n                    }\n                    { this.state.typeLogin != 'finish' ? null :\n                        <Box className='modalLoginFinish'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='loginIMG'>\n                                <img \n                                    alt={'Login'} \n                                    title={'Login'} \n                                    src={`/assets/img_other/like.png`} />\n                            </div>\n\n                            <div className='loginHeader'>\n                                <Typography component=\"h2\">Добро пожаловать</Typography>\n                            </div>\n                            \n                            <div className='loginSubHeader1'>\n                                <Typography component=\"span\">Теперь вы можете легко оформить онлайн-заказ с доставкой или забрать его самостоятельно из любого нашего кафе.</Typography>\n                            </div>\n\n                            <div className='loginSubHeader2'>\n                                <Typography component=\"span\"><Link to={'/samara/profile'} exact={ true } onClick={ this.close.bind(this) }>Укажите в профиле</Link> день рождения и мы заренее пришлём вам промокод на приятный подарок.</Typography>\n                            </div>\n\n                            <Link to={'/samara/'} exact={ true } className='loginLogin' onClick={ this.close.bind(this) }>\n                                <Typography component=\"span\">Перейти в меню</Typography>\n                            </Link>\n                            \n                            <Link to={'/samara/cart'} exact={ true } className='loginCreate' onClick={ this.close.bind(this) }>\n                                <Typography component=\"span\">Открыть корзину</Typography>\n                            </Link>\n                        </Box>\n                    }\n                    { this.state.typeLogin != 'error' ? null :\n                        <Box className='modalLoginError'>\n                            <IconButton style={{ position: 'absolute', top: -40, left: 15, backgroundColor: 'transparent' }} onClick={this.close.bind(this)}>\n                                <IconClose style={{ width: 25, height: 25, fill: '#fff', color: '#fff', overflow: 'visible' }} />\n                            </IconButton>\n\n                            <div className='InnerBorder'>\n                                <div className='loginHeader'>\n                                    <Typography component=\"h2\">{this.state.errTitle}</Typography>\n                                </div>\n                                \n                                <div className='loginSubHeader1'>\n                                    <Typography component=\"span\">{this.state.errText1}</Typography>\n                                </div>\n\n                                <div className='loginSubHeader2'>\n                                    <Typography component=\"span\">{this.state.errText2}</Typography>\n                                </div>\n                            </div>\n                        </Box>\n                    }\n                </Fade>\n            </Modal>\n        )\n    }\n}\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            originPrice: 0,\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 1000)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        let allPrice = itemsStore.getSumDiv();\n\n        newCart.map( (item) => {\n            allPrice += parseInt(item.one_price) * parseInt(item.count);\n        } )\n\n        newCart.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            newCart[ key ]['is_sale'] = parseInt(item.all_price) != parseInt(item.count) * parseInt(item.one_price);\n\n            newCart[ key ]['img_new'] = this_item['img_new'];\n            newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n            newCart[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: newCart,\n            originPrice: allPrice,\n        })\n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                let promo_st = itemsStore.getPromoStatus();\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n\n                    promoText: promo_st.text,\n                    promoST: promo_st.st,\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['is_sale'] = parseInt(item.all_price) != parseInt(item.count) * parseInt(item.one_price);\n\n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                let allPrice = itemsStore.getSumDiv();\n\n                newCart.map( (item) => {\n                    allPrice += parseInt(item.one_price) * parseInt(item.count);\n                } )\n\n                this.setState({\n                    originPrice: allPrice,\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        itemsStore.getInfoPromo(this.state.promoName);\n\n        /*fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })*/\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    //anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcSet={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            \n                                            { item.is_sale === true && this.state.promoST === true ?\n                                                <td className=\"CellPrice2\"> \n                                                    <div className=\"TableMiniPrice\">\n                                                        <div>\n                                                            { new Intl.NumberFormat('ru-RU').format( parseInt(item.one_price) * parseInt(item.count) ) } \n                                                            <IconRuble style={{ width: 13, height: 13, fill: 'rgba(27, 27, 31, 0.2)', marginLeft: 5 }} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"TableMiniPrice\">\n                                                        { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                        <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                    </div>\n                                                </td>\n                                                    :\n                                                <td className=\"CellPrice\"> \n                                                    <div className=\"TableMiniPrice\">\n                                                        { new Intl.NumberFormat('ru-RU').format( parseInt(item.one_price) * parseInt(item.count) ) } \n                                                        <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                    </div>\n                                                </td>\n                                            }\n                                            \n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcSet={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButtonPrize\" colSpan=\"2\">\n                                                <MiniActionsCartButtonPrize count={item.count} price={item.all_price} />\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        { this.state.originPrice != this.state.allPrice && this.state.promoST === true ?\n                                            <div className='originPrice'>\n                                                <span>\n                                                    { new Intl.NumberFormat('ru-RU').format(this.state.originPrice) } \n                                                    <IconRuble style={{ width: 14, height: 14, fill: 'rgba(27,27,31,0.2)', marginLeft: 5 }} />\n                                                </span>\n                                            </div>\n                                                :\n                                            <div>\n                                                { new Intl.NumberFormat('ru-RU').format(this.state.originPrice) } \n                                                <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                            </div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n\n                            { this.state.originPrice != this.state.allPrice && this.state.promoST === true ?\n                                <div className=\"DescPromoPrice\">\n                                    { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                </div>\n                                    :\n                                null\n                            }\n\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            \n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n            }\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLoginNew: false,\n        })\n    }\n    \n    handleClick = (event) => {\n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n\n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <ModalLogin isOpen={this.state.openLoginNew} close={this.closeLogin.bind(this)} />\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nexport class HeaderOld extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n                \n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect, matchPath } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nconst routes = require( '../../../server/routes' );\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\" component=\"h1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n\n            globalState: null\n        };\n    }\n\n    async getData1(uri){\n\n        let data = {\n            city_id: get_city(uri),\n            page: '',\n            link: uri,\n        };\n\n        let res = await this.getData('get_page_info', data);\n\n        let res_data = {\n            title: res.page.title,\n            description: res.page.description,\n            page: res.page,\n            cats: res.cats,\n            allItems: res.allItems,\n            all: res\n        };\n\n        let GLOBAL_STATE = {\n            data: res_data,\n            city: get_city(uri),\n            this_link: uri,\n            linkItem: '',\n            Item: null\n        }\n\n        this.setState({\n            globalState: GLOBAL_STATE\n        })\n    }\n\n    getData = (method, data = {}, is_load = true) => {\n        if( is_load == true ){\n            this.setState({\n                is_load: true\n            })\n        }\n        \n        data.type = method;\n\n        return fetch(config.urlApi, {\n          method: 'POST',\n          headers: {\n            'Content-Type':'application/x-www-form-urlencoded'},\n          body: queryString.stringify( data )\n        }).then(res => res.json()).then(json => {\n          return json;\n        })\n        .catch(err => { \n          setTimeout( () => {\n            this.setState({\n              is_load: false\n            })\n          }, 300 )\n          console.log( err )\n        });\n    }  \n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n\n        if( !this.props.globalState ){\n\n            let uri = window.location.pathname;\n\n            let city = uri.split('/');\n            city = city.filter( (item) => item != '' ); \n            city = city[0];\n\n            const matchRoute = routes.find( route => matchPath( uri, route ) );\n\n            if( matchRoute ){\n                this.getData1(uri);\n            }\n        }\n\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName ||\n            this.state.globalState !== nextState.globalState\n        );\n    }\n    \n    render() {\n\n        if( !this.props.globalState ){\n            if( this.state.globalState ){\n                return (\n                    <Provider { ...stores }>\n                        <div className=\"home\">\n                            <Switch>\n                                <Route\n                                    path='/:cityName/contacts'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />   \n                                    <Contact data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/akcii/:act_id'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Actii data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/akcii'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Actii data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/menu'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Home data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Home data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/item/:id'\n                                    exact={ true }\n                                >\n                                    <HeaderCat \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <div style={{ paddingTop: 80 }}>\n                                        <Item \n                                            data={this.state.globalState.data} \n                                            city={this.state.globalState.city} \n                                            this_link={this.state.globalState.this_link} \n                                            linkItem={this.state.globalState.linkItem} \n                                            item={this.state.globalState.Item}  \n                                        />\n                                    </div>\n                                </Route>\n                                <Route\n                                    path='/:cityName/menu/:catLink/:itemId'\n                                    exact={ true }\n                                >\n                                    <HeaderCat \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <div style={{ paddingTop: 80 }}>\n                                        <Item \n                                            data={this.state.globalState.data} \n                                            city={this.state.globalState.city} \n                                            this_link={this.state.globalState.this_link} \n                                            linkItem={this.state.globalState.linkItem} \n                                            item={this.state.globalState.Item}  \n                                        />\n                                    </div>\n                                </Route>\n                                <Route \n                                    exact \n                                    path='/:cityName/profile/'\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Profile data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/menu/:itemLink'\n                                    exact={ true }\n                                >\n                                    <HeaderCat \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <HomeCat data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/cart'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <Cart data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/about'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <PageAbout data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/jobs'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <PageJob data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/instpayorders'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <PageInstPay data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/publichnaya-oferta'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <PageOferta data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/:cityName/politika-konfidencialnosti'\n                                    exact={ true }\n                                >\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <PagePolitika data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                <Route\n                                    path='/'\n                                    exact={ true }\n                                >\n                                    <Redirect push\n                                        to={\"/togliatti\"}\n                                    />\n                                </Route>\n                                <Route\n                                    path='/profile'\n                                    exact={ true }\n                                >\n                                    <Redirect push\n                                        to={\"/togliatti\"}\n                                    />\n                                </Route>\n                                \n                                <Route>\n                                    <Header \n                                        data={this.state.globalState.data} \n                                        city={this.state.globalState.city} \n                                        this_link={this.state.globalState.this_link} />  \n                                    <NotFound data={this.state.globalState.data} city={this.state.globalState.city} this_link={this.state.globalState.this_link}  />\n                                </Route>\n                                \n                            </Switch>\n                            \n                            {this.state.activePage == 'cart' ?\n                                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                    <Box sx={{ display: { xs: 'none' } }}>\n                                        <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                        \n                                    </Box>\n                                    <Box sx={{ display: { sm: 'none' } }}>\n                                        <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                        <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                    </Box>\n                                </Box>\n                                    :\n                                null\n                            }\n\n                            {this.state.activePage == 'cart' ? null :\n                                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                </Box> \n                            }\n\n                            <StickyFooter cityName={ this.state.globalState.city } />\n                        </div>\n                    </Provider>\n                )\n            }\n\n            return <h1>LOAD ....</h1>;\n        }\n\n        if( this.props.globalState ){\n            return (\n                <Provider { ...stores }>\n                    <div className=\"home\">\n                        <Switch>\n                            <Route\n                                path='/:cityName/contacts'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />   \n                                <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/akcii/:act_id'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/akcii'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/menu'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/item/:id'\n                                exact={ true }\n                            >\n                                <HeaderCat \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <div style={{ paddingTop: 80 }}>\n                                    <Item \n                                        data={this.props.globalState.data} \n                                        city={this.props.globalState.city} \n                                        this_link={this.props.globalState.this_link} \n                                        linkItem={this.props.globalState.linkItem} \n                                        item={this.props.globalState.Item}  \n                                    />\n                                </div>\n                            </Route>\n                            <Route\n                                path='/:cityName/menu/:catLink/:itemId'\n                                exact={ true }\n                            >\n                                <HeaderCat \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <div style={{ paddingTop: 80 }}>\n                                    <Item \n                                        data={this.props.globalState.data} \n                                        city={this.props.globalState.city} \n                                        this_link={this.props.globalState.this_link} \n                                        linkItem={this.props.globalState.linkItem} \n                                        item={this.props.globalState.Item}  \n                                    />\n                                </div>\n                            </Route>\n                            <Route \n                                exact \n                                path='/:cityName/profile/'\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/menu/:itemLink'\n                                exact={ true }\n                            >\n                                <HeaderCat \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/cart'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/about'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/jobs'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/instpayorders'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/publichnaya-oferta'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/:cityName/politika-konfidencialnosti'\n                                exact={ true }\n                            >\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            <Route\n                                path='/'\n                                exact={ true }\n                            >\n                                <Redirect push\n                                    to={\"/togliatti\"}\n                                />\n                            </Route>\n                            <Route\n                                path='/profile'\n                                exact={ true }\n                            >\n                                <Redirect push\n                                    to={\"/togliatti\"}\n                                />\n                            </Route>\n                            \n                            <Route>\n                                <Header \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} />  \n                                <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                            </Route>\n                            \n                        </Switch>\n                        \n                        {this.state.activePage == 'cart' ?\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                <Box sx={{ display: { xs: 'none' } }}>\n                                    <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                    \n                                </Box>\n                                <Box sx={{ display: { sm: 'none' } }}>\n                                    <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                    <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                </Box>\n                            </Box>\n                                :\n                            null\n                        }\n\n                        {this.state.activePage == 'cart' ? null :\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box> \n                        }\n\n                        <StickyFooter cityName={ this.props.globalState.city } />\n                    </div>\n                </Provider>\n            );\n        }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nimport TextField from '@mui/material/TextField';\nimport { height } from '@mui/system';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport function IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='ActionsCartButtonStart'>\n                <Button variant=\"outlined\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class MiniActionsCartButtonPrize extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButtonPrize'>\n                <div variant=\"contained\">\n                    { parseInt(this.props.count) == 1 ? \n                        <span>В подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span> \n                            : \n                        <span>{this.props.count} шт. в подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span>\n                    }\n                    <IconRuble style={{ width: 12, height: 12, fill: '#525252', marginLeft: 5 }} />\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class MyTextInput extends React.PureComponent {\n    constructor(props) {\n      super(props);\n          \n      this.state = {\n        type: 'text'\n      };\n    }\n    \n    render(){\n      return (\n        <TextField \n          label={this.props.label}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={this.props.func}\n          onBlur={this.props.onBlur ? this.props.onBlur : null}\n          onKeyDown={this.props.onKeyDown ? this.props.onKeyDown : null}\n          disabled={ this.props.disabled || this.props.disabled === true ? true : false }\n          variant=\"outlined\" \n          size={'small'} \n          color='primary'\n          multiline={this.props.multiline ? this.props.multiline : false}\n          maxRows={this.props.maxRows ? this.props.maxRows : 1}\n          type={ this.props.type ? this.props.type : this.state.type }\n          style={ this.props.style ? this.props.style : {} } \n          className={ this.props.className ? this.props.className : '' }\n        />\n      )\n    }\n  }","import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n\n  promoText = '';\n  promoST = null;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getPromoStatus(){\n    return {\n      text: this.promoText,\n      st: this.promoST,\n    };\n  }\n\n  setPromoStatus(promoText, promoST){\n    this.promoText = promoText;\n    this.promoST = promoST;\n  }\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      //if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      //}\n      \n      if( promoName.length == 0 ){\n        this.setPromoStatus('', null);\n      }else{\n        if( check_promo ){\n          this.setPromoStatus(check_promo.text, check_promo.st);\n        }else{\n          this.setPromoStatus('', null);\n        }\n      }\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    //this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес указан некорректно'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          if( allPrice < promo_info.limits.summ.min ){\n            return {\n              st: false,\n              text: 'Суммы заказа не достаточно для активации промокода'\n            }\n          }\n\n          if( allPrice > promo_info.limits.summ.max ){\n            return {\n              st: false,\n              text: 'Сумма заказа больше, чем лимит промокода'\n            }\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Промокод не действует в эти даты'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            return {\n              st: false,\n              text: 'Промокод действует только на доставку'\n            }\n          }\n\n          if( parseInt( promo_info.limits.type_order ) == 2 ){\n            return {\n              st: false,\n              text: 'Промокод действует только на самовывоз'\n            }\n          }\n\n          if( parseInt( promo_info.limits.type_order ) == 3 ){\n            return {\n              st: false,\n              text: 'Промокод действует только в кафе'\n            }\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Промокод действует только в кафе'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }else{\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      \n\n      \n\n      \n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["Home","require","HomeCat","Item","Contact","Actii","Profile","Cart","PageAbout","PageJob","PageInstPay","PageOferta","PagePolitika","module","exports","path","exact","component","type","code","queryString","props","document","querySelector","classList","remove","window","scrollTo","itemsStore","fetchData","state","city_name","then","data","setState","title","page","description","fetch","config","method","headers","body","stringify","city_id","res","json","actii","is_load","setTimeout","hash","location","search","length","indexOf","act_id","split","this_item","find","item","id","openDialog","err","pre_actii","showItem","city","openMSG","statusMSG","textMSG","url","pathname","history","pushState","this","allItems","items","map","act_item","key","item_id","promo_info","promo_name","JSON","Grid","container","className","Helmet","name","content","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","closeAlert","bind","message","style","backgroundColor","borderRadius","xs","Typography","variant","spacing","md","sm","xl","padding","width","height","srcSet","img_new","img_new_update","src","alt","promo_title","onClick","Dialog","closeDialog","DialogTitle","disableTypography","margin","IconButton","position","top","right","icon","faTimes","fontSize","color","DialogContent","dangerouslySetInnerHTML","__html","text","promo","DialogActions","justifyContent","ButtonGroup","disableElevation","disableRipple","activePromo","info","Button","propsData","filter","axios","response","cats","all","error","console","log","React","firebaseAPP","get_city","Ruble","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","a11yProps","propTypes","PropTypes","CartItem","firebaseAnalitic","count","onePrice","new_onePrice","allPrice","_isMounted","cartItems","one_price","all_price","autorun","new_cartItems","promo_cartItems","new_one_price","logEvent","content_type","content_id","nextProps","nextState","parseInt","cat_id","display","flexDirection","alignItems","img_app","sizes","img_name","loading","img","imgUpdate","faGift","desc","minus","faMinus","add","faPlus","gutterBottom","CartItemMobile","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAnalytics","loadData","cartItems_new","thisitem","item_","push","tmp_desc","main","dop","need_dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","e","hasError","event","newValue","orderType","orderAddr","free_drive","sum_div","pic_point","choosePic","orderPic","orderTimes","renderPay","pays","dev","orderPay","pic","saveData","my_addr","target","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","orderComment","loadTimePred","orderSdacha","orderPredDay","orderPredTime","blur","spiner","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","errorOpen","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","user_id","get_addr_pic","points","get_my_addr","get_addr","cartData","changeAddr","localStorage","getItem","checkPromo","pointId","getElementById","check_promo","st","street","home","kv","pd","et","dom_true","point_id","xy","pay_active","my_cart","forEach","el","type_order","date","cart","clickOrderStart","new_cart","price","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","addr","typeOrder","addrPic","comment","addrDev","pay","sdacha","startOrderInterval","times","text_err","street1","street2","saveDataCustomAddr","order_id","href","origin","confirm","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","Backdrop","zIndex","CircularProgress","sx","paddingTop","AppBar","elevation","Tabs","onChange","changeTab","Tab","label","FormControl","RadioGroup","FormControlLabel","control","Radio","delAddr","Accordion","AccordionSummary","AccordionDetails","Autocomplete","freeSolo","size","onBlur","checkNewAddr","options","option","renderInput","params","TextField","checkSaveData","changeDomTrue","raion","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","InputLabel","htmlFor","Select","displayEmpty","inputProps","MenuItem","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","marginTop","onKeyPress","enterPromoMobile","noValidate","autoComplete","OutlinedInput","paddingBottom","DialogContentText","checkDomTrue","fullWidth","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","to","textDecoration","dop_text","fontWeight","formUrl","trueOrder","ControlledAccordions","expanded","setExpanded","panel","isExpanded","expandIcon","ExpandMore","organization","inn","kpp","ogrn","full_addr","phone","points_zone","point","parse","unic_point","check","new_point","loadMap","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Element","Scroll","scroller","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","pagination","navigation","nextEl","prevEl","overflow","handleDragStart","preventDefault","CardItem","is_old_price","old_price","img_type","marc_desc","GRID","innerWidth","Card","CardContent","cursor","openItem","minHeight","is_new","is_hit","Badge","view","flex","marginBottom","border","borderRight","fontFamily","count_part_new","size_pizza","count_part","Intl","NumberFormat","format","weight","textAlign","CardActions","flexWrap","lineHeight","maxHeight","fill","marginLeft","CardItemBotNew","dataSrc","new","hit","sale","arrColor","left","textTransform","Transition","ref","Slide","direction","this_link","link","time","Date","now","arrMax","AllItemsCat","addEventListener","elem","getBoundingClientRect","scrollTop","Y","main_id","max","activeID","removeItem","offset","duration","smooth","checkItem","openItemPC","mainLink","check2","findIndex","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfo","openModalPCInfoItems","banners_pc","banners_mobile","baners","banners","aktia_id","onDragStart","removeEventListener","startMove","pageY","handleClose","page_h","cat","main_link","it","k","borderBottom","Box","fullScreen","TransitionComponent","itemId","openSetPc","openInfo","maxWidth","handleClosePC","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","alignContent","overflowY","kkal","order","protein","fat","carbohydrates","handleClosePCSet","borderLeft","borderTop","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","typography","pxToRem","get_item","itemTab","itemLink","linkItem","openTooltip","marc_desc_full","parseFloat","item_cart","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","whiteSpace","paddingRight","handleTooltipOpen","paddingLeft","bottom","disableelevation","minWidth","replace","valueTab","changeM","changeDay","userMail","checked","my_spam","spam","userName","typeDel","delOrder","arr_day","arr_m","radiogroup_options","textDel","showOrder","p1","bank","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","actionCodeDescription","my_mail","day","mo","nameM","my_date","my_name","deltype","ans","all_items","item_info","order_items","type_order_","action","Close","promo_text","date_end","getOrder","date_time_new","sum","Check","steps","time_to_client","changeName","saveName","InputProps","readOnly","login","date_bir","labelId","saveDay","changeMail","saveMail","FormGroup","row","changeCheck","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sum_order","closeOrder","repeatOrder","onFocus","closeOrderTrue","Fade","onEnter","onExited","useSpring","from","opacity","onStart","onRest","animated","in","ModalLogin","typeLogin","fromType","loginLogin","pwdLogin","newPassword","genPwd","checkCode","pwd","ResPWD","NeedCode","openLogin","userLogin","userLoginFormat","userCode","timerSMS","timerSMSTime","toTime","errPhone","errSMS","errTitle","errText1","errText2","isOpen","gen_password","close","slice","join","keyCode","logIn","sendSMS","sendsmsNewLogin","number","getData","text1","text2","token","timerId","setInterval","clearInterval","sms1","grecaptcha","execute","createProfileFetch","seconds","setSeconds","toISOString","substr","cod","password","symbols","charAt","Math","floor","random","is_load_new","sendsmsNewLoginFetch","Modal","closeAfterTransition","BackdropComponent","BackdropProps","timeout","func","changeData","onKeyDown","checkLoginKey","autoFocus","allowedCharacters","changeCode","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","ShoppingCartOutlined","faMapMarkerAlt","faUser","SimplePopover","promoName","newCart","originPrice","promo_st","promoText","promoST","anchorEl","currentTarget","Boolean","undefined","handleClick","Popover","transformOrigin","is_sale","checkPromoKey","changePromo","HeaderCat","Header","setToken","load","activePage","cityName","user_name","arr","main_cat","free_items","this_city_name_ru","categoryItemsNew","categoryItems","openCity","cityList","city_list","openLoginNew","soc_link","cityNameRu","Toolbar","ArrowDropDown","behavior","setItem","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","closeLogin","stores","routes","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","uri","route","matchPath","getData1","stage_1","stage_2","res_data","GLOBAL_STATE","ReactDOM","urlApi","IconRuble","VKIcon","OdnIcon","TGIcon","IconInfoWhite","cx","cy","r","stroke","strokeLinecap","IconInfoBlack","fillOpacity","IconClose","MiniActionsCartButton","ActionsCartButtonStart","ActionsCartButton","MiniActionsCartButtonPrize","MyTextInput","disabled","maxRows","ItemsStore","need_dops","cityNameRU","AllPrice","userToken","setUserName","itemsPromo","allItemsCat","allItemsCatNew","tmp","cart_new_promo","getItemsPromo","reduce","setAllPrice","cart_data","checkCart","setItems","getInfoPromo","makeAutoObservable","getCity","setPromo","setPromoStatus","orderInfo","getCartData","setItemsPromo","by_time","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","point_id_dev","point_id_pic","this_date","this_time","this_dow","moment","status_promo","limits","min","summ","dows","only_kassa","need_item","count_sale","promo_action","cat_sale","sale_action","el_promo","type_price","items_add","items_on_price","test","originalItem","cart_info","count_","max_count","check_max_count","some","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","check_free","Set","new_free_dop","unic_item","item_free","count_in_cart","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}