{"version":3,"sources":["webpack://react-ssr/./src/components/home/home.component.jsx"],"names":["Element","Scroll","scroller","queryString","require","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","props","state","data","type","this","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","el","clickable","renderBullet","index","className","nextEl","prevEl","slidePrev","slideNext","map","item","key","onClick","prev","bind","next","React","Ruble","width","height","viewBox","xmlns","d","handleDragStart","e","preventDefault","CardItem","count","_isMounted","itemsStore","find","item_id","setState","autorun","nextProps","nextState","price","Card","elevation","CardContent","style","cursor","position","openItem","id","srcSet","img_new","img_new_update","src","alt","name","title","minHeight","parseInt","is_new","top","right","padding","paddingBottom","paddingTop","Typography","gutterBottom","variant","component","info_weight","tmp_desc","CardActions","display","flexDirection","justifyContent","marginLeft","ButtonGroup","disableElevation","disableRipple","Button","add","ShoppingCartOutlined","color","minus","icon","faMinus","fontSize","faPlus","Grid","container","xs","sm","md","xl","CardItemBot","city","href","link","Transition","ref","Slide","direction","Home","time","Date","now","arrMax","setTimeout","window","addEventListener","elem","document","getElementById","getBoundingClientRect","body","scrollTop","push","Y","main_id","length","max","reduce","acc","curr","b","querySelector","classList","remove","is_load","city_name","localStorage","getItem","hash","removeItem","scrollTo","duration","smooth","offset","checkItem","location","pathname","split","console","log","allItems","act_id","innerWidth","openItemPC","replace","history","fetchData","then","page","description","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","all","other","cats","baners","banners","aktia_id","to","exact","borderRadius","onDragStart","removeEventListener","touchStart","touchEnd","startMove","pageY","handleClose","this_link","mainLink","check","findIndex","CSSTransition","transitionName","transitionEnterTimeout","transitionLeaveTimeout","cat","main_link","spacing","margin","flexWrap","items","it","k","Hidden","smUp","Backdrop","zIndex","open","CircularProgress","Helmet","content","xsDown","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","IconButton","aria-label","faTimes","Item","itemId","maxWidth","fullWidth","handleClosePC","propsData","path","city_id","axios","method","url","headers","stringify","response","json","error"],"mappings":"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","file":"170.bf3677887e031651b907.js","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n//import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        \n                        </div>\n                \n                        \n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={5} sm={5} md={5} xl={5} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={7} sm={7} md={7} xl={7} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class Home extends React.Component {\n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: null,\n            title: '',\n            description: ''\n        };\n        \n        this.loadBanners( this.props.data.all.other.cats.baners );\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData\n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                console.log( 'fetchData', json )\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if ((time + 500 - Date.now()) < 0) {\n                    itemsStore.getAllItemsCat().map( (item, key) => {\n                        var elem = document.getElementById('cat'+item.id);\n                        if( elem ){\n                            var top = elem.getBoundingClientRect().top + document.body.scrollTop - 60;\n                            \n                            if(top < 0){\n                                arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                            }\n                        }\n                    })\n                    \n                    if( arrMax.length > 0 ){\n                        let max = arrMax.reduce((acc, curr) => acc.b > curr.b ? acc : curr);\n                        \n                        arrMax = [];\n                        \n                        if( max.length > 0 ){\n                            if( document.querySelector('.activeCat') ){\n                                document.querySelector('.activeCat').classList.remove('activeCat');\n                            }\n                            if( document.querySelector('#link_'+max[0].main_id) ){\n                                document.querySelector('#link_'+max[0].main_id).classList.add('activeCat');\n                            }\n                        }\n                    }\n                    \n                    time = Date.now();\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - 50\n                        });\n                    }, 300)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let hash = window.location.pathname;\n                \n                let checkItem = hash.split('/item/');\n                \n                console.log( 'checkItem', checkItem )\n                \n                if( checkItem.length > 1 ){\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    let item = allItems.find( (item) => item.link == act_id );\n                    \n                    console.log( 'checkItem allItems', allItems )\n                    console.log( 'checkItem act_id', act_id )\n                    console.log( 'checkItem item', item )\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(item.id);\n                    }else{\n                        this.openItemPC(item.id);\n                    }\n                    \n                    let str = window.location.pathname;\n                    str.replace(\"/item/\"+act_id, '');\n                    \n                    this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                /*return ;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('?item_')[1];\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }*/\n            }, 1300);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                page: data.page,\n                title: data.title,\n                description: data.description,\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n            \n            this.loadBanners(itemsStore.getBanners());\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        \n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        console.log( 'itemsStore.getAllItemsCat()', itemsStore.getAllItemsCat() );\n        console.log( 'mainLink', mainLink );\n        \n        return (\n            <CSSTransition component=\"div\" transitionName=\"example\" transitionEnterTimeout={500} transitionLeaveTimeout={300} >\n                {this.state.is_load === false ?\n                    <Element name=\"myScrollToElement\" className=\"Category\">\n                        \n                        \n                        {itemsStore.getAllItemsCat().map((cat, key) => \n                            mainLink == '' || mainLink == cat.main_link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                            \n                        )}\n                        \n                        <Hidden smUp>\n                            <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </Hidden>\n                    </Element>\n                        :\n                    <Element name=\"myScrollToElement\" className=\"Category\">\n                \n                        <Helmet>\n                            <title>{this.state.title}</title>\n                            <meta name=\"description\" content={this.state.description} />\n                        </Helmet>\n                        \n                        <Hidden xsDown>\n                            { this.state.banners_pc.length == 0 ? null :\n                                <CoverFlowCarousel\n                                    type=\"pc\"\n                                    data={this.state.banners_pc}\n                                />\n                            }\n                        </Hidden>\n                        <Hidden smUp>\n                            { this.state.banners_mobile.length == 0 ? null :\n                                <CoverFlowCarousel\n                                    type=\"mobile\"\n                                    data={this.state.banners_mobile}\n                                />\n                            }\n                        </Hidden>\n                        \n                        {itemsStore.getAllItemsCat().map((cat, key) => \n                            mainLink == '' || mainLink == cat.main_link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h3\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <Hidden xsDown>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Hidden>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                            \n                        )}\n                        \n                        {this.state.openItem ?\n                            <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                                <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                        <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                    </IconButton>\n                                </MuiDialogTitle>\n                                <div>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                                </div>\n                            </Dialog>\n                                :\n                            null\n                        }\n                        \n                        {this.state.openItem ?\n                            <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                                <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                        <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                    </IconButton>\n                                </MuiDialogTitle>\n                                \n                                <MuiDialogContent className=\"modalActiiContent\">\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                                </MuiDialogContent>\n                            </Dialog>\n                                :\n                            null\n                        }\n                        \n                    </Element>\n                }\n            </CSSTransition>\n        )\n        \n        \n    }\n}"],"sourceRoot":""}