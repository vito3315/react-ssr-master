{"version":3,"sources":["webpack://react-ssr/./src/components/item/item.component.jsx"],"names":["queryString","require","Ruble","props","width","height","viewBox","xmlns","id","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","console","log","item","state","is_load","count","city_name","match","params","cityName","itemLink","title","description","itemsStore","this","_isMounted","autorun","find","link","items","length","parseInt","type","push","kkal","protein","fat","carbohydrates","name","item_cart","filter","item_id","fetchData","then","data","page","document","querySelector","classList","remove","window","scrollTo","Helmet","content","Hidden","xsDown","Grid","container","className","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","component","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","allergens","marginTop","marginBottom","maxHeight","overflow","map","key","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","price","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","smUp","textAlign","margin","flexWrap","wordWrap","spacing","propsData","city_id","axios","method","url","headers","stringify","response","json","cats","allItems","error","React"],"mappings":"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","file":"660.86e6105c50c2630d5a68.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props.item )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? props.match.params.cityName : '',\n            itemLink: !this.props.item ? props.match.params.itemLink : '',\n            title: '',\n            description: '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(props.match.params.cityName);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Hidden xsDown>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                        Аллергены\n                                    </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                Аллергены\n                            </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}