(self.webpackChunkreact_ssr=self.webpackChunkreact_ssr||[]).push([[179],{6021:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(3935);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(3727);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(6610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(5991);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(3349);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\nvar inherits = __webpack_require__(379);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(6070);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(7608);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(5977);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(2122);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Grid/Grid.js\nvar Grid = __webpack_require__(1749);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Card/Card.js\nvar Card = __webpack_require__(8463);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/CardActions/CardActions.js\nvar CardActions = __webpack_require__(1907);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/CardContent/CardContent.js\nvar CardContent = __webpack_require__(9912);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Button/Button.js\nvar Button = __webpack_require__(282);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js\nvar ButtonGroup = __webpack_require__(4837);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Typography/Typography.js\nvar Typography_Typography = __webpack_require__(2318);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/react-fontawesome/index.es.js + 1 modules\nvar index_es = __webpack_require__(7625);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\nvar free_solid_svg_icons_index_es = __webpack_require__(1436);\n// EXTERNAL MODULE: ./node_modules/react-scroll/modules/index.js\nvar modules = __webpack_require__(6261);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n// EXTERNAL MODULE: ./node_modules/react-helmet/es/Helmet.js\nvar Helmet = __webpack_require__(4593);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js\nvar Backdrop = __webpack_require__(2692);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js\nvar CircularProgress = __webpack_require__(5477);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js\nvar DialogTitle = __webpack_require__(6083);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/DialogContent/DialogContent.js\nvar DialogContent = __webpack_require__(9525);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/IconButton/IconButton.js\nvar IconButton_IconButton = __webpack_require__(7812);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/ShoppingCartOutlined.js\nvar ShoppingCartOutlined = __webpack_require__(1276);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__(2921);\n// EXTERNAL MODULE: ./node_modules/mobx/dist/mobx.esm.js\nvar mobx_esm = __webpack_require__(8949);\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(381);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n;// CONCATENATED MODULE: ./src/stores/items-store.js\n\n\n\n\n\n\n\nvar queryString = __webpack_require__(7563);\n\nvar ItemsStore = /*#__PURE__*/function () {\n  function ItemsStore() {\n    var _this = this;\n\n    (0,classCallCheck/* default */.Z)(this, ItemsStore);\n\n    (0,defineProperty/* default */.Z)(this, "items", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "itemsPromo", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "allItems", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "allItemsCat", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "allItemsCatNew", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "banners", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "AllPrice", 0);\n\n    (0,defineProperty/* default */.Z)(this, "sum_div", 0);\n\n    (0,defineProperty/* default */.Z)(this, "cityName", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "cityNameRU", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "promo", null);\n\n    (0,defineProperty/* default */.Z)(this, "userToken", null);\n\n    (0,defineProperty/* default */.Z)(this, "userName", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "activePage", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "need_dops", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "free_items", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "cart_data", \'\');\n\n    (0,defineProperty/* default */.Z)(this, "setSumDiv", function (items) {\n      _this.sum_div = parseInt(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setDops", function (items) {\n      _this.need_dops = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setFreeItems", function (items) {\n      _this.free_items = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setCityRU", function (city) {\n      _this.cityNameRU = city;\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setCity", function (city) {\n      _this.cityName = city;\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setAllPrice", function (price) {\n      _this.AllPrice = price;\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setPage", function (activePage) {\n      _this.activePage = activePage;\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setToken", function (userToken, userName) {\n      _this.userToken = userToken;\n\n      _this.setUserName(userName);\n\n      if (typeof window !== \'undefined\') {\n        localStorage.setItem(\'token\', userToken);\n      }\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setPromo", function (promo, name) {\n      _this.promo = promo;\n      localStorage.setItem(\'promo_name\', name);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setBanners", function (items) {\n      _this.banners = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setItemsPromo", function (items) {\n      _this.itemsPromo = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setAllItemsCat", function (items) {\n      _this.allItemsCat = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setAllItemsCatNew", function (items) {\n      _this.allItemsCatNew = JSON.stringify(items);\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setItems", function (items) {\n      var tmp = 0,\n          allPrice = 0;\n\n      var cart_new_promo = _this.getItemsPromo();\n\n      allPrice = items.reduce(function (sum, item) {\n        return sum + parseInt(item[\'all_price\']);\n      }, tmp);\n      tmp = 0;\n      allPrice += cart_new_promo.reduce(function (sum, item) {\n        return sum + parseInt(item[\'all_price\']);\n      }, tmp);\n\n      _this.setAllPrice(allPrice);\n\n      _this.items = JSON.stringify(items);\n\n      if (typeof window !== \'undefined\') {\n        var my_cart = items.filter(function (item) {\n          return item.count > 0;\n        });\n        my_cart = JSON.stringify(my_cart);\n        localStorage.setItem(\'my_cart\', my_cart);\n      }\n    });\n\n    (0,defineProperty/* default */.Z)(this, "saveCartData", function (items) {\n      var cartData = JSON.stringify(items);\n      _this.cart_data = cartData;\n\n      if (typeof window !== \'undefined\') {\n        localStorage.setItem(\'cartData\', cartData);\n      }\n    });\n\n    (0,defineProperty/* default */.Z)(this, "setAllItems", function (items) {\n      _this.allItems = JSON.stringify(items);\n    });\n\n    if (typeof window !== \'undefined\') {\n      if (localStorage.getItem(\'my_cart\')) {\n        var cart = JSON.parse(localStorage.getItem(\'my_cart\'));\n        var new_cart = [];\n        cart.forEach(function (item) {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt(item.one_price),\n            all_price: parseInt(item.one_price) * parseInt(item.count)\n          });\n        });\n        this.setItems(new_cart);\n      }\n\n      if (localStorage.getItem(\'token\')) {\n        this.setToken(localStorage.getItem(\'token\'));\n      }\n\n      if (localStorage.getItem(\'cartData\')) {\n        this.cartData = localStorage.getItem(\'cartData\');\n      }\n\n      if (localStorage.getItem(\'promo_name\')) {\n        setTimeout(function () {\n          _this.getInfoPromo(localStorage.getItem(\'promo_name\'));\n        }, 300);\n      }\n    }\n\n    (0,mobx_esm/* makeAutoObservable */.ky)(this);\n  }\n\n  (0,createClass/* default */.Z)(ItemsStore, [{\n    key: "getSumDiv",\n    value: // Don\'t need decorators now\n    function getSumDiv() {\n      return this.sum_div;\n    }\n  }, {\n    key: "getDops",\n    value: function getDops() {\n      return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n    }\n  }, {\n    key: "getFreeItems",\n    value: function getFreeItems() {\n      return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n    }\n  }, {\n    key: "getCityRU",\n    value: function getCityRU() {\n      //return this.cityNameRU;\n      return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : \'Город\';\n    }\n  }, {\n    key: "getCity",\n    value: function getCity() {\n      return this.cityName;\n    }\n  }, {\n    key: "getAllPrice",\n    value: function getAllPrice() {\n      return this.AllPrice;\n    }\n  }, {\n    key: "getPage",\n    value: function getPage() {\n      return this.activePage;\n    }\n  }, {\n    key: "getUserName",\n    value: function getUserName() {\n      return this.userName && this.userName.length > 0 ? this.userName : \'\';\n    }\n  }, {\n    key: "setUserName",\n    value: function setUserName(userName) {\n      this.userName = userName;\n    }\n  }, {\n    key: "getToken",\n    value: function getToken() {\n      return this.userToken;\n    }\n  }, {\n    key: "getInfoPromo",\n    value: function getInfoPromo(promoName) {\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: queryString.stringify({\n          type: \'get_promo_web\',\n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        itemsStore.setPromo(JSON.stringify(json), promoName);\n        var check_promo = itemsStore.checkPromo();\n\n        if (check_promo.st === false) {\n          localStorage.removeItem(\'promo_name\');\n        } //return check_promo;\n\n      });\n    }\n  }, {\n    key: "getPromo",\n    value: function getPromo() {\n      return JSON.parse(this.promo, true); //localStorage.setItem(\'my_cart\', this.items);\n    }\n  }, {\n    key: "checkPromo",\n    value: function checkPromo() {\n      var orderInfo = itemsStore.getCartData();\n      itemsStore.setItemsPromo([]);\n      var tmp = 0,\n          allPrice = 0,\n          by_time = !orderInfo.orderTimes || parseInt(orderInfo.orderTimes) == 1 ? 0 : orderInfo.orderPredDay + \' \' + orderInfo.orderPredTime;\n      var promo_info = this.getPromo();\n      var my_cart = this.getItems();\n      var allItems = this.getAllItems();\n      var new_my_cart = [];\n      my_cart.forEach(function (el_cart, key_cart) {\n        new_my_cart.push({\n          name: el_cart.name,\n          item_id: el_cart.item_id,\n          count: el_cart.count,\n          one_price: el_cart.one_price,\n          all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n        });\n      });\n      my_cart = new_my_cart;\n      this.setItems(my_cart);\n      var cart_new_promo = [];\n      allPrice = my_cart.reduce(function (sum, item) {\n        return sum + parseInt(item[\'all_price\']);\n      }, tmp);\n      var type_order = 0,\n          point_id_dev = 0,\n          point_id_pic = 0;\n\n      if (orderInfo.orderType || orderInfo.orderType == 0) {\n        var _parseInt, _parseInt2;\n\n        type_order = (_parseInt = parseInt(orderInfo.orderType)) !== null && _parseInt !== void 0 ? _parseInt : 0;\n        point_id_dev = orderInfo.orderAddr ? parseInt(orderInfo.orderAddr.point_id) : 0;\n        point_id_pic = (_parseInt2 = parseInt(orderInfo.orderPic)) !== null && _parseInt2 !== void 0 ? _parseInt2 : 0;\n      }\n\n      var this_date = \'\',\n          this_time = \'\',\n          this_dow = \'\';\n\n      if (by_time == 0) {\n        this_date = moment_default()(new Date()).format("YYYY-MM-DD");\n        this_time = moment_default()(new Date()).format("H:mm");\n        this_dow = parseInt(moment_default()(new Date()).format("E"));\n      } else {\n        this_date = moment_default()(by_time).format("YYYY-MM-DD");\n        this_time = moment_default()(by_time).format("H:mm");\n        this_dow = parseInt(moment_default()(by_time).format("E"));\n      }\n\n      if (promo_info) {\n        if (!promo_info.status_promo) {\n          return {\n            st: false,\n            text: promo_info.promo_text["false"]\n          };\n        }\n\n        if (promo_info.limits.date.min && promo_info.limits.date.max) {\n          if (this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max) {} else {\n            return {\n              st: false,\n              text: promo_info.promo_text["false"]\n            };\n          }\n        }\n\n        if (promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0) {\n          if (this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max) {} else {\n            return {\n              st: false,\n              text: promo_info.promo_text["false"]\n            };\n          }\n        }\n\n        if (promo_info.limits.point_id != 0) {\n          if (type_order == 0 && point_id_dev == promo_info.limits.point_id || type_order == 1 && point_id_pic == promo_info.limits.point_id) {} else {\n            return {\n              st: false,\n              text: \'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.\'\n            };\n          }\n        }\n\n        if (promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0) {\n          if (allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0)) {} else {\n            return {\n              st: false,\n              text: \'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.\'\n            };\n          }\n        }\n\n        if (promo_info.limits.dows) {\n          if (parseInt(promo_info.limits.dows[this_dow]) == 0) {\n            return {\n              st: false,\n              text: \'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.\'\n            };\n          }\n        }\n\n        if (promo_info.limits.type_order) {\n          if (parseInt(promo_info.limits.type_order) == 1 || parseInt(promo_info.limits.type_order) == 3 && type_order == 0 || parseInt(promo_info.limits.type_order) == 2 && type_order == 1) {} else {\n            return {\n              st: false,\n              text: \'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.\'\n            };\n          }\n        }\n\n        if (promo_info.limits.only_kassa) {\n          if (parseInt(promo_info.limits.only_kassa) == 1) {\n            return {\n              st: false,\n              text: \'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.\'\n            };\n          }\n        }\n\n        if (promo_info.limits.items.length > 0) {\n          var check = 0;\n          var _this_item = null;\n          promo_info.limits.items.map(function (need_item) {\n            _this_item = new_my_cart.find(function (item) {\n              return item.item_id == need_item;\n            });\n\n            if (_this_item) {\n              check++;\n            }\n          });\n\n          if (promo_info.limits.items.length != check) {\n            return {\n              st: false,\n              text: promo_info.promo_text["false"]\n            };\n          }\n        } //\n\n\n        var all_price = 0,\n            count_sale = 0,\n            this_item = null; //скидка\n\n        if (parseInt(promo_info.promo_action) == 1) {\n          //товары\n          if (parseInt(promo_info.sale.cat_sale) == 1) {\n            count_sale = parseInt(promo_info.sale.count_sale);\n            my_cart.forEach(function (el_cart, key_cart) {\n              this_item = allItems.find(function (item) {\n                return item.id == el_cart.item_id;\n              });\n\n              if (parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4) {\n                promo_info.sale.sale_action.forEach(function (el_promo) {\n                  if (parseInt(el_cart.item_id) == parseInt(el_promo)) {\n                    if (parseInt(promo_info.sale.type_price) == 1) {\n                      //рубли  \n                      if (count_sale > 0) {\n                        all_price = parseInt(el_cart.one_price) * parseInt(el_cart.count) - parseInt(count_sale);\n\n                        if (all_price <= 0) {\n                          all_price = 1;\n                        }\n\n                        count_sale -= parseInt(el_cart.one_price) * parseInt(el_cart.count);\n                        my_cart[key_cart].all_price = all_price;\n                      }\n                    } else {\n                      //проценты  \n                      all_price = parseInt(el_cart.all_price) - parseInt(el_cart.all_price) / 100 * parseInt(count_sale);\n                      my_cart[key_cart].all_price = parseInt(all_price);\n                    }\n                  }\n                });\n              }\n            });\n          } //категории\n\n\n          if (parseInt(promo_info.sale.cat_sale) == 2) {\n            count_sale = parseInt(promo_info.sale.count_sale);\n            my_cart.forEach(function (el_cart, key_cart) {\n              this_item = allItems.find(function (item) {\n                return item.id == el_cart.item_id;\n              });\n\n              if (parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4) {\n                promo_info.sale.sale_action.forEach(function (el_promo) {\n                  if (parseInt(this_item.cat_id) == parseInt(el_promo)) {\n                    if (parseInt(promo_info.sale.type_price) == 1) {\n                      //рубли  \n                      if (count_sale > 0) {\n                        all_price = parseInt(el_cart.one_price) * parseInt(el_cart.count) - parseInt(count_sale);\n\n                        if (all_price <= 0) {\n                          all_price = 1;\n                        }\n\n                        count_sale -= parseInt(el_cart.one_price) * parseInt(el_cart.count);\n                        my_cart[key_cart].all_price = all_price;\n                      }\n                    } else {\n                      //проценты  \n                      all_price = parseInt(el_cart.all_price) - parseInt(el_cart.all_price) / 100 * parseInt(count_sale);\n                      my_cart[key_cart].all_price = parseInt(all_price);\n                    }\n                  }\n                });\n              }\n            });\n          } //все кроме допов и напитков\n\n\n          if (parseInt(promo_info.sale.cat_sale) == 3) {\n            count_sale = parseInt(promo_info.sale.count_sale);\n            my_cart.forEach(function (el_cart, key_cart) {\n              this_item = allItems.find(function (item) {\n                return item.id == el_cart.item_id;\n              });\n\n              if (parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4) {\n                if (parseInt(promo_info.sale.type_price) == 1) {\n                  //рубли  \n                  if (count_sale > 0) {\n                    all_price = parseInt(el_cart.one_price) * parseInt(el_cart.count) - parseInt(count_sale);\n\n                    if (all_price <= 0) {\n                      all_price = 1;\n                    }\n\n                    count_sale -= parseInt(el_cart.one_price) * parseInt(el_cart.count);\n                    my_cart[key_cart].all_price = all_price;\n                  }\n                } else {\n                  //проценты  \n                  all_price = parseInt(el_cart.all_price) - parseInt(el_cart.all_price) / 100 * parseInt(count_sale);\n                  my_cart[key_cart].all_price = parseInt(all_price);\n                }\n              }\n            });\n          }\n\n          tmp = 0;\n          allPrice = 0;\n          allPrice = my_cart.reduce(function (sum, item) {\n            return sum + item[\'all_price\'];\n          }, tmp);\n          itemsStore.setAllPrice(allPrice);\n          return {\n            st: true,\n            text: promo_info.promo_text["true"]\n          };\n        } //добавление товара\n\n\n        if (parseInt(promo_info.promo_action) == 2) {\n          promo_info.items_add.forEach(function (el) {\n            this_item = allItems.find(function (item) {\n              return item.id == el.item_id;\n            });\n            cart_new_promo.push({\n              item_id: el.item_id,\n              count: el.count,\n              one_price: this_item[\'price\'],\n              all_price: el.price\n            });\n          });\n          tmp = 0;\n          allPrice = 0;\n          allPrice = my_cart.reduce(function (sum, item) {\n            return sum + parseInt(item[\'all_price\']);\n          }, tmp);\n          tmp = 0;\n          allPrice += cart_new_promo.reduce(function (sum, item) {\n            return sum + parseInt(item[\'all_price\']);\n          }, tmp);\n          itemsStore.setItemsPromo(cart_new_promo);\n          itemsStore.setAllPrice(allPrice);\n        } //товар за цену\n\n\n        if (parseInt(promo_info.promo_action) == 3) {\n          if (promo_info.items_on_price.length > 0) {\n            my_cart.forEach(function (el_cart, key_cart) {\n              promo_info.items_on_price.forEach(function (el_promo) {\n                if (parseInt(el_cart.item_id) == parseInt(el_promo.id)) {\n                  my_cart[key_cart].new_one_price = parseInt(el_promo.price);\n                  my_cart[key_cart].all_price = parseInt(el_promo.price) * parseInt(el_cart.count);\n                }\n              });\n            });\n            tmp = 0;\n            allPrice = 0;\n            allPrice = my_cart.reduce(function (sum, item) {\n              return sum + parseInt(item[\'all_price\']);\n            }, tmp);\n            itemsStore.setAllPrice(allPrice);\n          }\n        }\n\n        this.setItems(my_cart);\n        return {\n          st: true,\n          text: promo_info.promo_text["true"]\n        };\n      } else {\n        return {\n          st: false,\n          text: promo_info.promo_text["false"],\n          test: promo_info\n        };\n      }\n    }\n  }, {\n    key: "getBanners",\n    value: function getBanners() {\n      return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n    }\n  }, {\n    key: "getItemsPromo",\n    value: function getItemsPromo() {\n      return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n    }\n  }, {\n    key: "getAllItemsCat",\n    value: function getAllItemsCat() {\n      return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n    }\n  }, {\n    key: "getAllItemsCatNew",\n    value: function getAllItemsCatNew() {\n      return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n    }\n  }, {\n    key: "getCartData",\n    value: function getCartData() {\n      if (typeof window !== \'undefined\') {\n        if (localStorage.getItem(\'cartData\')) {\n          return JSON.parse(localStorage.getItem(\'cartData\'));\n        } else {\n          return [];\n        }\n      }\n    }\n  }, {\n    key: "getItems",\n    value: function getItems() {\n      return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n    }\n  }, {\n    key: "getAllItems",\n    value: function getAllItems() {\n      return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n    }\n  }, {\n    key: "AddItem",\n    value: function AddItem(id) {\n      var my_cart = itemsStore.getItems();\n      var all_items = itemsStore.getAllItems();\n      var promo = itemsStore.getPromo();\n\n      if (all_items.length > 0) {\n        var cart_info = my_cart.find(function (item) {\n          return item.item_id == id;\n        });\n        var count_ = 0;\n\n        if (cart_info) {\n          count_ = parseInt(cart_info.count);\n        }\n\n        var item_info = all_items.find(function (item) {\n          return item.id == id;\n        });\n\n        if (item_info) {\n          var count = count_ + 1,\n              price = parseInt(item_info[\'price\']);\n          var max_count = itemsStore.check_max_count(parseInt(id));\n\n          if (parseInt(max_count) >= count) {\n            var check_in_cart = my_cart.some(function (item) {\n              return item.item_id == id;\n            });\n\n            if (!check_in_cart) {\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              });\n            } else {\n              my_cart.forEach(function (item, key) {\n                if (item.item_id == id) {\n                  my_cart[key][\'count\'] = count;\n                  my_cart[key][\'all_price\'] = count * price;\n                }\n              });\n            }\n\n            itemsStore.setItems(my_cart);\n\n            if (promo) {\n              itemsStore.checkPromo();\n            }\n\n            return count;\n          }\n\n          return count - 1;\n        }\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: "MinusItem",\n    value: function MinusItem(id) {\n      var my_cart = itemsStore.getItems();\n      var all_items = itemsStore.getAllItems();\n      var promo = itemsStore.getPromo();\n\n      if (all_items.length > 0) {\n        var cart_info = my_cart.find(function (item) {\n          return item.item_id == id;\n        });\n\n        if (!cart_info) {\n          return 0;\n        }\n\n        var item_info = all_items.find(function (item) {\n          return item.id == id;\n        }),\n            count = parseInt(cart_info.count) - 1,\n            price = parseInt(item_info[\'price\']);\n\n        if (count <= 0) {\n          count = 0;\n        }\n\n        if (count >= 0) {\n          my_cart.map(function (item, key) {\n            if (item.item_id == id) {\n              my_cart[key][\'count\'] = count;\n              my_cart[key][\'all_price\'] = count * price;\n            }\n          });\n          itemsStore.setItems(my_cart);\n        }\n\n        if (promo) {\n          itemsStore.checkPromo();\n        }\n\n        return count;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: "check_need_dops",\n    value: function check_need_dops() {\n      var my_cart = itemsStore.getItems();\n      var all_items = itemsStore.getAllItems();\n\n      if (!all_items || all_items.length == 0) {\n        return [];\n      }\n\n      var count_pizza = 0,\n          count_rolls = 0;\n      var need_dops = itemsStore.getDops();\n\n      if (need_dops.length == 0) {\n        return [];\n      }\n\n      my_cart.forEach(function (el) {\n        var this_item = all_items.find(function (item) {\n          return item.id == el.item_id;\n        });\n\n        if (!this_item) {\n          return [];\n        }\n\n        if (parseInt(this_item[\'cat_id\']) == 14) {\n          count_pizza += parseInt(el.count);\n        } else {\n          if (parseInt(this_item[\'cat_id\']) !== 14 && parseInt(this_item[\'cat_id\']) !== 5 && parseInt(this_item[\'cat_id\']) !== 6 && parseInt(this_item[\'cat_id\']) !== 7) {\n            count_rolls += parseInt(el.count);\n          }\n        }\n      });\n      var all_need_dops = [];\n\n      if (count_rolls > 0 && count_pizza == 0) {\n        all_need_dops = need_dops[\'rolls\'];\n      }\n\n      if (count_rolls == 0 && count_pizza > 0) {\n        all_need_dops = need_dops[\'pizza\'];\n      }\n\n      if (count_rolls > 0 && count_pizza > 0) {\n        all_need_dops = [].concat((0,toConsumableArray/* default */.Z)(need_dops[\'rolls\']), (0,toConsumableArray/* default */.Z)(need_dops[\'pizza\']));\n      }\n\n      if (count_rolls == 0 && count_pizza == 0) {\n        all_need_dops = [].concat((0,toConsumableArray/* default */.Z)(need_dops[\'rolls\']), (0,toConsumableArray/* default */.Z)(need_dops[\'pizza\']));\n      }\n\n      var my_dops = [],\n          add_my_dop = [];\n      my_cart.forEach(function (el) {\n        var this_item = all_items.find(function (item) {\n          return item.id == el.item_id;\n        });\n\n        if (!this_item) {\n          return [];\n        }\n\n        if (parseInt(this_item[\'cat_id\']) == 7) {\n          my_dops.push(this_item);\n        }\n      });\n      my_dops.forEach(function (my_d) {\n        var check_dop = false;\n        all_need_dops.forEach(function (need_dop) {\n          if (parseInt(need_dop.id) == parseInt(my_d.id)) {\n            check_dop = true;\n          }\n        });\n\n        if (!check_dop) {\n          add_my_dop.push(my_d);\n        }\n      });\n      all_need_dops = [].concat((0,toConsumableArray/* default */.Z)(all_need_dops), add_my_dop);\n      return all_need_dops;\n    }\n  }, {\n    key: "check_max_count",\n    value: function check_max_count(item_id) {\n      var free_dops_in_cart = [];\n      var unic_id = [];\n      var my_cart = itemsStore.getItems();\n      var free_items = itemsStore.getFreeItems();\n\n      if (!free_items) {\n        return 99;\n      }\n\n      my_cart.forEach(function (item_cart, key) {\n        free_items.forEach(function (item) {\n          if (parseInt(item_cart[\'item_id\']) == parseInt(item[\'this_item_id\'])) {\n            item[\'count_in_cart\'] = parseInt(item_cart[\'count\']);\n            free_dops_in_cart.push(item);\n            unic_id.push(parseInt(item[\'item_id\']));\n          }\n        });\n      });\n      unic_id = (0,toConsumableArray/* default */.Z)(new Set(unic_id));\n      var new_free_dop = [];\n      unic_id.forEach(function (unic_item, key) {\n        free_dops_in_cart.forEach(function (item_free) {\n          if (parseInt(unic_item) == parseInt(item_free[\'item_id\'])) {\n            var check = false;\n            new_free_dop.forEach(function (el, k) {\n              if (parseInt(el[\'item_id\']) == parseInt(unic_item)) {\n                check = true;\n                new_free_dop[k][\'count\'] += item_free[\'count_in_cart\'] * item_free[\'max_count\'];\n              }\n            });\n\n            if (!check) {\n              new_free_dop.push({\n                item_id: parseInt(unic_item),\n                count: item_free[\'count_in_cart\'] * item_free[\'max_count\']\n              });\n            }\n          }\n        });\n      });\n      var max_count = 99;\n      new_free_dop.forEach(function (el) {\n        if (parseInt(el[\'item_id\']) == parseInt(item_id)) {\n          max_count = parseInt(el[\'count\']);\n        }\n      });\n      return max_count;\n    }\n  }]);\n\n  return ItemsStore;\n}();\n\nvar itemsStore = new ItemsStore();\n/* harmony default export */ const items_store = (itemsStore);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Dialog/Dialog.js\nvar Dialog = __webpack_require__(2663);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Slide/Slide.js\nvar Slide = __webpack_require__(2285);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Hidden/Hidden.js + 4 modules\nvar Hidden = __webpack_require__(2613);\n// EXTERNAL MODULE: ./node_modules/swiper/esm/components/core/core-class.js + 66 modules\nvar core_class = __webpack_require__(3845);\n// EXTERNAL MODULE: ./node_modules/swiper/esm/components/navigation/navigation.js\nvar navigation = __webpack_require__(5186);\n// EXTERNAL MODULE: ./node_modules/swiper/esm/components/pagination/pagination.js\nvar pagination = __webpack_require__(2997);\n// EXTERNAL MODULE: ./node_modules/swiper/esm/components/a11y/a11y.js\nvar a11y = __webpack_require__(787);\n// EXTERNAL MODULE: ./node_modules/swiper/esm/components/autoplay/autoplay.js\nvar autoplay = __webpack_require__(7649);\n// EXTERNAL MODULE: ./node_modules/swiper/swiper.min.css\nvar swiper_min = __webpack_require__(7775);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(1253);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(5697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/AppBar/AppBar.js\nvar AppBar = __webpack_require__(5258);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Tabs/Tabs.js + 7 modules\nvar Tabs = __webpack_require__(65);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Tab/Tab.js\nvar Tab = __webpack_require__(1423);\n;// CONCATENATED MODULE: ./src/components/item/item.component.jsx\n\n\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar item_component_queryString = __webpack_require__(7563);\n\n\n\n\n\n\n\n\nfunction Ruble(props) {\n  return /*#__PURE__*/react.createElement("svg", {\n    width: props.width ? props.width : "50",\n    height: "20",\n    viewBox: props.viewBox ? props.viewBox : "0 0 1500 300",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, /*#__PURE__*/react.createElement("g", null, /*#__PURE__*/react.createElement("path", {\n    id: "svg_1",\n    d: "m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z"\n  })));\n}\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = (0,objectWithoutProperties/* default */.Z)(props, ["children", "value", "index"]);\n\n  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({\n    role: "tabpanel",\n    hidden: value !== index,\n    id: "simple-tabpanel-".concat(index),\n    "aria-labelledby": "simple-tab-".concat(index)\n  }, other), value === index && /*#__PURE__*/react.createElement("div", null, children));\n}\n\nTabPanel.propTypes = {\n  children: (prop_types_default()).node,\n  index: (prop_types_default()).any.isRequired,\n  value: (prop_types_default()).any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: "simple-tab-".concat(index),\n    \'aria-controls\': "simple-tabpanel-".concat(index)\n  };\n}\n\nfunction get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nfunction get_item(path) {\n  return path.split(\'/\')[3];\n}\n\nfunction ItemInfoPopover(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? \'ItemInfoPopover\' : undefined;\n\n  if (props.items.length == 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(IconButton, {\n    "aria-describedby": id,\n    edge: "start",\n    color: "inherit",\n    "aria-label": "menu",\n    onClick: handleClick\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faInfoCircle,\n    style: {\n      fontSize: \'1.2rem\'\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \'bottom\',\n      horizontal: \'right\'\n    },\n    transformOrigin: {\n      vertical: \'top\',\n      horizontal: \'right\'\n    }\n  }, /*#__PURE__*/React.createElement("div", {\n    className: props.items.length == 1 ? \'MainItemPopover MainItemPopoverOne\' : \'MainItemPopover MainItemPopoverLot\'\n  }, /*#__PURE__*/React.createElement("table", null, /*#__PURE__*/React.createElement("tbody", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement(Typography, {\n    variant: "h5",\n    className: "OtherMiniPopover",\n    component: "span"\n  }, "\\u041F\\u0438\\u0449\\u0435\\u0432\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u043D\\u0430 100 \\u0433"))), props.items.map(function (item, key) {\n    return /*#__PURE__*/React.createElement("tr", {\n      key: key\n    }, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("div", {\n      className: "NamePopover"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, item.name)), /*#__PURE__*/React.createElement("div", {\n      className: "OtherPopover"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, "\\u0411\\u0435\\u043B\\u043A\\u0438:"), /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, item.protein, " \\u0433")), /*#__PURE__*/React.createElement("div", {\n      className: "OtherPopover"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, "\\u0416\\u0438\\u0440\\u044B:"), /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, item.fat, " \\u0433")), /*#__PURE__*/React.createElement("div", {\n      className: "OtherPopover"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, "\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B:"), /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, item.carbohydrates, " \\u0433")), /*#__PURE__*/React.createElement("div", {\n      className: "OtherPopover"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, "\\u042D\\u043D\\u0435\\u0440\\u0433. \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C:"), /*#__PURE__*/React.createElement(Typography, {\n      variant: "h5",\n      component: "span"\n    }, item.kkal, " \\u043A\\u043A\\u0430\\u043B"))));\n  }))))));\n}\n\nvar Item = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(Item, _React$Component);\n\n  var _super = _createSuper(Item);\n\n  function Item(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Item);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "swiper", null);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "startMove", 0);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeTab", function (event, newValue) {\n      _this.setState({\n        itemTab: newValue\n      });\n    });\n\n    console.log(_this.props.item);\n    _this.state = {\n      item: _this.props.item ? _this.props.item : [],\n      is_load: false,\n      count: 0,\n      city_name: !_this.props.item ? props.match.params.cityName : \'\',\n      itemLink: !_this.props.item ? props.match.params.itemLink : \'\',\n      title: \'\',\n      description: \'\',\n      itemTab: 0\n    };\n\n    if (!_this.props.item) {\n      items_store.setCity(props.match.params.cityName);\n    }\n\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Item, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this2._isMounted) {\n          var item = items_store.getAllItems().find(function (item) {\n            return item.link == _this2.state.itemLink;\n          });\n\n          if (item) {\n            _this2.setState({\n              item: item\n            });\n\n            if (item.items.length == 0 && parseInt(item.type) !== 3 && parseInt(item.type) !== 4) {\n              item.items.push({\n                kkal: item.kkal,\n                protein: item.protein,\n                fat: item.fat,\n                carbohydrates: item.carbohydrates,\n                name: \'\'\n              });\n            }\n\n            _this2.setState({\n              is_load: true\n            });\n\n            var my_cart = items_store.getItems();\n            var item_cart = my_cart.filter(function (item) {\n              return item.item_id == item[\'id\'];\n            })[0];\n\n            _this2.setState({\n              count: item_cart ? item_cart.count : 0\n            });\n          }\n        }\n      });\n\n      if (this.props.item) {\n        Item.fetchData(\'/\' + this.state.city_name + \'/menu/\' + this.state.itemLink).then(function (data) {\n          _this2.setState({\n            title: data.page.title,\n            description: data.page.description\n          });\n        });\n\n        if (this.state.item.items.length == 0 && parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) {\n          this.state.item.items.push({\n            kkal: this.state.item.kkal,\n            protein: this.state.item.protein,\n            fat: this.state.item.fat,\n            carbohydrates: this.state.item.carbohydrates,\n            name: \'\'\n          });\n        }\n\n        this.setState({\n          is_load: true\n        });\n        var my_cart = items_store.getItems();\n        var item = my_cart.find(function (item) {\n          return item.item_id == _this2.state.item[\'id\'];\n        });\n        this.setState({\n          count: item ? item.count : 0\n        });\n      }\n\n      if (!this.props.item) {\n        if (document.querySelector(\'.activeCat\')) {\n          document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n        }\n\n        window.scrollTo(0, 0);\n        items_store.setPage(\'item\');\n      }\n    }\n  }, {\n    key: "add",\n    value: function add() {\n      var count = items_store.AddItem(this.state.item[\'id\']);\n      this.setState({\n        count: count\n      });\n    }\n  }, {\n    key: "minus",\n    value: function minus() {\n      var count = items_store.MinusItem(this.state.item[\'id\']);\n      this.setState({\n        count: count\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (!this.state.is_load) {\n        return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          container: true,\n          spacing: 3,\n          className: "MainItem mainContainer"\n        }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 12,\n          style: {\n            display: \'flex\',\n            justifyContent: \'center\'\n          }\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: 200,\n            height: 30,\n            backgroundColor: \'#e5e5e5\'\n          }\n        })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 6\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: 400,\n            height: 400,\n            backgroundColor: \'#e5e5e5\'\n          }\n        })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 6\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: 500,\n            height: 60,\n            backgroundColor: \'#e5e5e5\'\n          }\n        }), /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: 500,\n            height: 30,\n            backgroundColor: \'#e5e5e5\'\n          }\n        }), /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: 500,\n            height: 30,\n            backgroundColor: \'#e5e5e5\'\n          }\n        })));\n      }\n\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        xsDown: true\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "MainItem mainContainer",\n        style: {\n          paddingLeft: \'6%\',\n          paddingRight: \'6%\'\n        }\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 6,\n        style: {\n          paddingRight: 12,\n          display: \'flex\',\n          alignItems: \'center\',\n          paddingTop: 60\n        }\n      }, /*#__PURE__*/react.createElement("picture", null, /*#__PURE__*/react.createElement("source", {\n        srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.webp?" + this.state.item.img_new_update,\n        type: "image/webp"\n      }), /*#__PURE__*/react.createElement("img", {\n        src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.jpg?" + this.state.item.img_new_update,\n        alt: this.state.item.name,\n        title: this.state.item.name,\n        style: {\n          minHeight: 150\n        }\n      }))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 6,\n        style: {\n          paddingLeft: 12,\n          position: \'relative\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        className: "OtherMiniPopover",\n        component: "span"\n      }, this.state.item.info_weight), /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "static",\n        style: {\n          backgroundColor: \'#fff\',\n          color: \'#000\',\n          zIndex: 0,\n          paddingTop: 10\n        },\n        elevation: 0\n      }, /*#__PURE__*/react.createElement(Tabs/* default */.Z, {\n        "aria-label": "simple tabs example",\n        className: "itemTabs",\n        value: this.state.itemTab,\n        onChange: this.changeTab.bind(this),\n        style: {\n          justifyContent: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432"\n      }, a11yProps(0), {\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u041F\\u0438\\u0449\\u0435\\u0432\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C"\n      }, a11yProps(1), {\n        disableRipple: true\n      })), this.state.item.allergens.length == 0 ? null : /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0410\\u043B\\u043B\\u0435\\u0440\\u0433\\u0435\\u043D\\u044B"\n      }, a11yProps(2), {\n        disableRipple: true\n      })))), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 1,\n        style: {\n          width: \'100%\',\n          marginTop: 10,\n          marginBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          maxHeight: 250,\n          overflow: \'auto\'\n        },\n        className: this.state.item.items.length == 1 ? \'MainItemPopover tab MainItemPopoverOne\' : \'MainItemPopover tab MainItemPopoverLot\'\n      }, /*#__PURE__*/react.createElement("table", null, /*#__PURE__*/react.createElement("tbody", null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        className: "OtherMiniPopover",\n        component: "span"\n      }, "\\u041F\\u0438\\u0449\\u0435\\u0432\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u043D\\u0430 100 \\u0433"))), this.state.item.items.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement("div", {\n          className: "NamePopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.name)), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0411\\u0435\\u043B\\u043A\\u0438:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.protein, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0416\\u0438\\u0440\\u044B:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.fat, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.carbohydrates, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u042D\\u043D\\u0435\\u0440\\u0433. \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.kkal, " \\u043A\\u043A\\u0430\\u043B"))));\n      }))))), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 0,\n        style: {\n          marginTop: 10,\n          marginBottom: 15\n        }\n      }, this.state.item.items.length > 1 ? /*#__PURE__*/react.createElement("div", {\n        style: {\n          maxHeight: 300,\n          overflowY: \'auto\',\n          overflowX: \'hidden\'\n        }\n      }, this.state.item.items.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          style: {\n            display: \'flex\',\n            flexDirection: \'row\',\n            alignItems: \'center\'\n          }\n        }, /*#__PURE__*/react.createElement("picture", {\n          style: {\n            height: \'auto\',\n            width: 100,\n            display: \'table\'\n          }\n        }, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + item.img_new + "300х200.webp?" + item.img_new_update,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + item.img_new + "300х200.jpg?" + item.img_new_update,\n          alt: item.name,\n          title: item.name,\n          style: {\n            height: \'auto\',\n            width: 65\n          }\n        })), /*#__PURE__*/react.createElement("div", {\n          className: "itemMiniText"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "dopItemName"\n        }, item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "ItemDesc"\n        }, item.tmp_desc)));\n      })) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: "ItemDesc"\n      }, this.state.item.tmp_desc)), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 2\n      }, "\\u0410\\u043B\\u043B\\u0435\\u0440\\u0433\\u0435\\u043D\\u044B"), /*#__PURE__*/react.createElement("div", {\n        style: {\n          display: \'flex\',\n          flexDirection: \'row\',\n          justifyContent: \'space-between\',\n          position: \'absolute\',\n          bottom: -30,\n          width: \'65%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "newBTN",\n        onClick: this.add.bind(this)\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "ItemPriceValue",\n        style: {\n          paddingLeft: 5,\n          paddingBottom: 2\n        }\n      }, parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count)), /*#__PURE__*/react.createElement(Ruble, {\n        viewBox: "0 0 600 300",\n        width: "20"\n      }), /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n        color: "inherit"\n      })),  false ? /*#__PURE__*/0 : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder count",\n        style: {\n          border: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain",\n        onClick: this.minus.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n        style: {\n          fontSize: \'1rem\'\n        }\n      })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        component: "span",\n        className: "CardCountItem",\n        style: {\n          fontSize: \'1.2rem\'\n        }\n      }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain",\n        onClick: this.add.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n        style: {\n          fontSize: \'1rem\'\n        }\n      }))))))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        smUp: true\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "MainItem mainContainer",\n        style: {\n          paddingLeft: \'4%\',\n          paddingRight: \'4%\',\n          height: \'100vh\'\n        }\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingRight: 12\n        }\n      }, /*#__PURE__*/react.createElement("picture", {\n        id: "forSwiper"\n      }, /*#__PURE__*/react.createElement("source", {\n        srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.webp?" + this.state.item.img_new_update,\n        type: "image/webp"\n      }), /*#__PURE__*/react.createElement("img", {\n        src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.jpg?" + this.state.item.img_new_update,\n        alt: this.state.item.name,\n        title: this.state.item.name,\n        style: {\n          height: \'auto\',\n          width: \'100%\',\n          paddingTop: 20\n        }\n      })), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1",\n        style: {\n          textAlign: \'center\'\n        }\n      }, this.state.item.name)), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          position: \'relative\'\n        }\n      }, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "static",\n        style: {\n          backgroundColor: \'#fff\',\n          color: \'#000\',\n          zIndex: 0\n        },\n        elevation: 0\n      }, /*#__PURE__*/react.createElement(Tabs/* default */.Z, {\n        "aria-label": "simple tabs example",\n        className: "itemTabs",\n        value: this.state.itemTab,\n        onChange: this.changeTab.bind(this),\n        style: {\n          justifyContent: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432"\n      }, a11yProps(0), {\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u041F\\u0438\\u0449\\u0435\\u0432\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C"\n      }, a11yProps(1), {\n        disableRipple: true\n      })), this.state.item.allergens.length == 0 ? null : /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0410\\u043B\\u043B\\u0435\\u0440\\u0433\\u0435\\u043D\\u044B"\n      }, a11yProps(2), {\n        disableRipple: true\n      })))), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 1,\n        style: {\n          width: \'100%\',\n          marginTop: 10,\n          marginBottom: 15,\n          minHeight: \'30vh\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          maxHeight: \'30vh\',\n          height: \'100%\',\n          overflow: \'auto\'\n        },\n        className: this.state.item.items.length == 1 ? \'MainItemPopover tab MainItemPopoverOne\' : \'MainItemPopover tab MainItemPopoverLot\'\n      }, /*#__PURE__*/react.createElement("table", null, /*#__PURE__*/react.createElement("tbody", null, this.state.item.info_weight.length > 0 ? /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        className: "OtherMiniPopover",\n        component: "span"\n      }, "\\u0412\\u0435\\u0441: ", this.state.item.info_weight))) : null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        className: "OtherMiniPopover",\n        component: "span"\n      }, "\\u041F\\u0438\\u0449\\u0435\\u0432\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u043D\\u0430 100 \\u0433"))), this.state.item.items.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement("div", {\n          className: "NamePopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.name)), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0411\\u0435\\u043B\\u043A\\u0438:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.protein, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0416\\u0438\\u0440\\u044B:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.fat, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.carbohydrates, " \\u0433")), /*#__PURE__*/react.createElement("div", {\n          className: "OtherPopover"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u042D\\u043D\\u0435\\u0440\\u0433. \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C:"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.kkal, " \\u043A\\u043A\\u0430\\u043B"))));\n      }))))), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 0,\n        style: {\n          marginTop: 10,\n          marginBottom: 15,\n          minHeight: \'30vh\'\n        }\n      }, this.state.item.items.length > 1 ? /*#__PURE__*/react.createElement("div", {\n        style: {\n          maxHeight: \'30vh\',\n          height: \'100%\',\n          overflowY: \'auto\',\n          overflowX: \'hidden\',\n          position: \'relative\'\n        }\n      }, this.state.item.items.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          style: {\n            display: \'flex\',\n            flexDirection: \'row\',\n            alignItems: \'center\',\n            margin: \'10px 0px\'\n          }\n        }, /*#__PURE__*/react.createElement("picture", {\n          style: {\n            height: \'auto\',\n            width: 70,\n            display: \'table\'\n          }\n        }, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + item.img_new + "300х200.webp?" + item.img_new_update,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + item.img_new + "300х200.jpg?" + item.img_new_update,\n          alt: item.name,\n          title: item.name,\n          style: {\n            height: \'auto\',\n            width: \'100%\'\n          }\n        })), /*#__PURE__*/react.createElement("div", {\n          className: "itemMiniText",\n          style: {\n            overflow: \'hidden\',\n            flexWrap: \'wrap\',\n            paddingRight: 15\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "dopItemName",\n          style: {\n            width: \'100%\'\n          }\n        }, item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "ItemDesc",\n          style: {\n            width: \'100%\',\n            wordWrap: \'normal\'\n          }\n        }, item.tmp_desc)));\n      })) : /*#__PURE__*/react.createElement("div", {\n        style: {\n          maxHeight: \'30vh\',\n          height: \'100%\',\n          overflow: \'auto\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: "ItemDesc"\n      }, this.state.item.tmp_desc))), /*#__PURE__*/react.createElement(TabPanel, {\n        value: this.state.itemTab,\n        index: 2\n      }, "\\u0410\\u043B\\u043B\\u0435\\u0440\\u0433\\u0435\\u043D\\u044B"), /*#__PURE__*/react.createElement("div", {\n        style: {\n          display: \'flex\',\n          flexDirection: \'row\',\n          justifyContent: \'space-between\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "newBTN",\n        onClick: this.add.bind(this)\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "ItemPriceValue",\n        style: {\n          paddingLeft: 5\n        }\n      }, parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count)), /*#__PURE__*/react.createElement(Ruble, {\n        viewBox: "0 0 600 300",\n        width: "20"\n      }), /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n        color: "inherit"\n      })),  false ? /*#__PURE__*/0 : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder count",\n        style: {\n          border: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain",\n        onClick: this.minus.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n        style: {\n          fontSize: \'1rem\'\n        }\n      })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        component: "span",\n        className: "CardCountItem"\n      }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain",\n        onClick: this.add.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n        style: {\n          fontSize: \'1rem\'\n        }\n      }))))))));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: get_city(propsData),\n        item: get_item(propsData),\n        page: \'item\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: item_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page,\n            cats: json.cats,\n            allItems: json.allItems\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Item;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/item/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/home/home.component.jsx\n\n\n\n\n\n\n\n\n\nfunction home_component_createSuper(Derived) { var hasNativeReflectConstruct = home_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction home_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n //import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from \'react-scroll\'\n\nvar Element = modules/* Element */.W_;\nvar Events = modules/* Events */.zW;\nvar scroller = modules/* scroller */.OK;\n\nvar home_component_queryString = __webpack_require__(7563);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncore_class/* default.use */.Z.use([navigation/* default */.Z, pagination/* default */.Z, a11y/* default */.Z, autoplay/* default */.Z]);\n\n\nvar CoverFlowCarousel = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(CoverFlowCarousel, _React$Component);\n\n  var _super = home_component_createSuper(CoverFlowCarousel);\n\n  function CoverFlowCarousel(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, CoverFlowCarousel);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "swiper", null);\n\n    _this.state = {\n      data: _this.props.data,\n      type: _this.props.type\n    };\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(CoverFlowCarousel, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _Swiper;\n\n      this.swiper = new core_class/* default */.Z(".swiper-container", (_Swiper = {\n        grabCursor: true,\n        loop: true,\n        centeredSlidesBounds: false,\n        setWrapperSize: true,\n        autoHeight: true,\n        spaceBetween: 100,\n        centeredSlides: true,\n        slidesPerView: this.state.type == \'pc\' ? 2 : 2,\n        autoplay: true\n      }, (0,defineProperty/* default */.Z)(_Swiper, "autoplay", {\n        delay: 5000\n      }), (0,defineProperty/* default */.Z)(_Swiper, "pagination", this.state.type == \'pc\' ? true : true), (0,defineProperty/* default */.Z)(_Swiper, "pagination", this.state.type == \'pc\' ? {\n        el: ".swiper-pagination",\n        clickable: true,\n        type: \'bullets\',\n        renderBullet: function renderBullet(index, className) {\n          return \'<span class="\' + className + \'">\' + (index + 1) + \'</span>\';\n        }\n      } : {}), (0,defineProperty/* default */.Z)(_Swiper, "navigation", this.state.type == \'pc\' ? {\n        nextEl: ".swiper-button-next",\n        // arrows on the side of the slides\n        prevEl: ".swiper-button-prev" // arrows on the side of the slides\n\n      } : {}), _Swiper));\n    }\n  }, {\n    key: "prev",\n    value: function prev() {\n      this.swiper.slidePrev();\n    }\n  }, {\n    key: "next",\n    value: function next() {\n      this.swiper.slideNext();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "swiper-container swiper_" + this.state.type + " _h1_"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "swiper-wrapper _h2_"\n      }, this.state.data.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          className: "swiper-slide _h3_ " + key,\n          key: key\n        }, item);\n      })), this.state.type == \'pc\' ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "swiper-pagination"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "swiper-button-prev",\n        onClick: this.prev.bind(this)\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "swiper-button-next",\n        onClick: this.next.bind(this)\n      })) : null);\n    }\n  }]);\n\n  return CoverFlowCarousel;\n}(react.Component);\n\nfunction home_component_Ruble(props) {\n  return /*#__PURE__*/react.createElement("svg", {\n    width: props.width ? props.width : "50",\n    height: "20",\n    viewBox: props.viewBox ? props.viewBox : "0 0 1500 200",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, /*#__PURE__*/react.createElement("g", null, /*#__PURE__*/react.createElement("path", {\n    id: "svg_1",\n    d: "m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z"\n  })));\n}\n\nvar handleDragStart = function handleDragStart(e) {\n  return e.preventDefault();\n};\n\nfunction home_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\n\n\nvar CardItem = /*#__PURE__*/function (_React$Component2) {\n  (0,inherits/* default */.Z)(CardItem, _React$Component2);\n\n  var _super2 = home_component_createSuper(CardItem);\n\n  function CardItem(props) {\n    var _this2;\n\n    (0,classCallCheck/* default */.Z)(this, CardItem);\n\n    _this2 = _super2.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "_isMounted", false);\n\n    _this2.state = {\n      item: _this2.props.data,\n      count: 0\n    };\n    return _this2;\n  }\n\n  (0,createClass/* default */.Z)(CardItem, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this._isMounted = true;\n      var my_cart = items_store.getItems();\n      var item = my_cart.find(function (item) {\n        return item.item_id == _this3.state.item[\'id\'];\n      });\n\n      if (item) {\n        this.setState({\n          count: item.count\n        });\n      }\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this3._isMounted) {\n          var _my_cart = items_store.getItems();\n\n          var _item = _my_cart.find(function (item) {\n            return item.item_id == _this3.state.item[\'id\'];\n          });\n\n          if (_item) {\n            _this3.setState({\n              count: _item.count\n            });\n          } else {\n            _this3.setState({\n              count: 0\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "add",\n    value: function add() {\n      if (this._isMounted) {\n        items_store.AddItem(this.state.item[\'id\']);\n      }\n    }\n  }, {\n    key: "minus",\n    value: function minus() {\n      if (this._isMounted) {\n        items_store.MinusItem(this.state.item[\'id\']);\n      }\n    }\n  }, {\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.count !== nextState.count || this.state.item.price !== nextState.item.price;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this4 = this;\n\n      //  <FontAwesomeIcon icon={faRubleSign} />\n      if (this.props.type == \'pc\') {\n        return /*#__PURE__*/react.createElement(Card/* default */.Z, {\n          elevation: 0,\n          className: "CardItem"\n        }, /*#__PURE__*/react.createElement(CardContent/* default */.Z, {\n          style: {\n            cursor: \'pointer\',\n            position: \'relative\'\n          },\n          onClick: function onClick() {\n            return _this4.props.openItem(_this4.state.item.id);\n          }\n        }, /*#__PURE__*/react.createElement("picture", null, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.webp?" + this.state.item.img_new_update,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "600х400.jpg?" + this.state.item.img_new_update,\n          alt: this.state.item.name,\n          title: this.state.item.name,\n          style: {\n            minHeight: 150\n          }\n        })), parseInt(this.state.item.is_new) == 0 ? null : /*#__PURE__*/react.createElement("img", {\n          src: "/assets/is_new.png",\n          style: {\n            position: \'absolute\',\n            width: 70,\n            top: 0,\n            right: 0\n          }\n        }), /*#__PURE__*/react.createElement(CardContent/* default */.Z, {\n          style: {\n            padding: \'1.2vw\',\n            paddingBottom: 0,\n            paddingTop: 0\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardNameItem",\n          gutterBottom: true,\n          variant: "h5",\n          component: "span"\n        }, this.state.item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          gutterBottom: true,\n          className: "CardInfoWeiItem",\n          component: "p"\n        }, this.state.item.info_weight), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardInfoItem",\n          component: "p"\n        }, this.state.item.tmp_desc))), /*#__PURE__*/react.createElement(CardActions/* default */.Z, {\n          className: "CardAction"\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            display: \'flex\',\n            flexDirection: \'row\',\n            justifyContent: \'space-between\',\n            marginLeft: 0,\n            width: \'100%\'\n          }\n        }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardPriceItem",\n          variant: "h5",\n          component: "span"\n        }, this.state.item.price, " ", /*#__PURE__*/react.createElement(home_component_Ruble, null))), this.state.count == 0 ? /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorder fohover"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain CardInCardItem NONHOVERED",\n          onClick: this.add.bind(this)\n        }, /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n          color: "inherit"\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain CardInCardItem HOVERED",\n          onClick: this.add.bind(this)\n        }, "\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443")) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorder count"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.minus.bind(this)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardCountItem",\n          component: "span"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.add.bind(this)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        }))))));\n      }\n\n      if (this.props.type == \'mobile\') {\n        return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          container: true,\n          xs: 12,\n          className: "CardItem_mobile"\n        }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          style: {\n            position: \'relative\'\n          },\n          item: true,\n          xs: 5,\n          sm: 5,\n          md: 5,\n          xl: 5,\n          onClick: function onClick() {\n            return _this4.props.openItem(_this4.state.item.id);\n          }\n        }, /*#__PURE__*/react.createElement("picture", null, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "300х200.webp?" + this.state.item.img_new_update,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img_new + "300х200.jpg?" + this.state.item.img_new_update,\n          alt: this.state.item.name,\n          title: this.state.item.name\n        })), parseInt(this.state.item.is_new) == 0 ? null : /*#__PURE__*/react.createElement("img", {\n          src: "/assets/is_new.png",\n          style: {\n            position: \'absolute\',\n            width: 70,\n            top: 0,\n            right: 0\n          }\n        })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 7,\n          sm: 7,\n          md: 7,\n          xl: 7,\n          className: "SecondBox"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardNameItem",\n          gutterBottom: true,\n          variant: "h5",\n          component: "span",\n          onClick: function onClick() {\n            return _this4.props.openItem(_this4.state.item.id);\n          }\n        }, this.state.item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardInfoItem",\n          component: "p",\n          onClick: function onClick() {\n            return _this4.props.openItem(_this4.state.item.id);\n          }\n        }, this.state.item.tmp_desc), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          gutterBottom: true,\n          className: "CardPriceItem",\n          variant: "h5",\n          component: "span"\n        }, this.state.item.price, " ", /*#__PURE__*/react.createElement(home_component_Ruble, {\n          width: "20",\n          viewBox: "200 -200 400 600"\n        })), this.state.count == 0 ? /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorder"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain CardInCardItem",\n          onClick: this.add.bind(this)\n        }, /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n          color: "inherit"\n        }))) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorder count"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.minus.bind(this)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "CardCountItem",\n          component: "span"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.add.bind(this)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        }))))));\n      }\n    }\n  }]);\n\n  return CardItem;\n}(react.Component);\n\nvar Transition = /*#__PURE__*/react.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/react.createElement(Slide/* default */.Z, (0,esm_extends/* default */.Z)({\n    direction: "up",\n    ref: ref\n  }, props));\n});\nvar Home = /*#__PURE__*/function (_React$Component3) {\n  (0,inherits/* default */.Z)(Home, _React$Component3);\n\n  var _super3 = home_component_createSuper(Home);\n\n  function Home(props) {\n    var _this5;\n\n    (0,classCallCheck/* default */.Z)(this, Home);\n\n    _this5 = _super3.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "startMove", 0);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "componentDidMount", function () {\n      var time = Date.now();\n      var arrMax = [];\n      setTimeout(function () {\n        window.addEventListener(\'scroll\', function () {\n          if (time + 500 - Date.now() < 0) {\n            items_store.getAllItemsCat().map(function (item, key) {\n              var elem = document.getElementById(\'cat\' + item.id);\n\n              if (elem) {\n                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 60;\n\n                if (top < 0) {\n                  arrMax.push({\n                    name: item.name,\n                    Y: top,\n                    main_id: item.main_id\n                  });\n                }\n              }\n            });\n\n            if (arrMax.length > 0) {\n              var max = arrMax.reduce(function (acc, curr) {\n                return acc.b > curr.b ? acc : curr;\n              });\n              arrMax = [];\n\n              if (max.length > 0) {\n                if (document.querySelector(\'.activeCat\')) {\n                  document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n                }\n\n                if (document.querySelector(\'#link_\' + max[0].main_id)) {\n                  document.querySelector(\'#link_\' + max[0].main_id).classList.add(\'activeCat\');\n                }\n              }\n            }\n\n            time = Date.now();\n          }\n        });\n      }, 300);\n      var data = {\n        type: \'get_page_info\',\n        city_id: _this5.state.city_name,\n        page: \'\'\n      };\n\n      if (typeof window !== \'undefined\') {\n        setTimeout(function () {\n          if (localStorage.getItem(\'goTo\')) {\n            var hash = localStorage.getItem(\'goTo\');\n            localStorage.removeItem(\'goTo\');\n            setTimeout(function () {\n              scroller.scrollTo("myScrollToElement", {\n                duration: 800,\n                delay: 800,\n                smooth: "easeInOutQuart",\n                offset: document.getElementById(\'cat\' + hash).getBoundingClientRect()[\'y\'] - 50\n              });\n            }, 300);\n          }\n        }, 1000);\n        setTimeout(function () {\n          var hash = window.location.pathname;\n          var checkItem = hash.split(\'/item/\');\n          console.log(\'checkItem\', checkItem);\n\n          if (checkItem.length > 1) {\n            var allItems = items_store.getAllItems();\n            var act_id = checkItem[1];\n            var item = allItems.find(function (item) {\n              return item.link == act_id;\n            });\n            console.log(\'checkItem allItems\', allItems);\n            console.log(\'checkItem act_id\', act_id);\n            console.log(\'checkItem item\', item);\n\n            if (window.innerWidth <= 400) {\n              _this5.openItem(item.id);\n            } else {\n              _this5.openItemPC(item.id);\n            }\n\n            var str = window.location.pathname;\n            str.replace("/item/" + act_id, \'\');\n\n            _this5.props.history.replace({\n              pathname: checkItem[0]\n            });\n          }\n          /*return ;\n          \n          if( hash.length > 0 ){\n              let act_id = hash.split(\'?item_\')[1];\n              \n              if( window.innerWidth <= 400 ){\n                  this.openItem(act_id);\n              }else{\n                  this.openItemPC(act_id);\n              }\n              \n              this.props.history.replace({ pathname: window.location.pathname })\n          }*/\n\n        }, 1300);\n      }\n\n      Home.fetchData(\'/\' + _this5.state.city_name).then(function (data) {\n        _this5.setState({\n          page: data.page,\n          title: data.title,\n          description: data.description\n        });\n      });\n      items_store.setPage(\'home\');\n\n      if (items_store.getAllItemsCat().length == 0) {\n        _this5.setState({\n          allItems: items_store.getAllItemsCat()\n        });\n      } //if( itemsStore.getAllItemsCat().length == 0 ){\n\n\n      window.scrollTo(0, 0); //}\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        _this5.setState({\n          allItems: items_store.getAllItemsCat()\n        });\n\n        var banners_pc = [],\n            banners_mobile = [];\n        items_store.getBanners().map(function (item, key) {\n          if (item.aktia_id && parseInt(item.aktia_id) > 0) {\n            banners_pc.push( /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n              to: \'/\' + items_store.getCity() + \'/actii#act\' + item.aktia_id,\n              exact: true,\n              style: {\n                width: \'inherit\',\n                height: \'auto\',\n                borderRadius: 15\n              }\n            }, /*#__PURE__*/react.createElement("picture", {\n              style: {\n                width: \'inherit\',\n                height: \'auto\'\n              }\n            }, /*#__PURE__*/react.createElement("source", {\n              srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.webp?" + item.img_new_update,\n              type: "image/webp"\n            }), /*#__PURE__*/react.createElement("img", {\n              src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.jpg?" + item.img_new_update //alt={this.state.item.name}\n              //title={this.state.item.name}\n              ,\n              style: {\n                width: \'inherit\',\n                height: \'auto\',\n                minHeight: 250,\n                borderRadius: 15\n              },\n              onDragStart: handleDragStart\n            }))));\n            banners_mobile.push( /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n              to: \'/\' + items_store.getCity() + \'/actii#act\' + item.aktia_id,\n              exact: true,\n              style: {\n                width: \'inherit\',\n                height: \'auto\',\n                borderRadius: 15\n              }\n            }, /*#__PURE__*/react.createElement("picture", {\n              style: {\n                width: \'inherit\',\n                height: \'auto\'\n              }\n            }, /*#__PURE__*/react.createElement("source", {\n              srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.webp?" + item.img_new_update,\n              type: "image/webp"\n            }), /*#__PURE__*/react.createElement("img", {\n              src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.jpg?" + item.img_new_update //alt={this.state.item.name}\n              //title={this.state.item.name}\n              ,\n              style: {\n                width: \'inherit\',\n                height: \'auto\',\n                borderRadius: 15\n              },\n              onDragStart: handleDragStart\n            }))));\n          } else {\n            if (item.item && parseInt(item.item) > 0) {\n              banners_pc.push( /*#__PURE__*/react.createElement("picture", {\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\'\n                }\n              }, /*#__PURE__*/react.createElement("source", {\n                srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.webp?" + item.img_new_update,\n                type: "image/webp"\n              }), /*#__PURE__*/react.createElement("img", {\n                src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.jpg?" + item.img_new_update //alt={this.state.item.name}\n                //title={this.state.item.name}\n                ,\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\',\n                  minHeight: 250,\n                  borderRadius: 15\n                },\n                onDragStart: handleDragStart,\n                onClick: _this5.openItemPC.bind((0,assertThisInitialized/* default */.Z)(_this5), item.item)\n              })));\n              banners_mobile.push( /*#__PURE__*/react.createElement("picture", {\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\'\n                }\n              }, /*#__PURE__*/react.createElement("source", {\n                srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.webp?" + item.img_new_update,\n                type: "image/webp"\n              }), /*#__PURE__*/react.createElement("img", {\n                src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.jpg?" + item.img_new_update //alt={this.state.item.name}\n                //title={this.state.item.name}\n                ,\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\',\n                  borderRadius: 15\n                },\n                onDragStart: handleDragStart,\n                onClick: _this5.openItem.bind((0,assertThisInitialized/* default */.Z)(_this5), item.item)\n              })));\n            } else {\n              banners_pc.push( /*#__PURE__*/react.createElement("picture", {\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\'\n                }\n              }, /*#__PURE__*/react.createElement("source", {\n                srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.webp?" + item.img_new_update,\n                type: "image/webp"\n              }), /*#__PURE__*/react.createElement("img", {\n                src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "3700х1000.jpg?" + item.img_new_update //alt={this.state.item.name}\n                //title={this.state.item.name}\n                ,\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\',\n                  minHeight: 250,\n                  borderRadius: 15\n                },\n                onDragStart: handleDragStart\n              })));\n              banners_mobile.push( /*#__PURE__*/react.createElement("picture", {\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\'\n                }\n              }, /*#__PURE__*/react.createElement("source", {\n                srcSet: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.webp?" + item.img_new_update,\n                type: "image/webp"\n              }), /*#__PURE__*/react.createElement("img", {\n                src: "https://storage.yandexcloud.net/site-home-img/" + item.img_new + "1000х500.jpg?" + item.img_new_update //alt={this.state.item.name}\n                //title={this.state.item.name}\n                ,\n                style: {\n                  width: \'inherit\',\n                  height: \'auto\',\n                  borderRadius: 15\n                },\n                onDragStart: handleDragStart\n              })));\n            }\n          }\n        });\n\n        _this5.setState({\n          banners_pc: banners_pc,\n          banners_mobile: banners_mobile\n        });\n      });\n    });\n\n    _this5.state = {\n      allItems: [],\n      is_load: true,\n      testData: [1, 2, 3, 4, 5, 6, 7, 8],\n      openItem: null,\n      openModal: false,\n      openModalPC: false,\n      banners_pc: [],\n      banners_mobile: [],\n      city_name: props.match.params.cityName,\n      page: null,\n      title: \'\',\n      description: \'\'\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this5;\n  }\n\n  (0,createClass/* default */.Z)(Home, [{\n    key: "componentDidUmount",\n    value: function componentDidUmount() {\n      window.removeEventListener(\'scroll\');\n    }\n  }, {\n    key: "openItem",\n    value: function openItem(id) {\n      var _this6 = this;\n\n      var allItems = items_store.getAllItems();\n      var item = allItems.find(function (item) {\n        return item.id == id;\n      });\n      this.setState({\n        openItem: item,\n        openModal: true\n      });\n      setTimeout(function () {\n        var el = document.getElementById("forSwiper");\n        el.addEventListener("touchstart", _this6.touchStart.bind(_this6), false);\n        el.addEventListener("touchend", _this6.touchEnd.bind(_this6), false);\n      }, 300);\n    }\n  }, {\n    key: "openItemPC",\n    value: function openItemPC(id) {\n      var allItems = items_store.getAllItems();\n      var item = allItems.find(function (item) {\n        return item.id == id;\n      });\n      this.setState({\n        openItem: item,\n        openModalPC: true\n      });\n    }\n  }, {\n    key: "openModal",\n    value: function openModal() {\n      this.setState({\n        openModal: true\n      });\n    }\n  }, {\n    key: "handleClose",\n    value: function handleClose() {\n      var el = document.getElementById("forSwiper");\n      el.removeEventListener("touchstart", this.touchStart.bind(this), false);\n      el.removeEventListener("touchend", this.touchEnd.bind(this), false);\n      this.setState({\n        openModal: false,\n        openItem: null\n      });\n    }\n  }, {\n    key: "handleClosePC",\n    value: function handleClosePC() {\n      this.setState({\n        openModalPC: false,\n        openItem: null\n      });\n    }\n  }, {\n    key: "touchStart",\n    value: function touchStart(el) {\n      this.startMove = el[\'changedTouches\'][0].pageY;\n    }\n  }, {\n    key: "touchEnd",\n    value: function touchEnd(el) {\n      if (el[\'changedTouches\'][0].pageY - this.startMove > 125) {\n        this.handleClose();\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this7 = this;\n\n      if (items_store.getAllItemsCat().length == 0) {\n        return /*#__PURE__*/react.createElement(Element, {\n          name: "myScrollToElement",\n          className: "Category"\n        }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n          xsDown: true\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'79.3vw\',\n            marginLeft: \'9.6vw\',\n            borderRadius: 10,\n            height: 300,\n            marginTop: 80,\n            marginBottom: 50,\n            backgroundColor: \'rgb(229, 229, 229)\'\n          }\n        }), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          container: true,\n          spacing: 2,\n          style: {\n            margin: 0,\n            padding: \'0px 10px\',\n            paddingBottom: 20,\n            flexWrap: \'wrap\',\n            width: \'100%\'\n          },\n          className: "MainItems mainContainer"\n        }, this.state.testData.map(function (it, k) {\n          return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            md: 3,\n            xl: 3,\n            key: k,\n            style: {\n              padding: \'10px 8px\'\n            }\n          }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n            xsDown: true\n          }, /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 260,\n              height: 170,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 120,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 260,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 260,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 260,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          })), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n            smUp: true\n          }, /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: \'79.3vw\',\n              marginLeft: 15,\n              height: 170,\n              marginBottom: 10,\n              backgroundColor: \'#e5e5e5\'\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              marginLeft: 15\n            }\n          }, /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 100,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 150,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 150,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }), /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 150,\n              height: 20,\n              backgroundColor: \'#e5e5e5\',\n              marginBottom: 10\n            }\n          }))));\n        })))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n          smUp: true\n        }, /*#__PURE__*/react.createElement(Backdrop/* default */.Z, {\n          style: {\n            zIndex: 4,\n            color: \'#fff\'\n          },\n          open: true\n        }, /*#__PURE__*/react.createElement(CircularProgress/* default */.Z, {\n          color: "inherit"\n        }))));\n      }\n\n      return /*#__PURE__*/react.createElement(Element, {\n        name: "myScrollToElement",\n        className: "Category"\n      }, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        xsDown: true\n      }, this.state.banners_pc.length == 0 ? null : /*#__PURE__*/react.createElement(CoverFlowCarousel, {\n        type: "pc",\n        data: this.state.banners_pc\n      })), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        smUp: true\n      }, this.state.banners_mobile.length == 0 ? null : /*#__PURE__*/react.createElement(CoverFlowCarousel, {\n        type: "mobile",\n        data: this.state.banners_mobile\n      })), items_store.getAllItemsCat().map(function (cat, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          name: "cat" + cat.main_id,\n          id: "cat" + cat.id\n        }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          container: true,\n          spacing: 2,\n          style: {\n            margin: 0,\n            padding: \'0px 36px\',\n            flexWrap: \'wrap\',\n            width: \'100%\',\n            paddingBottom: 40\n          },\n          className: "MainItems mainContainer"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "h3"\n        }, cat.name)), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          container: true,\n          spacing: 2,\n          style: {\n            margin: 0,\n            padding: \'0px 10px\',\n            paddingBottom: 20,\n            flexWrap: \'wrap\',\n            width: \'100%\'\n          },\n          className: "MainItems mainContainer"\n        }, cat.items.map(function (it, k) {\n          return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            md: 3,\n            xl: 3,\n            key: k,\n            style: {\n              padding: \'10px 8px\',\n              display: \'flex\'\n            }\n          }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n            xsDown: true\n          }, /*#__PURE__*/react.createElement(CardItem, {\n            data: it,\n            type: \'pc\',\n            openItem: _this7.openItemPC.bind(_this7)\n          })), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n            smUp: true\n          }, /*#__PURE__*/react.createElement(CardItem, {\n            data: it,\n            type: \'mobile\',\n            openItem: _this7.openItem.bind(_this7)\n          })));\n        })));\n      }), this.state.openItem ? /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        fullScreen: true,\n        open: this.state.openModal,\n        className: "ItemDialog",\n        onClose: this.handleClose.bind(this),\n        TransitionComponent: Transition\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        disableTypography: true,\n        style: {\n          margin: 0,\n          padding: 8\n        }\n      }, /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        "aria-label": "close",\n        style: {\n          position: \'absolute\',\n          top: 0,\n          right: 0\n        },\n        onClick: this.handleClose.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC,\n        style: {\n          fontSize: \'1.8rem\',\n          color: \'#e5e5e5\'\n        }\n      }))), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Item, {\n        itemId: this.state.openItem.id,\n        item: this.state.openItem\n      }))) : null, this.state.openItem ? /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        maxWidth: \'md\',\n        fullWidth: true,\n        style: {\n          borderRadius: 50\n        },\n        onClose: this.handleClosePC.bind(this),\n        className: "modalActii Item",\n        open: this.state.openModalPC\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        disableTypography: true,\n        style: {\n          margin: 0,\n          padding: 8\n        }\n      }, /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        "aria-label": "close",\n        style: {\n          position: \'absolute\',\n          top: 0,\n          right: 50\n        },\n        onClick: this.handleClosePC.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC,\n        style: {\n          fontSize: \'1.8rem\',\n          color: \'#CC0033\'\n        }\n      }))), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        className: "modalActiiContent"\n      }, /*#__PURE__*/react.createElement(Item, {\n        itemId: this.state.openItem.id,\n        item: this.state.openItem\n      }))) : null);\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: home_component_get_city(propsData),\n        page: \'\',\n        link: propsData\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: home_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          console.log(\'fetchData\', json);\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page,\n            cats: json.cats,\n            allItems: json.allItems\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Home;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/home/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__(8481);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Accordion/Accordion.js + 2 modules\nvar Accordion = __webpack_require__(7708);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js\nvar AccordionDetails = __webpack_require__(1201);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js\nvar AccordionSummary = __webpack_require__(743);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/ExpandMore.js\nvar ExpandMore = __webpack_require__(4566);\n;// CONCATENATED MODULE: ./src/components/contact/contact.component.jsx\n\n\n\n\n\n\n\n\n\nfunction contact_component_createSuper(Derived) { var hasNativeReflectConstruct = contact_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction contact_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\nvar contact_component_queryString = __webpack_require__(7563);\n\nfunction ControlledAccordions(props) {\n  var _React$useState = react.useState(false),\n      _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var handleChange = function handleChange(panel) {\n    return function (event, isExpanded) {\n      setExpanded(isExpanded ? panel : false);\n    };\n  };\n\n  var points = props.points;\n  return /*#__PURE__*/react.createElement("div", {\n    className: "Accordion"\n  }, points.map(function (item, key) {\n    return /*#__PURE__*/react.createElement(Accordion/* default */.Z, {\n      key: key,\n      expanded: expanded === \'panel\' + key,\n      onChange: handleChange(\'panel\' + key)\n    }, /*#__PURE__*/react.createElement(AccordionSummary/* default */.Z, {\n      expandIcon: /*#__PURE__*/react.createElement(ExpandMore/* default */.Z, null),\n      "aria-controls": "panel" + key + "bh-content",\n      id: "panel" + key + "bh-header"\n    }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.raion, ": ", item.addr)), /*#__PURE__*/react.createElement(AccordionDetails/* default */.Z, {\n      className: "AccordionDesc",\n      style: {\n        flexDirection: \'column\',\n        padding: 0\n      }\n    }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "b"\n    }, "\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.organization)), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "b"\n    }, "\\u0418\\u041D\\u041D / \\u041A\\u041F\\u041F: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.inn, " / ", item.kpp)), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "b"\n    }, "\\u041E\\u0413\\u0420\\u041D: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.ogrn)), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "b"\n    }, "\\u0424\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.full_addr)), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "b"\n    }, "\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n      variant: "h5",\n      component: "span"\n    }, item.phone))));\n  }));\n}\n\nfunction contact_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar Contact = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(Contact, _React$Component);\n\n  var _super = contact_component_createSuper(Contact);\n\n  function Contact(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Contact);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'contact\');\n\n      _this.dynamicallyLoadScript();\n\n      Contact.fetchData(\'/\' + _this.state.city_name).then(function (data) {\n        _this.setState({\n          title: data.page.title,\n          description: data.page.description\n        });\n      });\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: contact_component_queryString.stringify({\n          type: \'get_addr_zone_web\',\n          city_id: _this.state.city_name\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var points_zone = [];\n        json.map(function (point) {\n          if (point[\'zone_origin\'].length > 0) {\n            points_zone.push(JSON.parse(point[\'zone_origin\']));\n          }\n        });\n        var unic_point = [],\n            check = false;\n        json.map(function (point) {\n          check = false;\n          unic_point.map(function (new_point) {\n            if (parseInt(new_point.id) == parseInt(point.id)) {\n              check = true;\n            }\n          });\n\n          if (!check) {\n            unic_point.push(point);\n          }\n        });\n\n        _this.setState({\n          points: json,\n          unic_point: unic_point,\n          is_load: true\n        });\n\n        setTimeout(function () {\n          _this.loadMap(json, points_zone);\n        }, 500);\n      })["catch"](function (err) {});\n    });\n\n    _this.state = {\n      points: [],\n      unic_point: [],\n      title: \'\',\n      description: \'\',\n      city_name: props.match.params.cityName,\n      is_load: false\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Contact, [{\n    key: "dynamicallyLoadScript",\n    value: function dynamicallyLoadScript() {\n      var script = document.createElement("script"); // create a script DOM node\n\n      script.src = \'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU\'; // set its src to the provided URL\n\n      document.head.appendChild(script); // add it to the end of the head section of the page (could change \'head\' to \'body\' to add it to the end of the body section instead)\n    }\n  }, {\n    key: "loadMap",\n    value: function loadMap(points, points_zone) {\n      var myMap2;\n      ymaps.ready(function () {\n        myMap2 = new ymaps.Map(\'ForMap\', {\n          center: [points[0][\'xy_center_map\'][\'latitude\'], points[0][\'xy_center_map\'][\'longitude\']],\n          zoom: 10.8\n        });\n        var HintLayout = ymaps.templateLayoutFactory.createClass("<div class=\'my-hint\'>" + "<b>{{ properties.address }}</b><br />" + "График работы: c 10:00 до 21:30" + "</div>");\n        points_zone.map(function (zone, key) {\n          myMap2.geoObjects.add(new ymaps.Polygon([zone], {\n            //hintContent: "Зона доставки"\n            address: points[key][\'addr\']\n          }, {\n            hintLayout: HintLayout,\n            fillColor: \'rgba(187, 0, 37, 0)\',\n            strokeColor: \'rgb(187, 0, 37)\',\n            strokeWidth: 5\n          }));\n        });\n        points.map(function (point) {\n          myMap2.geoObjects.add(new ymaps.Placemark([point[\'xy_point\'][\'latitude\'], point[\'xy_point\'][\'longitude\']], {\n            //hintContent: point[\'addr\'],\n            //balloonContent: point[\'addr\'],\n            address: point[\'addr\']\n          }, {\n            hintLayout: HintLayout,\n            iconLayout: \'default#image\',\n            //iconImageHref: \'https://jacofood.ru/src/img/other/Favikon.png\',\n            iconImageHref: \'/assets/img_other/Favikon.png\',\n            iconImageSize: [30, 30],\n            iconImageOffset: [-12, -24],\n            iconContentOffset: [15, 15]\n          }));\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "Contact mainContainer MuiGrid-spacing-xs-3"\n      }, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, "\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B")), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 4,\n        md: 4,\n        xl: 4,\n        sm: 12,\n        xs: 12,\n        className: "mainContainer"\n      }, this.state.points[0] ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "p20"\n      }, "\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438: ", this.state.points[0].sum_div, " \\u0440\\u0443\\u0431.") : null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h2"\n      }, "\\u0420\\u0435\\u0436\\u0438\\u043C \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "p20"\n      }, "\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u043C \\u0435\\u0436\\u0435\\u0434\\u043D\\u0435\\u0432\\u043D\\u043E \\u0441 10:00 \\u0434\\u043E 21:30"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h2"\n      }, "\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442-\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430:"), this.state.points[0] ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "a",\n        className: "p20",\n        href: \'tel:\' + this.state.points[0].phone_new\n      }, this.state.points[0].phone) : null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h2"\n      }, "\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u043A\\u0430\\u0444\\u0435:"), /*#__PURE__*/react.createElement(ControlledAccordions, {\n        points: this.state.unic_point\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 8,\n        md: 8,\n        xl: 8,\n        sm: 12,\n        xs: 12,\n        id: "ForMap"\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: \'100%\',\n          marginRight: 12,\n          backgroundColor: \'#e5e5e5\'\n        }\n      })));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: contact_component_get_city(propsData),\n        page: \'contacts\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: contact_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Contact;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/contact/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/DialogActions/DialogActions.js\nvar DialogActions = __webpack_require__(6856);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Snackbar/Snackbar.js + 2 modules\nvar Snackbar = __webpack_require__(6912);\n;// CONCATENATED MODULE: ./src/components/actii/actii.component.jsx\n\n\n\n\n\n\n\n\nfunction actii_component_createSuper(Derived) { var hasNativeReflectConstruct = actii_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction actii_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar actii_component_queryString = __webpack_require__(7563);\n\nfunction actii_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar Actii = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(Actii, _React$Component);\n\n  var _super = actii_component_createSuper(Actii);\n\n  function Actii(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Actii);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'actii\');\n      Actii.fetchData(\'/\' + _this.state.city_name).then(function (data) {\n        _this.setState({\n          title: data.page.title,\n          description: data.page.description\n        });\n      });\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: actii_component_queryString.stringify({\n          type: \'get_my_actii_web\',\n          city_id: _this.state.city_name\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          actii: json.actii,\n          is_load: true\n        });\n\n        setTimeout(function () {\n          var hash = window.location.hash;\n\n          if (hash.length > 0) {\n            var act_id = hash.split(\'#act\')[1];\n            var this_item = json.actii.find(function (item) {\n              return item.id == act_id;\n            });\n\n            _this.openDialog(this_item);\n\n            _this.props.history.replace({\n              pathname: window.location.pathname\n            });\n          }\n        }, 300);\n      })["catch"](function (err) {});\n    });\n\n    _this.state = {\n      actii: [],\n      pre_actii: [1, 2, 3, 4],\n      is_load: false,\n      showItem: null,\n      openDialog: false,\n      title: \'\',\n      description: \'\',\n      city_name: props.match.params.cityName,\n      openMSG: false,\n      statusMSG: false,\n      textMSG: \'\'\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Actii, [{\n    key: "closeDialog",\n    value: function closeDialog() {\n      this.setState({\n        showItem: null,\n        openDialog: false\n      });\n    }\n  }, {\n    key: "openDialog",\n    value: function openDialog(item) {\n      var allItems = items_store.getAllItems();\n      item.items.map(function (act_item, key) {\n        item.items[key][\'item\'] = allItems.find(function (item) {\n          return item.id == act_item.item_id;\n        });\n      });\n      this.setState({\n        showItem: item,\n        openDialog: true\n      });\n    }\n  }, {\n    key: "closeAlert",\n    value: function closeAlert() {\n      this.setState({\n        openMSG: false\n      });\n    }\n  }, {\n    key: "activePromo",\n    value: function activePromo(promo_info, promo_name) {\n      var _this2 = this;\n\n      items_store.setPromo(JSON.stringify(promo_info), promo_name);\n      var res = items_store.checkPromo();\n      setTimeout(function () {\n        if (res[\'st\']) {\n          _this2.setState({\n            openMSG: true,\n            statusMSG: true,\n            textMSG: "Промокод применен"\n          });\n        } else {\n          _this2.setState({\n            openMSG: true,\n            statusMSG: false,\n            textMSG: res[\'text\']\n          });\n        }\n      }, 300);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "Actii mainContainer MuiGrid-spacing-xs-3"\n      }, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Snackbar/* default */.Z, {\n        anchorOrigin: {\n          vertical: \'top\',\n          horizontal: \'center\'\n        },\n        open: this.state.openMSG,\n        autoHideDuration: 3000,\n        onClose: this.closeAlert.bind(this),\n        message: this.state.textMSG,\n        style: {\n          backgroundColor: this.state.statusMSG ? \'green\' : \'#BB0025\',\n          borderRadius: 4\n        }\n      }), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, "\\u0410\\u043A\\u0446\\u0438\\u0438")), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer"\n      }, this.state.is_load === false ? this.state.pre_actii.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          xl: 3,\n          key: key,\n          style: {\n            padding: 12\n          }\n        }, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'100%\',\n            height: 300,\n            backgroundColor: \'#e5e5e5\'\n          }\n        }));\n      }) : this.state.actii.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          xl: 3,\n          key: key\n        }, /*#__PURE__*/react.createElement("picture", null, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-aktii/" + item.img_new + "750х750.webp?" + item.img_new_update,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-aktii/" + item.img_new + "750х750.jpg?" + item.img_new_update,\n          alt: item.promo_title,\n          title: item.promo_title,\n          style: {\n            width: \'100%\'\n          },\n          onClick: _this3.openDialog.bind(_this3, item)\n        })));\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h2"\n      }, this.state.page && this.state.page.page_h ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer dopText",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null, this.state.showItem ? /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        onClose: this.closeDialog.bind(this),\n        "aria-labelledby": "customized-dialog-title",\n        className: "modalActii",\n        open: this.state.openDialog\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        disableTypography: true,\n        style: {\n          margin: 0,\n          padding: 8\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6"\n      }, this.state.showItem.promo_title), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        "aria-label": "close",\n        style: {\n          position: \'absolute\',\n          top: 0,\n          right: 0\n        },\n        onClick: this.closeDialog.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC,\n        style: {\n          fontSize: \'1.8rem\',\n          color: \'#e5e5e5\'\n        }\n      }))), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        className: "modalActiiContent"\n      }, /*#__PURE__*/react.createElement("div", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.showItem.text\n        }\n      })), this.state.showItem.promo.length > 0 ? /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          justifyContent: \'center\',\n          padding: \'15px 0px\'\n        }\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorderOther",\n        onClick: this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434"))) : null) : null);\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: actii_component_get_city(propsData),\n        page: \'akcii\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: actii_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Actii;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/actii/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Check.js\nvar Check = __webpack_require__(1959);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Close.js\nvar Close = __webpack_require__(366);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/TextField/TextField.js + 1 modules\nvar TextField = __webpack_require__(8286);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormGroup/FormGroup.js\nvar FormGroup = __webpack_require__(6562);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js\nvar FormControlLabel = __webpack_require__(553);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormControl/FormControl.js\nvar FormControl = __webpack_require__(4436);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js + 3 modules\nvar Checkbox = __webpack_require__(3258);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js\nvar DialogContentText = __webpack_require__(7212);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Radio/Radio.js + 4 modules\nvar Radio = __webpack_require__(74);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js\nvar RadioGroup = __webpack_require__(2541);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/InputLabel/InputLabel.js\nvar InputLabel = __webpack_require__(6394);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js\nvar MenuItem = __webpack_require__(5639);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Select/Select.js + 4 modules\nvar Select = __webpack_require__(6209);\n;// CONCATENATED MODULE: ./src/components/profile/profile.component.jsx\n\n\n\n\n\n\n\n\n\n\nfunction profile_component_createSuper(Derived) { var hasNativeReflectConstruct = profile_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction profile_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar profile_component_queryString = __webpack_require__(7563);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction profile_component_TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = (0,objectWithoutProperties/* default */.Z)(props, ["children", "value", "index"]);\n\n  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({\n    role: "tabpanel",\n    hidden: value !== index,\n    id: "simple-tabpanel-".concat(index),\n    "aria-labelledby": "simple-tab-".concat(index)\n  }, other), value === index && /*#__PURE__*/react.createElement("div", {\n    style: {\n      width: \'100%\'\n    }\n  }, children));\n}\n\nprofile_component_TabPanel.propTypes = {\n  children: (prop_types_default()).node,\n  index: (prop_types_default()).any.isRequired,\n  value: (prop_types_default()).any.isRequired\n};\n\nfunction profile_component_a11yProps(index) {\n  return {\n    id: "simple-tab-".concat(index),\n    \'aria-controls\': "simple-tabpanel-".concat(index)\n  };\n}\n\nfunction profile_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nfunction profile_component_Ruble(props) {\n  return /*#__PURE__*/react.createElement("svg", {\n    width: props.width ? props.width : "50",\n    height: "20",\n    viewBox: props.viewBox ? props.viewBox : "0 0 1500 200",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, /*#__PURE__*/react.createElement("g", null, /*#__PURE__*/react.createElement("path", {\n    id: "svg_1",\n    d: "m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z"\n  })));\n}\n\nvar Profile = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(Profile, _React$Component);\n\n  var _super = profile_component_createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, Profile);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'profile\');\n\n      if (!items_store.getToken()) {\n        _this.props.history.replace({\n          pathname: \'/\' + _this.state.city_name + \'/\'\n        });\n      }\n\n      Profile.fetchData(\'/\' + _this.state.city_name).then(function (data) {\n        _this.setState({\n          title: data.page.title,\n          description: data.page.description\n        });\n      });\n\n      _this.loadData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeTab", function (event, newValue) {\n      _this.setState({\n        valueTab: newValue\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeM", function (event) {\n      _this.setState({\n        changeM: event.target.value\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeDay", function (event) {\n      _this.setState({\n        changeDay: event.target.value\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeMail", function (event) {\n      _this.setState({\n        userMail: event.target.value\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeCheck", function (event) {\n      var check = event.target.checked;\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'save_profile_spam\',\n          my_spam: check ? 1 : 0,\n          user_id: items_store.getToken()\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          openMSG: true,\n          statusMSG: true,\n          textMSG: "Данные успешно обновлены",\n          spam: check ? 1 : 0\n        });\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeName", function (event) {\n      _this.setState({\n        userName: event.target.value\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "changeAddr", function (event) {\n      _this.setState({\n        typeDel: event.target.value\n      });\n    });\n\n    _this.state = {\n      actii: [],\n      is_load: false,\n      openDialog: false,\n      delOrder: false,\n      errorOpen: false,\n      error: {\n        title: \'\',\n        text: \'\'\n      },\n      title: \'\',\n      description: \'\',\n      page: null,\n      city_name: props.match.params.cityName,\n      typeDel: \'0\',\n      valueTab: 1,\n      info: {},\n      arr_day: [],\n      arr_m: [{\n        name: \'Января\',\n        value: 1\n      }, {\n        name: \'Февраля\',\n        value: 2\n      }, {\n        name: \'Марта\',\n        value: 3\n      }, {\n        name: \'Апреля\',\n        value: 4\n      }, {\n        name: \'Мая\',\n        value: 5\n      }, {\n        name: \'Июня\',\n        value: 6\n      }, {\n        name: \'Июля\',\n        value: 7\n      }, {\n        name: \'Августа\',\n        value: 8\n      }, {\n        name: \'Сентября\',\n        value: 9\n      }, {\n        name: \'Октября\',\n        value: 10\n      }, {\n        name: \'Ноября\',\n        value: 11\n      }, {\n        name: \'Декабря\',\n        value: 12\n      }],\n      radiogroup_options: [{\n        id: \'0\',\n        label: \'Решили отредактировать заказ\',\n        value: 0\n      }, {\n        id: \'1\',\n        label: \'Не устраивает время ожидания\',\n        value: 0\n      }, {\n        id: \'2\',\n        label: \'Изминились планы\',\n        value: 0\n      }, {\n        id: \'3\',\n        label: \'Недостаточно средств\',\n        value: 0\n      }, {\n        id: \'4\',\n        label: \'Другое\',\n        value: 0\n      }],\n      textDel: \'\',\n      changeDay: \'\',\n      changeM: \'\',\n      userMail: \'\',\n      openMSG: false,\n      statusMSG: false,\n      textMSG: \'\',\n      spam: 0,\n      userName: \'\',\n      spiner: false,\n      showOrder: null\n    };\n\n    if (props.location.search.length > 3) {\n      var order_pay = props.location.search;\n      var p1 = order_pay.split(\'&\');\n      var bank = p1[0].split(\'bank=\');\n      bank = bank[1];\n      var order_id = p1[1].split(\'orderId=\');\n      order_id = order_id[1];\n\n      _this.checkPay(bank, order_id);\n    }\n\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(Profile, [{\n    key: "loadData",\n    value: function loadData() {\n      var _this2 = this;\n\n      var arr_day = [];\n\n      for (var i = 1; i <= 31; i++) {\n        arr_day.push(i);\n      }\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'get_user_web\',\n          city_id: this.state.city_name,\n          user_id: items_store.getToken()\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var check_reload = json.orders.my_orders.filter(function (item) {\n          return parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0;\n        });\n\n        _this2.setState({\n          info: json,\n          is_load: true,\n          arr_day: arr_day,\n          userMail: json.user.mail,\n          spam: json.user.spam,\n          userName: json.user.name\n        });\n\n        if (check_reload.length > 0) {\n          setTimeout(function () {\n            _this2.loadData();\n          }, 6000);\n        }\n      })["catch"](function (err) {});\n    }\n  }, {\n    key: "checkPay",\n    value: function checkPay(bank, pay_id) {\n      var _this3 = this;\n\n      var data = {\n        type: \'check_pay_web\',\n        payId: pay_id,\n        bank: bank\n      };\n      axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: profile_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n\n          if (json.repeat) {\n            setTimeout(function () {\n              _this3.checkPay(bank, pay_id);\n            }, 5000);\n          } else {\n            if (!json.is_create) {\n              _this3.setState({\n                spiner: false\n              });\n\n              if (json.st) {\n                _this3.trueOrder(json.order_id, json.point_id);\n              } else {\n                _this3.props.history.push(_this3.props.location.pathname);\n\n                _this3.setState({\n                  error: {\n                    title: \'Ошибка оплаты\',\n                    text: json.pay.actionCodeDescription\n                  },\n                  errorOpen: true\n                });\n              }\n            }\n          }\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: "trueOrder",\n    value: function trueOrder(order_id, point_id) {\n      var _this4 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'trueOrder\',\n          city_id: this.state.city_name,\n          user_id: items_store.getToken(),\n          order_id: order_id,\n          point_id: point_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json[\'st\'] == false) {\n          _this4.setState({\n            error: {\n              title: \'При подтверждении оплаты произошла ошибка\',\n              text: json.text_err\n            },\n            errorOpen: true\n          });\n        } else {\n          items_store.setItems([]);\n          var data = {\n            orderType: \'0\',\n            orderAddr: \'\',\n            orderPic: 0,\n            orderComment: \'\',\n            orderTimes: \'1\',\n            orderPredDay: \'\',\n            orderPredTime: \'\',\n            orderPay: \'\',\n            orderSdacha: \'\'\n          };\n          items_store.saveCartData(data);\n\n          _this4.loadData();\n        }\n      });\n    }\n  }, {\n    key: "closeDialog",\n    value: function closeDialog() {\n      this.setState({\n        showItem: null,\n        openDialog: false\n      });\n    }\n  }, {\n    key: "openDialog",\n    value: function openDialog(item) {\n      this.setState({\n        showItem: item,\n        openDialog: true\n      });\n    }\n  }, {\n    key: "closeAlert",\n    value: function closeAlert() {\n      this.setState({\n        openMSG: false\n      });\n    }\n  }, {\n    key: "saveMail",\n    value: function saveMail() {\n      var _this5 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'save_profile_mail_web\',\n          my_mail: this.state.userMail,\n          user_id: items_store.getToken()\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        setTimeout(function () {\n          if (json[\'st\']) {\n            _this5.setState({\n              openMSG: true,\n              statusMSG: true,\n              textMSG: "Данные успешно обновлены"\n            });\n          } else {\n            _this5.setState({\n              openMSG: true,\n              statusMSG: false,\n              textMSG: json[\'text\']\n            });\n          }\n        }, 300);\n      });\n    }\n  }, {\n    key: "saveDay",\n    value: function saveDay() {\n      var _this6 = this;\n\n      var day = this.state.changeDay,\n          mo = this.state.changeM;\n\n      if (day != \'\' & mo != \'\') {\n        var nameM = \'\';\n        this.state.arr_m.map(function (item, key) {\n          if (parseInt(item.value) == parseInt(mo)) {\n            nameM = item.name;\n          }\n        });\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: profile_component_queryString.stringify({\n            type: \'save_profile_date\',\n            my_date: day + \' \' + nameM,\n            user_id: items_store.getToken()\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json[\'st\']) {\n            fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n              method: \'POST\',\n              headers: {\n                \'Content-Type\': \'application/x-www-form-urlencoded\'\n              },\n              body: profile_component_queryString.stringify({\n                type: \'get_user_web\',\n                city_id: _this6.state.city_name,\n                user_id: items_store.getToken()\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              _this6.setState({\n                info: json\n              });\n            })["catch"](function (err) {});\n          }\n\n          setTimeout(function () {\n            if (json[\'st\']) {\n              _this6.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: "Данные успешно обновлены"\n              });\n            } else {\n              _this6.setState({\n                openMSG: true,\n                statusMSG: false,\n                textMSG: json[\'text\']\n              });\n            }\n          }, 300);\n        });\n      }\n    }\n  }, {\n    key: "activePromo",\n    value: function activePromo(promo_info, promo_name) {\n      var _this7 = this;\n\n      items_store.setPromo(JSON.stringify(promo_info), promo_name);\n      var res = items_store.checkPromo();\n      setTimeout(function () {\n        if (res[\'st\']) {\n          _this7.setState({\n            openMSG: true,\n            statusMSG: true,\n            textMSG: "Промокод применен"\n          });\n        } else {\n          _this7.setState({\n            openMSG: true,\n            statusMSG: false,\n            textMSG: res[\'text\']\n          });\n        }\n      }, 300);\n    }\n  }, {\n    key: "saveName",\n    value: function saveName() {\n      var _this8 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'save_profile_name\',\n          my_name: this.state.userName,\n          user_id: items_store.getToken()\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        setTimeout(function () {\n          if (json[\'st\']) {\n            _this8.setState({\n              openMSG: true,\n              statusMSG: true,\n              textMSG: "Данные успешно обновлены"\n            });\n          } else {\n            _this8.setState({\n              openMSG: true,\n              statusMSG: false,\n              textMSG: json[\'text\']\n            });\n          }\n        }, 300);\n      });\n    }\n  }, {\n    key: "getOrder",\n    value: function getOrder(order_id, point_id) {\n      var _this9 = this;\n\n      this.setState({\n        spiner: true\n      });\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: profile_component_queryString.stringify({\n          type: \'get_order\',\n          order_id: order_id,\n          point_id: point_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n        setTimeout(function () {\n          _this9.setState({\n            showOrder: json,\n            openDialog: true,\n            spiner: false\n          });\n        }, 1000);\n      })["catch"](function (err) {});\n    }\n  }, {\n    key: "closeOrder",\n    value: function closeOrder() {\n      this.setState({\n        delOrder: true,\n        typeDel: \'0\',\n        textDel: \'\'\n      });\n    }\n  }, {\n    key: "closeOrderTrue",\n    value: function closeOrderTrue() {\n      var _this10 = this;\n\n      var deltype = this.state.radiogroup_options.find(function (item) {\n        return item.id == _this10.state.typeDel;\n      });\n\n      if (deltype.id == \'4\') {\n        deltype.label = this.state.textDel;\n      }\n\n      if (confirm("Отменить заказ #" + this.state.showOrder.order.order_id)) {\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: profile_component_queryString.stringify({\n            type: \'close_order\',\n            user_id: items_store.getToken(),\n            order_id: this.state.showOrder.order.order_id,\n            point_id: this.state.showOrder.order.point_id,\n            ans: deltype.label\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          console.log(json);\n          setTimeout(function () {\n            if (json[\'st\']) {\n              _this10.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: "Данные успешно обновлены",\n                delOrder: false,\n                openDialog: false,\n                showItem: null\n              });\n\n              _this10.loadData();\n            } else {\n              _this10.setState({\n                openMSG: true,\n                statusMSG: false,\n                textMSG: json[\'text\']\n              });\n            }\n          }, 300);\n        });\n      }\n    }\n  }, {\n    key: "repeatOrder",\n    value: function repeatOrder() {\n      var _this11 = this;\n\n      var my_cart = [];\n      var all_items = items_store.getAllItems();\n      var item_info = null;\n      this.state.showOrder.order_items.map(function (item) {\n        item_info = all_items.find(function (item_) {\n          return item_.id == item.item_id;\n        });\n\n        if (item_info) {\n          var price = parseInt(item_info.price),\n              all_price = parseInt(item.count) * parseInt(item_info.price);\n          my_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: price,\n            all_price: all_price\n          });\n        }\n      });\n      var data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: \'\',\n        orderTimes: \'1\',\n        orderPredDay: \'\',\n        orderPredTime: \'\',\n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? \'cash\' : \'in\',\n        orderSdacha: \'\'\n      };\n      items_store.saveCartData(data);\n\n      if (this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != \'\') {\n        items_store.setPromo(this.state.showOrder.promo_info, this.state.showOrder.order.promo_name);\n      }\n\n      items_store.setItems(my_cart);\n      setTimeout(function () {\n        window.location.pathname = \'/\' + _this11.state.city_name + \'/cart\';\n      }, 300);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this12 = this;\n\n      return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "Profile mainContainer MuiGrid-spacing-xs-3"\n      }, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Backdrop/* default */.Z, {\n        open: this.state.spiner,\n        style: {\n          zIndex: 99,\n          color: \'#fff\'\n        }\n      }, /*#__PURE__*/react.createElement(CircularProgress/* default */.Z, {\n        color: "inherit"\n      })), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.errorOpen,\n        onClose: function onClose() {\n          return _this12.setState({\n            errorOpen: false\n          });\n        },\n        className: "DialogErr"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, this.state.error.title), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this12.setState({\n            errorOpen: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement(DialogContentText/* default */.Z, {\n        className: "DialogErrText"\n      }, this.state.error.text)), /*#__PURE__*/react.createElement(DialogActions/* default */.Z, null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: function onClick() {\n          return _this12.setState({\n            errorOpen: false\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u0425\\u043E\\u0440\\u043E\\u0448\\u043E")))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, "\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442")), /*#__PURE__*/react.createElement(Snackbar/* default */.Z, {\n        anchorOrigin: {\n          vertical: \'top\',\n          horizontal: \'center\'\n        },\n        open: this.state.openMSG,\n        autoHideDuration: 3000,\n        onClose: this.closeAlert.bind(this),\n        message: this.state.textMSG,\n        style: {\n          backgroundColor: this.state.statusMSG ? \'green\' : \'#BB0025\',\n          borderRadius: 4\n        },\n        action: /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n          size: "small",\n          "aria-label": "close",\n          color: "inherit",\n          onClick: this.closeAlert.bind(this)\n        }, /*#__PURE__*/react.createElement(Close/* default */.Z, {\n          fontSize: "small"\n        })))\n      }), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        style: {\n          paddingTop: 0\n        }\n      }, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "static",\n        style: {\n          backgroundColor: \'#fff\',\n          color: \'#000\',\n          zIndex: 0\n        },\n        elevation: 0\n      }, /*#__PURE__*/react.createElement(Tabs/* default */.Z, {\n        value: this.state.valueTab,\n        onChange: this.changeTab.bind(this),\n        "aria-label": "simple tabs example",\n        style: {\n          justifyContent: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434\\u044B"\n      }, profile_component_a11yProps(0), {\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B"\n      }, profile_component_a11yProps(1), {\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435"\n      }, profile_component_a11yProps(2), {\n        disableRipple: true\n      })))), /*#__PURE__*/react.createElement(profile_component_TabPanel, {\n        value: this.state.valueTab,\n        index: 0,\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          padding: 12\n        }\n      }, this.state.info.promo ? /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        mdDown: true\n      }, /*#__PURE__*/react.createElement("table", {\n        style: {\n          width: \'100%\'\n        },\n        className: "TablePromo"\n      }, /*#__PURE__*/react.createElement("thead", null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434 \\u0434\\u0430\\u0435\\u0442:")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u043E")))), /*#__PURE__*/react.createElement("tbody", null, this.state.info.promo.promo.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          onClick: _this12.activePromo.bind(_this12, item.info, item.promo_name)\n        }, item.promo_name)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.promo_text)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.date_end)));\n      })))) : null, this.state.info.promo ? /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement("table", {\n        style: {\n          width: \'100%\'\n        },\n        className: "TablePromoMobile"\n      }, /*#__PURE__*/react.createElement("tbody", null, this.state.info.promo.promo.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.promo_name)), /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'100%\',\n            paddingTop: 10\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u043E: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.date_end)), /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'100%\',\n            paddingTop: 10,\n            textAlign: \'justify\'\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434 \\u0434\\u0430\\u0435\\u0442: "), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.promo_text)), /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'100%\',\n            paddingTop: 10\n          }\n        }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorder",\n          style: {\n            width: \'100%\'\n          },\n          onClick: _this12.activePromo.bind(_this12, item.info, item.promo_name)\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain CardInCardItem",\n          style: {\n            width: \'100%\'\n          }\n        }, "\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u044B\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434")))));\n      })))) : null)), /*#__PURE__*/react.createElement(profile_component_TabPanel, {\n        value: this.state.valueTab,\n        index: 1,\n        style: {\n          width: \'100%\'\n        }\n      }, this.state.info.orders ? /*#__PURE__*/react.createElement("div", {\n        className: "TableOrders"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "thead"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          flex: 2\n        }\n      }, "\\u2116"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          flex: 3\n        }\n      }, "\\u0414\\u0430\\u0442\\u0430"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          flex: 1\n        }\n      }, "\\u0421\\u0443\\u043C\\u043C\\u0430"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          flex: 1\n        }\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tbody"\n      }, this.state.info.orders.my_orders.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          className: parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1 ? \'\' : \'active\',\n          onClick: _this12.getOrder.bind(_this12, item.order_id, item.point_id)\n        }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          style: {\n            flex: 2\n          }\n        }, item.order_id), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          style: {\n            flex: 3\n          }\n        }, item.date_time_new), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "CardPriceItem",\n          style: {\n            flex: 1\n          }\n        }, item.sum, " ", /*#__PURE__*/react.createElement(profile_component_Ruble, {\n          width: "20",\n          viewBox: "0 0 700 300"\n        })), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          style: {\n            flex: 1\n          }\n        }, parseInt(item.is_delete) == 1 ? /*#__PURE__*/react.createElement(Close/* default */.Z, {\n          style: {\n            position: \'relative\',\n            top: 3\n          }\n        }) : parseInt(item.status_order) == 6 ? /*#__PURE__*/react.createElement(Check/* default */.Z, {\n          style: {\n            position: \'relative\',\n            top: 3\n          }\n        }) : null)), parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1 ? null : /*#__PURE__*/react.createElement("div", {\n          className: "boxSteps"\n        }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n          className: parseInt(item.steps[0][\'active\']) == 0 || parseInt(item.steps[0][\'active\']) == 2 ? \'\' : \'active\'\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.steps[0][\'name\'])), /*#__PURE__*/react.createElement("div", {\n          className: parseInt(item.steps[1][\'active\']) == 0 || parseInt(item.steps[1][\'active\']) == 2 ? \'\' : \'active\'\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.steps[1][\'name\'])), /*#__PURE__*/react.createElement("div", {\n          className: parseInt(item.steps[2][\'active\']) == 0 || parseInt(item.steps[2][\'active\']) == 2 ? \'\' : \'active\'\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.steps[2][\'name\'])), /*#__PURE__*/react.createElement("div", {\n          className: parseInt(item.steps[3][\'active\']) == 0 || parseInt(item.steps[3][\'active\']) == 2 ? \'\' : \'active\'\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.steps[3][\'name\']))), item.time_to_client == 0 ? null : /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, "\\u0417\\u0430\\u043A\\u0430\\u0437 ", parseInt(item.type_order) == 1 ? \'привезут через: \' : \'будет готов через: \', item.time_to_client))));\n      }))) : null), /*#__PURE__*/react.createElement(profile_component_TabPanel, {\n        value: this.state.valueTab,\n        index: 2,\n        style: {\n          width: \'100%\'\n        }\n      }, this.state.info.user ? /*#__PURE__*/react.createElement("div", {\n        className: "TableInfo"\n      }, /*#__PURE__*/react.createElement("form", {\n        noValidate: true,\n        autoComplete: "off"\n      }, /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u0418\\u043C\\u044F",\n        value: this.state.userName,\n        className: "input",\n        onChange: this.changeName.bind(this),\n        onBlur: this.saveName.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        InputProps: {\n          readOnly: true\n        },\n        label: "\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430",\n        value: this.state.info.user.login,\n        className: "input"\n      })), /*#__PURE__*/react.createElement("form", {\n        noValidate: true,\n        autoComplete: "off"\n      }, this.state.info.user.date_bir != \'\' ? /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F",\n        className: "input",\n        InputProps: {\n          readOnly: true\n        },\n        value: this.state.info.user.date_bir\n      }) : /*#__PURE__*/react.createElement("div", {\n        className: "input"\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        className: "otherLabel"\n      }, "\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F"), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        className: "ChangeDay"\n      }, /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        labelId: "demo-simple-select-label",\n        id: "demo-simple-select",\n        displayEmpty: true,\n        value: this.state.changeDay,\n        onChange: this.changeDay.bind(this),\n        onBlur: this.saveDay.bind(this)\n      }, /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n        className: "menuItem",\n        value: ""\n      }, "\\u0414\\u0435\\u043D\\u044C"), this.state.arr_day.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          className: "menuItem",\n          value: item\n        }, item);\n      }))), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        className: "ChangeM"\n      }, /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        labelId: "demo-simple-select-label",\n        id: "demo-simple-select",\n        displayEmpty: true,\n        value: this.state.changeM,\n        onChange: this.changeM.bind(this),\n        onBlur: this.saveDay.bind(this)\n      }, /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n        className: "menuItem",\n        value: ""\n      }, "\\u041C\\u0435\\u0441\\u044F\\u0446"), this.state.arr_m.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          className: "menuItem",\n          value: item.value\n        }, item.name);\n      })))), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u041F\\u043E\\u0447\\u0442\\u0430",\n        className: "input",\n        value: this.state.userMail,\n        onChange: this.changeMail.bind(this),\n        onBlur: this.saveMail.bind(this)\n      })), /*#__PURE__*/react.createElement(FormGroup/* default */.Z, {\n        row: true,\n        className: "input checkbox"\n      }, /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n        onChange: this.changeCheck.bind(this),\n        control: /*#__PURE__*/react.createElement(Checkbox/* default */.Z, {\n          checked: parseInt(this.state.spam) == 1 ? true : false,\n          name: "checkedC"\n        }),\n        label: "\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0441 \\u0430\\u043A\\u0446\\u0438\\u044F\\u043C\\u0438"\n      }))) : null)), this.state.showOrder ? /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        onClose: this.closeDialog.bind(this),\n        "aria-labelledby": "customized-dialog-title",\n        className: "showOrderDialog",\n        open: this.state.openDialog,\n        fullWidth: true\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        disableTypography: true,\n        style: {\n          margin: 0,\n          padding: 8\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6"\n      }, "\\u0417\\u0430\\u043A\\u0430\\u0437 ", this.state.showOrder.order.order_id), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        "aria-label": "close",\n        style: {\n          position: \'absolute\',\n          top: 0,\n          right: 0,\n          color: \'#000\'\n        },\n        onClick: this.closeDialog.bind(this)\n      }, /*#__PURE__*/react.createElement(Close/* default */.Z, null))), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        className: "showOrderDialogContent"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6",\n        component: "span"\n      }, this.state.showOrder.order.type_order, ": ", this.state.showOrder.order.type_order_addr_new), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6",\n        component: "span"\n      }, this.state.showOrder.order.time_order_name, ": ", this.state.showOrder.order.time_order), parseInt(this.state.showOrder.order.is_preorder) == 1 ? null : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6",\n        component: "span"\n      }, this.state.showOrder.order.text_time, this.state.showOrder.order.time_to_client), this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434: ", this.state.showOrder.order.promo_name), this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h6",\n        component: "span",\n        className: "noSpace"\n      }, this.state.showOrder.order.promo_text), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "CardPriceItem"\n      }, "\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0437\\u0430: ", this.state.showOrder.order.sum_order, " ", /*#__PURE__*/react.createElement(profile_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 700 300"\n      })), /*#__PURE__*/react.createElement("table", {\n        className: "tableOrderCheck"\n      }, /*#__PURE__*/react.createElement("tbody", null, this.state.showOrder.order_items.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.name)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.count)));\n      })))), parseInt(this.state.showOrder.order.is_delete) == 0 && parseInt(this.state.showOrder.order.status_order) !== 6 ? /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          justifyContent: \'flex-end\',\n          padding: \'15px 0px\'\n        }\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorderOther",\n        style: {\n          marginRight: 24\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem",\n        onClick: this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id)\n      }, "\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437"))) : null, parseInt(this.state.showOrder.order.is_delete) == 1 || parseInt(this.state.showOrder.order.status_order) == 6 ? /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          justifyContent: \'flex-end\',\n          padding: \'15px 0px\'\n        }\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorderOther",\n        style: {\n          marginRight: 24\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem",\n        onClick: this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id)\n      }, "\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437"))) : null) : null, /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.delOrder,\n        onClose: function onClose() {\n          _this12.setState({\n            delOrder: false\n          });\n        },\n        "aria-labelledby": "form-dialog-title"\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        id: "form-dialog-title"\n      }, "\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430"), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement(DialogContentText/* default */.Z, null, "\\u041D\\u0430\\u043C \\u043E\\u0447\\u0435\\u043D\\u044C \\u0436\\u0430\\u043B\\u044C, \\u0447\\u0442\\u043E \\u0432\\u044B \\u043F\\u0440\\u0438\\u043D\\u044F\\u043B\\u0438 \\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437. \\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E, \\u043C\\u044B \\u0441\\u0434\\u0435\\u043B\\u0430\\u043B\\u0438 \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A, \\u043F\\u043E\\u043C\\u043E\\u0433\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043C \\u0441\\u0442\\u0430\\u0442\\u044C \\u043B\\u0443\\u0447\\u0448\\u0435, \\u043F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u0435\\u0441\\u044C \\u043F\\u0440\\u0438\\u0447\\u0438\\u043D\\u043E\\u0439 \\u043E\\u0442\\u043A\\u0430\\u0437\\u0430:"), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        "aria-label": "close",\n        style: {\n          position: \'absolute\',\n          top: 0,\n          right: 0,\n          color: \'#000\'\n        },\n        onClick: function onClick() {\n          _this12.setState({\n            delOrder: false\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Close/* default */.Z, null)), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        component: "fieldset"\n      }, /*#__PURE__*/react.createElement(RadioGroup/* default */.Z, {\n        name: "typeDel",\n        value: this.state.typeDel,\n        onChange: this.changeAddr\n      }, this.state.radiogroup_options.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n          key: key,\n          value: item.id,\n          control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n          label: item.label\n        });\n      }))), /*#__PURE__*/react.createElement(TextField/* default */.Z //autoFocus\n      , {\n        onFocus: function onFocus() {\n          _this12.setState({\n            typeDel: \'4\'\n          });\n        },\n        value: this.state.textDel,\n        onChange: function onChange(event) {\n          _this12.setState({\n            textDel: event.target.value\n          });\n        },\n        margin: "dense",\n        id: "name",\n        label: "\\u041F\\u0440\\u0438\\u0447\\u0438\\u043D\\u0430 \\u043E\\u0442\\u043C\\u0435\\u043D\\u044B",\n        type: "text",\n        fullWidth: true\n      })), /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          paddingBottom: 24\n        }\n      }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        xsDown: true\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorderOther",\n        style: {\n          marginRight: 24\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem",\n        onClick: function onClick() {\n          _this12.setState({\n            delOrder: false\n          });\n        }\n      }, "\\u041A \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443"))), /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorderOther",\n        style: {\n          marginRight: 24\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem",\n        onClick: this.closeOrderTrue.bind(this)\n      }, "\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437")))));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: profile_component_get_city(propsData),\n        page: \'profile\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: profile_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Profile;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/profile/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Paper/Paper.js\nvar Paper = __webpack_require__(9895);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/InputBase/InputBase.js + 1 modules\nvar InputBase = __webpack_require__(4741);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Divider/Divider.js\nvar Divider = __webpack_require__(5517);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/CheckOutlined.js\nvar CheckOutlined = __webpack_require__(5037);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js + 1 modules\nvar OutlinedInput = __webpack_require__(6718);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Avatar/Avatar.js + 1 modules\nvar Avatar = __webpack_require__(3901);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/List/List.js\nvar List = __webpack_require__(2822);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ListItem/ListItem.js\nvar ListItem = __webpack_require__(998);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js\nvar ListItemAvatar = __webpack_require__(6353);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js\nvar ListItemText = __webpack_require__(5757);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/FormLabel/FormLabel.js\nvar FormLabel = __webpack_require__(6019);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Input/Input.js\nvar Input = __webpack_require__(8799);\n// EXTERNAL MODULE: ./node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js + 8 modules\nvar Autocomplete = __webpack_require__(5007);\n;// CONCATENATED MODULE: ./src/components/cart/cart.component.jsx\n\n\n\n\n\n\n\n\n\n\nfunction cart_component_createSuper(Derived) { var hasNativeReflectConstruct = cart_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction cart_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cart_component_queryString = __webpack_require__(7563);\n\n\n\nfunction cart_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nfunction cart_component_Ruble(props) {\n  return /*#__PURE__*/react.createElement("svg", {\n    width: props.width ? props.width : 50,\n    height: "20",\n    viewBox: props.viewBox ? props.viewBox : "0 0 1400 200",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, /*#__PURE__*/react.createElement("g", null, /*#__PURE__*/react.createElement("path", {\n    id: "svg_1",\n    d: "m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z"\n  })));\n}\n\nfunction cart_component_TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = (0,objectWithoutProperties/* default */.Z)(props, ["children", "value", "index"]);\n\n  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({\n    role: "tabpanel",\n    hidden: value !== index,\n    id: "simple-tabpanel-".concat(index),\n    "aria-labelledby": "simple-tab-".concat(index)\n  }, other), value === index && /*#__PURE__*/react.createElement("div", null, children));\n}\n\ncart_component_TabPanel.propTypes = {\n  children: (prop_types_default()).node,\n  index: (prop_types_default()).any.isRequired,\n  value: (prop_types_default()).any.isRequired\n};\n\nfunction cart_component_a11yProps(index) {\n  return {\n    id: "simple-tab-".concat(index),\n    \'aria-controls\': "simple-tabpanel-".concat(index)\n  };\n}\n\nvar CartItem = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(CartItem, _React$Component);\n\n  var _super = cart_component_createSuper(CartItem);\n\n  function CartItem(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, CartItem);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      item: _this.props.item,\n      type: _this.props.type,\n      count: 0,\n      onePrice: 0,\n      new_onePrice: -1,\n      allPrice: 0\n    };\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(CartItem, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      var cartItems = items_store.getItems();\n      var promo_cartItems = items_store.getItemsPromo();\n      var this_item = cartItems.find(function (item) {\n        return item.item_id == _this2.state.item.id;\n      });\n\n      if (this_item) {\n        this.setState({\n          count: this_item.count,\n          onePrice: this_item.one_price,\n          allPrice: this_item.all_price\n        });\n      }\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this2._isMounted === true) {\n          var new_cartItems = items_store.getItems();\n\n          var _promo_cartItems = items_store.getItemsPromo();\n\n          if (_promo_cartItems && _promo_cartItems.length > 0) {\n            var _this_item2 = _promo_cartItems.find(function (item) {\n              return item.item_id == _this2.state.item.id;\n            });\n\n            if (_this_item2) {\n              _this2.setState({\n                count: _this_item2.count,\n                onePrice: _this_item2.one_price,\n                allPrice: _this_item2.all_price\n              });\n            }\n          }\n\n          var _this_item = new_cartItems.find(function (item) {\n            return item.item_id == _this2.state.item.id;\n          });\n\n          if (_this2.state.type != \'promo\') {\n            if (_this_item) {\n              _this2.setState({\n                count: _this_item.count,\n                onePrice: _this_item.one_price,\n                allPrice: _this_item.all_price,\n                new_onePrice: _this_item.new_one_price ? _this_item.new_one_price : -1\n              });\n            } else {\n              _this2.setState({\n                count: 0,\n                onePrice: 0,\n                allPrice: 0,\n                new_onePrice: -1\n              });\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "add",\n    value: function add(item_id) {\n      items_store.AddItem(item_id);\n    }\n  }, {\n    key: "minus",\n    value: function minus(item_id) {\n      items_store.MinusItem(item_id);\n    }\n  }, {\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.count !== nextState.count || this.state.onePrice !== nextState.onePrice || this.state.allPrice !== nextState.allPrice || this.state.item.name !== nextProps.item.name;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7) {\n        return /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", {\n          style: {\n            display: \'flex\',\n            flexDirection: \'row\',\n            alignItems: \'center\',\n            position: \'relative\'\n          }\n        }, /*#__PURE__*/react.createElement("picture", null, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img + "300х200.webp?" + this.state.item.imgUpdate,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img + "300х200.jpg?" + this.state.item.imgUpdate,\n          alt: this.state.item.name,\n          title: this.state.item.name\n        })), this.state.type == \'promo\' ? /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faGift */.Cly,\n          className: "promoIcon"\n        }) : null, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "nameItem"\n        }, this.state.item.name), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "descItem"\n        }, this.state.item.desc))), /*#__PURE__*/react.createElement("td", null, this.state.type != \'promo\' ? /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "count"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.minus.bind(this, this.state.item.id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          component: "span",\n          className: "CardCountItem"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.add.bind(this, this.state.item.id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        }))) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "count promo"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          component: "span",\n          className: "CardCountItem"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })))), /*#__PURE__*/react.createElement("td", null, this.state.new_onePrice != -1 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          gutterBottom: true,\n          variant: "h5",\n          component: "span",\n          className: "namePriceOld"\n        }, parseInt(this.state.count) * parseInt(this.state.onePrice)) : null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          gutterBottom: true,\n          variant: "h5",\n          component: "span",\n          className: "namePrice"\n        }, this.state.allPrice, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          width: "20",\n          viewBox: "0 20 500 200"\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return CartItem;\n}(react.Component);\n\nvar CartItemMobile = /*#__PURE__*/function (_React$Component2) {\n  (0,inherits/* default */.Z)(CartItemMobile, _React$Component2);\n\n  var _super2 = cart_component_createSuper(CartItemMobile);\n\n  function CartItemMobile(props) {\n    var _this3;\n\n    (0,classCallCheck/* default */.Z)(this, CartItemMobile);\n\n    _this3 = _super2.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this3), "_isMounted", false);\n\n    _this3.state = {\n      item: _this3.props.item,\n      type: _this3.props.type,\n      count: 0,\n      onePrice: 0,\n      allPrice: 0,\n      new_onePrice: -1\n    };\n    return _this3;\n  }\n\n  (0,createClass/* default */.Z)(CartItemMobile, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this._isMounted = true;\n      var cartItems = items_store.getItems();\n      var this_item = cartItems.find(function (item) {\n        return item.item_id == _this4.state.item.id;\n      });\n\n      if (this_item) {\n        this.setState({\n          count: this_item.count,\n          onePrice: this_item.one_price,\n          allPrice: this_item.all_price\n        });\n      }\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this4._isMounted === true) {\n          var new_cartItems = items_store.getItems();\n          var promo_cartItems = items_store.getItemsPromo();\n\n          if (promo_cartItems && promo_cartItems.length > 0) {\n            var _this_item4 = promo_cartItems.find(function (item) {\n              return item.item_id == _this4.state.item.id;\n            });\n\n            if (_this_item4) {\n              _this4.setState({\n                count: _this_item4.count,\n                onePrice: _this_item4.one_price,\n                allPrice: _this_item4.all_price\n              });\n            }\n          }\n\n          var _this_item3 = new_cartItems.find(function (item) {\n            return item.item_id == _this4.state.item.id;\n          });\n\n          if (_this4.state.type != \'promo\') {\n            if (_this_item3) {\n              _this4.setState({\n                count: _this_item3.count,\n                onePrice: _this_item3.one_price,\n                allPrice: _this_item3.all_price,\n                new_onePrice: _this_item3.new_one_price ? _this_item3.new_one_price : -1\n              });\n            } else {\n              _this4.setState({\n                count: 0,\n                onePrice: 0,\n                allPrice: 0,\n                new_onePrice: -1\n              });\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "add",\n    value: function add(item_id) {\n      items_store.AddItem(item_id);\n    }\n  }, {\n    key: "minus",\n    value: function minus(item_id) {\n      items_store.MinusItem(item_id);\n    }\n  }, {\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.count !== nextState.count || this.state.onePrice !== nextState.onePrice || this.state.allPrice !== nextState.allPrice || this.state.item.name !== nextProps.item.name;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.state.count > 0 || parseInt(this.state.item.cat_id) == 7) {\n        return /*#__PURE__*/react.createElement("div", {\n          className: "boxItem"\n        }, /*#__PURE__*/react.createElement("picture", {\n          style: {\n            width: \'40%\'\n          }\n        }, /*#__PURE__*/react.createElement("source", {\n          srcSet: "https://storage.yandexcloud.net/site-img/" + this.state.item.img + "300х200.webp?" + this.state.item.imgUpdate,\n          type: "image/webp"\n        }), /*#__PURE__*/react.createElement("img", {\n          src: "https://storage.yandexcloud.net/site-img/" + this.state.item.img + "300х200.jpg?" + this.state.item.imgUpdate,\n          alt: this.state.item.name,\n          title: this.state.item.name\n        })), this.state.type == \'promo\' ? /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faGift */.Cly,\n          className: "promoIcon"\n        }) : null, /*#__PURE__*/react.createElement("div", {\n          style: {\n            width: \'60%\'\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, this.state.item.name), /*#__PURE__*/react.createElement("div", null, this.state.type != \'promo\' ? /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "count"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.minus.bind(this, this.state.item.id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          component: "span",\n          className: "CardCountItem"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: this.add.bind(this, this.state.item.id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        }))) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "count promo"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          component: "span",\n          className: "CardCountItem"\n        }, this.state.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        }))), this.state.new_onePrice != -1 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          gutterBottom: true,\n          variant: "h5",\n          component: "span",\n          className: "namePriceOld"\n        }, parseInt(this.state.count) * parseInt(this.state.onePrice)) : null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "namePrice"\n        }, this.state.allPrice, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          width: "20",\n          viewBox: "10 0 600 200"\n        })))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return CartItemMobile;\n}(react.Component);\n\nvar Cart = /*#__PURE__*/function (_React$Component3) {\n  (0,inherits/* default */.Z)(Cart, _React$Component3);\n\n  var _super3 = cart_component_createSuper(Cart);\n\n  function Cart(props) {\n    var _this5;\n\n    (0,classCallCheck/* default */.Z)(this, Cart);\n\n    _this5 = _super3.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "_isMounted", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "clickOrderStart", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "startOrderInterval", 90);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "startOrderIntervalTimer", null);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "componentDidMount", function () {\n      _this5._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'cart\');\n\n      if (!items_store.getToken()) {\n        _this5.props.history.push(\'/\' + _this5.state.city_name + \'/\');\n      }\n\n      _this5.loadData();\n\n      Cart.fetchData(\'/\' + _this5.state.city_name).then(function (data) {\n        _this5.setState({\n          title: data.page.title,\n          description: data.page.description\n        });\n      });\n      var cartItems = items_store.getItems();\n      var allItems = items_store.getAllItems();\n      var promoItems = items_store.getItemsPromo();\n      var cartItems_new = [];\n\n      if (cartItems.length > 0 && allItems.length > 0) {\n        cartItems.map(function (item) {\n          var thisitem = allItems.filter(function (item_) {\n            return item_.id == item.item_id;\n          })[0];\n\n          if (thisitem) {\n            cartItems_new.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: item.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              allPrice: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update\n            });\n          }\n        });\n        var main = cartItems_new.filter(function (item_) {\n          return parseInt(item_.cat_id) !== 7;\n        });\n        var dop = cartItems_new.filter(function (item_) {\n          return parseInt(item_.cat_id) == 7;\n        });\n        var need_dop = items_store.check_need_dops();\n\n        _this5.setState({\n          cartItems_main: main,\n          cartItems_dop: dop,\n          cartItems_need_dop: need_dop,\n          sumDiv: items_store.getSumDiv(),\n          allPrice: items_store.getAllPrice()\n        });\n      }\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this5._isMounted === true) {\n          var _cartItems = items_store.getItems();\n\n          var _allItems = items_store.getAllItems();\n\n          var _need_dop = items_store.check_need_dops();\n\n          var _promoItems = items_store.getItemsPromo();\n\n          var _cartItems_new = [];\n          var cartPromoItems = [];\n\n          _cartItems.map(function (item) {\n            var thisitem = _allItems.find(function (item_) {\n              return item_.id == item.item_id;\n            });\n\n            if (thisitem) {\n              _cartItems_new.push({\n                id: item.item_id,\n                cat_id: thisitem.cat_id,\n                name: item.name,\n                desc: thisitem.tmp_desc,\n                count: item.count,\n                allPrice: item.all_price,\n                img: thisitem.img_new,\n                imgUpdate: thisitem.img_new_update\n              });\n            }\n          });\n\n          var _main = _cartItems_new.filter(function (item_) {\n            return parseInt(item_.cat_id) !== 7;\n          });\n\n          var _dop = _cartItems_new.filter(function (item_) {\n            return parseInt(item_.cat_id) == 7;\n          });\n\n          var dop_new = [];\n\n          _need_dop.map(function (item) {\n            var cart_item = _cartItems_new.find(function (item_) {\n              return parseInt(item_.id) == parseInt(item.id);\n            });\n\n            var thisitem = _allItems.find(function (item_) {\n              return parseInt(item_.id) == parseInt(item.id);\n            });\n\n            if (!cart_item) {\n              dop_new.push({\n                id: item.id,\n                cat_id: item.cat_id,\n                name: item.name,\n                desc: item.tmp_desc,\n                count: 0,\n                allPrice: 0,\n                img: thisitem.img_new,\n                imgUpdate: thisitem.img_new_update\n              });\n            } else {\n              dop_new.push({\n                id: item.id,\n                cat_id: item.cat_id,\n                name: item.name,\n                desc: item.tmp_desc,\n                count: cart_item.count,\n                allPrice: cart_item.allPrice,\n                img: thisitem.img_new,\n                imgUpdate: thisitem.img_new_update\n              });\n            }\n          });\n\n          _promoItems.map(function (item) {\n            var thisitem = _allItems.find(function (item_) {\n              return item_.id == item.item_id;\n            });\n\n            if (thisitem) {\n              cartPromoItems.push({\n                id: item.item_id,\n                cat_id: thisitem.cat_id,\n                name: thisitem.name,\n                desc: thisitem.tmp_desc,\n                count: item.count,\n                allPrice: item.all_price,\n                img: thisitem.img_new,\n                imgUpdate: thisitem.img_new_update\n              });\n            }\n          });\n\n          _this5.setState({\n            cartItems_dop: []\n          });\n\n          _this5.setState({\n            cartItems_dop: dop_new\n          });\n\n          _this5.setState({\n            cartItems_main: _main,\n            cartItems_need_dop: _need_dop,\n            cartItems_promo: cartPromoItems,\n            sumDiv: items_store.getSumDiv(),\n            allPrice: items_store.getAllPrice()\n          });\n        }\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changeTab", function (event, newValue) {\n      _this5.setState({\n        orderType: newValue\n      });\n\n      var thisitem = _this5.state.orderAddr;\n\n      if (newValue == 0) {\n        var allPrice = items_store.getAllPrice();\n\n        if (thisitem) {\n          if (parseInt(thisitem.free_drive) == 1) {\n            if (parseInt(allPrice) > 0) {\n              items_store.setSumDiv(0);\n            } else {\n              items_store.setSumDiv(1);\n            }\n          } else {\n            items_store.setSumDiv(parseInt(thisitem.sum_div));\n          }\n        } else {\n          items_store.setSumDiv(0);\n        }\n      } else {\n        items_store.setSumDiv(0);\n        setTimeout(function () {\n          if (_this5.state.pic_point.length > 0) {\n            _this5.choosePic(_this5.state.orderPic);\n          }\n        }, 300);\n      }\n\n      var type = _this5.state.orderTimes,\n          type_order = newValue,\n          def_type = \'cash\';\n\n      if (type_order == 0) {\n        if (type == 1) {\n          _this5.setState({\n            renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? _this5.state.pays.dev : _this5.state.pays.dev_mini\n          });\n\n          def_type = \'cash\';\n        } else {\n          _this5.setState({\n            renderPay: _this5.state.pays.dev_mini\n          });\n\n          def_type = \'cash\';\n        }\n      } else {\n        _this5.setState({\n          renderPay: _this5.state.pays.pic\n        });\n\n        def_type = \'in\';\n      }\n\n      _this5.setState({\n        orderPay: def_type\n      });\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changeAddr", function (event) {\n      var thisitem = _this5.state.my_addr.find(function (item) {\n        return item.id == event.target.value;\n      });\n\n      var allPrice = items_store.getAllPrice();\n\n      if (parseInt(thisitem.free_drive) == 1) {\n        if (parseInt(allPrice) > 0) {\n          items_store.setSumDiv(0);\n        } else {\n          items_store.setSumDiv(1);\n        }\n      } else {\n        items_store.setSumDiv(parseInt(thisitem.sum_div));\n      }\n\n      var type = _this5.state.orderTimes,\n          type_order = _this5.state.orderType;\n\n      if (type_order == 0) {\n        if (type == 1) {\n          _this5.setState({\n            renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? _this5.state.pays.dev : _this5.state.pays.dev_mini\n          });\n        } else {\n          _this5.setState({\n            renderPay: _this5.state.pays.dev_mini\n          });\n        }\n      } else {\n        _this5.setState({\n          renderPay: _this5.state.pays.pic\n        });\n      }\n\n      _this5.setState({\n        orderAddr: thisitem,\n        chooseAddr: false,\n        newAddrInfo: null,\n        newAddrPD: \'\',\n        newAddrET: \'\',\n        newAddrKV: \'\'\n      });\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changeComment", function (event) {\n      var text = event.target.value;\n\n      if (text.length <= 50) {\n        _this5.setState({\n          orderComment: event.target.value\n        });\n      }\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changePay", function (event) {\n      _this5.setState({\n        orderPay: event.target.value\n      });\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changeTimes", function (event) {\n      var type = event.target.value,\n          type_order = _this5.state.orderType,\n          def_type = \'cash\';\n\n      if (type_order == 0) {\n        if (type == 1) {\n          _this5.setState({\n            renderPay: _this5.state.orderAddr && parseInt(_this5.state.orderAddr.pay_active) == 1 ? _this5.state.pays.dev : _this5.state.pays.dev_mini\n          });\n\n          def_type = \'cash\';\n        } else {\n          _this5.setState({\n            renderPay: _this5.state.pays.dev_mini\n          });\n\n          def_type = \'cash\';\n        }\n      } else {\n        _this5.setState({\n          renderPay: _this5.state.pays.pic\n        });\n\n        def_type = \'in\';\n      }\n\n      _this5.setState({\n        orderTimes: type,\n        orderPay: def_type\n      });\n\n      _this5.loadTimePred();\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changeSdacha", function (event) {\n      _this5.setState({\n        orderSdacha: event.target.value\n      });\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changePredDay", function (event) {\n      if (event.target.value !== 0) {\n        _this5.setState({\n          orderPredDay: event.target.value,\n          orderTimes: \'2\'\n        });\n\n        var type_order = _this5.state.orderType;\n\n        if (type_order == 0) {\n          _this5.setState({\n            renderPay: _this5.state.pays.dev_mini,\n            orderPay: \'cash\'\n          });\n        } else {\n          _this5.setState({\n            renderPay: _this5.state.pays.pic,\n            orderPay: \'in\'\n          });\n        }\n\n        setTimeout(function () {\n          _this5.loadTimePred();\n        }, 300);\n      } else {\n        _this5.setState({\n          orderPredDay: 0,\n          orderTimes: \'1\'\n        });\n\n        var _type_order = _this5.state.orderType;\n\n        if (_type_order == 0) {\n          _this5.setState({\n            renderPay: _this5.state.orderAddr && parseInt(_this5.state.orderAddr.pay_active) == 1 ? _this5.state.pays.dev : _this5.state.pays.dev_mini\n          });\n        } else {\n          _this5.setState({\n            renderPay: _this5.state.pays.pic,\n            orderPay: \'in\'\n          });\n        }\n      }\n\n      _this5.saveData();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "changePredTime", function (event) {\n      _this5.setState({\n        orderPredTime: event.target.value\n      });\n\n      _this5.saveData();\n    });\n\n    _this5.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      spiner: false,\n      title: \'\',\n      description: \'\',\n      chooseAddr: false,\n      choosePicDialog: false,\n      chooseTimeDialog: false,\n      choosePayDialog: false,\n      chooseNewAddr: false,\n      orderCheckDop: false,\n      sumDiv: 0,\n      allPrice: 0,\n      pic_point: [],\n      my_addr: [],\n      all_addr: [],\n      date_pred: [],\n      picPointInfo: null,\n      pays: {\n        dev: [{\n          type: \'cash\',\n          title: \'Наличными курьеру\'\n        }, {\n          type: \'card\',\n          title: \'Онлайн\'\n        }],\n        dev_mini: [{\n          type: \'cash\',\n          title: \'Наличными курьеру\'\n        }],\n        pic: [{\n          type: \'in\',\n          title: \'В кафе\'\n        }]\n      },\n      renderPay: [{\n        type: \'cash\',\n        title: \'Наличными курьеру\'\n      }, {\n        type: \'card\',\n        title: \'Онлайн\'\n      }],\n      cartItems_main: [],\n      cartItems_dop: [],\n      cartItems_need_dop: [],\n      cartItems_promo: [],\n      timePred: [],\n      error: {\n        title: \'\',\n        text: \'\'\n      },\n      errorOpen: false,\n      orderCheck: false,\n      newAddrInfo: null,\n      newAddrPD: \'\',\n      newAddrET: \'\',\n      newAddrKV: \'\',\n      newAddrHome: \'\',\n      newAddrDom: false,\n      orderType: 0,\n      orderAddr: null,\n      orderPic: 0,\n      orderComment: \'\',\n      orderPay: \'cash\',\n      orderTimes: \'1\',\n      orderPredDay: \'\',\n      orderPredTime: \'\',\n      orderSdacha: \'\',\n      orderPromo: \'\',\n      orderPromoText: \'\',\n      newOrderData: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this5;\n  }\n\n  (0,createClass/* default */.Z)(Cart, [{\n    key: "loadData",\n    value: function loadData() {\n      var _this6 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: cart_component_queryString.stringify({\n          type: \'get_by_mi_web\',\n          city_id: this.state.city_name,\n          user_id: items_store.getToken()\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this6.setState({\n          pic_point: json.get_addr_pic.points,\n          my_addr: json.get_my_addr,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n        });\n\n        setTimeout(function () {\n          var cartData = items_store.getCartData();\n\n          if (cartData.orderType || cartData.orderType == 0) {\n            _this6.setState({\n              orderType: cartData.orderType,\n              orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n              orderPic: cartData.orderPic,\n              orderComment: cartData.orderComment,\n              orderTimes: cartData.orderTimes,\n              orderPredDay: cartData.orderPredDay,\n              orderPredTime: cartData.orderPredTime,\n              orderPay: cartData.orderPay,\n              orderSdacha: cartData.orderSdacha\n            });\n\n            if (parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != \'\' && (cartData.orderAddr && cartData.orderAddr.id !== -1 || parseInt(cartData.orderPic) > 0)) {\n              setTimeout(function () {\n                _this6.loadTimePred();\n              }, 300);\n            } else {\n              var data = {\n                orderType: cartData.orderType,\n                orderAddr: \'\',\n                orderPic: cartData.orderPic,\n                orderComment: cartData.orderComment,\n                orderTimes: cartData.orderTimes,\n                orderPredDay: \'\',\n                orderPredTime: \'\',\n                orderPay: cartData.orderPay,\n                orderSdacha: cartData.orderSdacha\n              };\n              items_store.saveCartData(data);\n            }\n\n            setTimeout(function () {\n              if (parseInt(cartData.orderType) == 1 && parseInt(cartData.orderPic) > 0) {\n                _this6.choosePic(cartData.orderPic);\n              }\n            }, 300);\n\n            if (cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1) {\n              var allPrice = items_store.getAllPrice();\n\n              if (parseInt(cartData.orderAddr.free_drive) == 1) {\n                if (parseInt(allPrice) > 0) {\n                  items_store.setSumDiv(0);\n                } else {\n                  items_store.setSumDiv(1);\n                }\n              } else {\n                items_store.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n              }\n            }\n\n            setTimeout(function () {\n              var type = cartData.orderTimes,\n                  type_order = cartData.orderType;\n\n              if (type_order == 0) {\n                if (type == 1) {\n                  _this6.setState({\n                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? _this6.state.pays.dev : _this6.state.pays.dev_mini\n                  });\n                } else {\n                  _this6.setState({\n                    renderPay: _this6.state.pays.dev_mini\n                  });\n                }\n              } else {\n                _this6.setState({\n                  renderPay: _this6.state.pays.pic\n                });\n              }\n            }, 300);\n          } else {\n            if (_this6.state.pic_point.length > 0) {\n              _this6.choosePic(_this6.state.pic_point[0][\'id\']);\n            }\n\n            if (_this6.state.my_addr.length > 0) {\n              _this6.changeAddr({\n                target: {\n                  value: _this6.state.my_addr[0][\'id\']\n                }\n              });\n            }\n          }\n\n          if (typeof window !== \'undefined\') {\n            setTimeout(function () {\n              if (localStorage.getItem(\'promo_name\')) {\n                _this6.setState({\n                  orderPromo: localStorage.getItem(\'promo_name\')\n                });\n\n                setTimeout(function () {\n                  _this6.checkPromo();\n                }, 300);\n              }\n            }, 1000);\n          }\n        }, 300);\n      });\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "choosePic",\n    value: function choosePic(pointId) {\n      if (document.querySelector(\'.boxPic.active\')) {\n        document.querySelector(\'.boxPic.active\').classList.remove(\'active\');\n      }\n\n      if (document.querySelector(\'#pic_\' + pointId)) {\n        document.querySelector(\'#pic_\' + pointId).classList.add(\'active\');\n      }\n\n      var picPointInfo = this.state.pic_point.find(function (item) {\n        return item.id == pointId;\n      });\n      this.setState({\n        orderPic: pointId,\n        picPointInfo: picPointInfo,\n        choosePicDialog: false\n      });\n      this.saveData();\n    }\n  }, {\n    key: "changePayMobile",\n    value: function changePayMobile(type) {\n      this.setState({\n        orderPay: type,\n        choosePayDialog: false\n      });\n      this.saveData();\n    }\n  }, {\n    key: "checkPromo",\n    value: function checkPromo() {\n      var _this7 = this;\n\n      if (this.state.orderPromo.length == 0) {\n        this.setState({\n          orderPromoText: \'\'\n        });\n      } else {\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: cart_component_queryString.stringify({\n            type: \'get_promo_web\',\n            city_id: items_store.getCity(),\n            promo_name: this.state.orderPromo\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          items_store.setPromo(JSON.stringify(json), _this7.state.orderPromo);\n          var check_promo = items_store.checkPromo();\n\n          if (check_promo.st === false) {\n            localStorage.removeItem(\'promo_name\');\n          }\n\n          _this7.setState({\n            orderPromoText: check_promo.text\n          });\n        });\n      }\n    }\n  }, {\n    key: "saveData",\n    value: function saveData() {\n      var _this8 = this;\n\n      setTimeout(function () {\n        var data = {\n          orderType: _this8.state.orderType,\n          orderAddr: _this8.state.orderAddr,\n          orderPic: _this8.state.orderPic,\n          orderComment: _this8.state.orderComment,\n          orderTimes: _this8.state.orderTimes,\n          orderPredDay: _this8.state.orderPredDay,\n          orderPredTime: _this8.state.orderPredTime,\n          orderPay: _this8.state.orderPay,\n          orderSdacha: _this8.state.orderSdacha\n        };\n        items_store.saveCartData(data);\n      }, 500);\n    }\n  }, {\n    key: "saveDataCustomAddr",\n    value: function saveDataCustomAddr() {\n      var _this9 = this;\n\n      setTimeout(function () {\n        var data = {\n          orderType: _this9.state.orderType,\n          orderAddr: {\n            id: -1,\n            city_name: items_store.getCityRU(),\n            street: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.street : \'\',\n            home: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.home : \'\',\n            kv: _this9.state.newAddrKV,\n            pd: _this9.state.newAddrPD,\n            et: _this9.state.newAddrET,\n            dom_true: _this9.state.newAddrDom ? 0 : 1,\n            free_drive: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.free_drive : 0,\n            sum_div: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.sum_div : 0,\n            point_id: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.point_id : 0,\n            xy: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.xy : \'\',\n            pay_active: _this9.state.newAddrInfo ? _this9.state.newAddrInfo.pay_active : 0\n          },\n          orderPic: _this9.state.orderPic,\n          orderComment: _this9.state.orderComment,\n          orderTimes: _this9.state.orderTimes,\n          orderPredDay: _this9.state.orderPredDay,\n          orderPredTime: _this9.state.orderPredTime,\n          orderPay: _this9.state.orderPay,\n          orderSdacha: _this9.state.orderSdacha\n        };\n\n        if (data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0) {\n          _this9.setState({\n            orderAddr: data.orderAddr\n          });\n        }\n\n        items_store.saveCartData(data); //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n\n        var allPrice = items_store.getAllPrice();\n\n        if (parseInt(_this9.state.newAddrInfo ? _this9.state.newAddrInfo.free_drive : 0) == 1) {\n          if (parseInt(allPrice) > 0) {\n            items_store.setSumDiv(0);\n          } else {\n            items_store.setSumDiv(1);\n          }\n        } else {\n          items_store.setSumDiv(parseInt(_this9.state.newAddrInfo ? _this9.state.newAddrInfo.sum_div : 0));\n        }\n\n        var type = _this9.state.orderTimes,\n            type_order = _this9.state.orderType;\n\n        if (type_order == 0) {\n          if (type == 1) {\n            _this9.setState({\n              renderPay: _this9.state.newAddrInfo && parseInt(_this9.state.newAddrInfo.pay_active) == 1 ? _this9.state.pays.dev : _this9.state.pays.dev_mini\n            });\n          } else {\n            _this9.setState({\n              renderPay: _this9.state.pays.dev_mini\n            });\n          }\n        } else {\n          _this9.setState({\n            renderPay: _this9.state.pays.pic\n          });\n        }\n      }, 500);\n    }\n  }, {\n    key: "loadTimePred",\n    value: function loadTimePred() {\n      var _this$state$orderAddr,\n          _this$state$orderPic,\n          _this10 = this;\n\n      var my_cart = [];\n      var cartItems = items_store.getItems();\n\n      if (this.state.orderType + 1 == 1 && parseInt(this.state.orderTimes) == 1) {\n        if (!this.state.orderAddr || !this.state.orderAddr.point_id) {\n          this.setState({\n            error: {\n              title: \'Предупреждение\',\n              text: \'Адрес доставки или точка самовывоза не выбрана\'\n            },\n            errorOpen: true,\n            orderTimes: \'1\'\n          });\n          return;\n        }\n      }\n\n      cartItems.forEach(function (el) {\n        my_cart.push({\n          item_id: el.item_id,\n          count: el.count\n        });\n      });\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: cart_component_queryString.stringify({\n          type: \'get_times_pred_web\',\n          point_id: this.state.orderType + 1 == 1 ? (_this$state$orderAddr = this.state.orderAddr.point_id) !== null && _this$state$orderAddr !== void 0 ? _this$state$orderAddr : 0 : (_this$state$orderPic = this.state.orderPic) !== null && _this$state$orderPic !== void 0 ? _this$state$orderPic : 0,\n          type_order: this.state.orderType + 1,\n          date: this.state.orderPredDay,\n          cart: JSON.stringify(my_cart)\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json.st) {\n          _this10.setState({\n            error: {\n              title: \'Предупреждение\',\n              text: json.text\n            },\n            errorOpen: true\n          });\n        } else {\n          _this10.setState({\n            timePred: json.data\n          });\n        }\n      });\n    }\n  }, {\n    key: "startOrder",\n    value: function startOrder() {\n      var _this11 = this;\n\n      if (this.clickOrderStart == false) {\n        this.clickOrderStart = true;\n        this.setState({\n          spiner: true\n        });\n        var new_cart = [];\n        var cartItems = items_store.getItems();\n        var allItems = items_store.getAllItems();\n        cartItems.forEach(function (item) {\n          if (item.count > 0) {\n            new_cart.push({\n              name: item.name,\n              count: item.count,\n              price: item.all_price,\n              item_id: item.item_id,\n              cat_id: allItems.find(function (item_) {\n                return item_.id == item.item_id;\n              })[\'cat_id\']\n            });\n          }\n        });\n        var check_need_dop = false;\n        var check_dop_17 = false;\n        var check_dop_19 = false;\n        new_cart.forEach(function (item) {\n          if ((parseInt(item.cat_id) == 3 || parseInt(item.cat_id) == 4 || parseInt(item.cat_id) == 9 || parseInt(item.cat_id) == 10 || parseInt(item.cat_id) == 12 || parseInt(item.cat_id) == 13) && parseInt(item.count) > 0) {\n            check_need_dop = true;\n          }\n\n          if (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) {\n            check_dop_17 = true;\n          }\n\n          if (parseInt(item.item_id) == 19 && parseInt(item.count) > 0) {\n            check_dop_19 = true;\n          }\n        });\n\n        if (check_need_dop && check_dop_17 == false || check_need_dop && check_dop_19 == false) {\n          this.setState({\n            orderCheckDop: true,\n            spiner: false\n          });\n          setTimeout(function () {\n            _this11.clickOrderStart = false;\n          }, 300);\n          return;\n        } else {\n          this.clickOrderStart = false;\n          this.startOrderNext();\n        }\n      }\n    }\n  }, {\n    key: "startOrderNext",\n    value: function startOrderNext() {\n      var _this12 = this;\n\n      if (this.clickOrderStart == false) {\n        this.clickOrderStart = true;\n        clearTimeout(this.startOrderIntervalTimer);\n        this.setState({\n          orderCheckDop: false,\n          spiner: true\n        });\n        var payFull = this.state.renderPay.find(function (item) {\n          return item.type == _this12.state.orderPay;\n        });\n        var new_cart = [];\n        var cartItems = items_store.getItems();\n        cartItems.forEach(function (item) {\n          if (item.count > 0) {\n            new_cart.push({\n              name: item.name,\n              count: item.count,\n              price: item.all_price,\n              id: item.item_id\n            });\n          }\n        });\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: cart_component_queryString.stringify({\n            type: \'createOrder_web\',\n            city_id: this.state.city_name,\n            user_id: items_store.getToken(),\n            timePred: JSON.stringify({\n              value: parseInt(this.state.orderTimes) == 1 ? 0 : this.state.orderPredDay + \' \' + this.state.orderPredTime\n            }),\n            //\n            typeOrder: this.state.orderType,\n            //\n            addrPic: this.state.orderPic,\n            //\n            comment: this.state.orderComment,\n            //\n            addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : \'\',\n            //\n            pay: payFull.title,\n            //\n            payFull: JSON.stringify(payFull),\n            //\n            cart: JSON.stringify(new_cart),\n            //\n            promo_name: this.state.orderPromo //\n\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          setTimeout(function () {\n            _this12.clickOrderStart = false;\n          }, 300);\n          setTimeout(function () {\n            _this12.setState({\n              spiner: false\n            });\n\n            if (json.st) {\n              _this12.setState({\n                orderCheck: true,\n                newOrderData: json\n              });\n\n              _this12.startOrderIntervalTimer = setTimeout(function () {\n                _this12.setState({\n                  orderCheck: false,\n                  newOrderData: null\n                });\n              }, _this12.startOrderInterval * 1000);\n            } else {\n              _this12.setState({\n                error: {\n                  title: \'Предупреждение\',\n                  text: json.text_err\n                },\n                errorOpen: true\n              });\n            }\n          }, 1000);\n        });\n      }\n    }\n  }, {\n    key: "checkNewAddr",\n    value: function checkNewAddr() {\n      var _this13 = this;\n\n      var street = document.querySelector(\'#newAddrStreet\').value;\n\n      if (street.length > 0 && this.state.newAddrHome.length > 0) {\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: cart_component_queryString.stringify({\n            type: \'save_new_addr_web\',\n            city_id: this.state.city_name,\n            user_id: items_store.getToken(),\n            street: street + \' \' + this.state.newAddrHome\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (!json.st) {\n            _this13.setState({\n              error: {\n                title: \'Предупреждение\',\n                text: json.text\n              },\n              errorOpen: true\n            });\n          } else {\n            if (json.data.home == \'\') {\n              _this13.setState({\n                error: {\n                  title: \'Предупреждение\',\n                  text: \'Номер дома не указан или указан не верно\'\n                },\n                errorOpen: true\n              });\n            } else {\n              _this13.setState({\n                newAddrInfo: json.data\n              });\n\n              _this13.saveDataCustomAddr();\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: "trueOrder",\n    value: function trueOrder() {\n      var _this14 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: cart_component_queryString.stringify({\n          type: \'trueOrder\',\n          city_id: this.state.city_name,\n          user_id: items_store.getToken(),\n          order_id: this.state.newOrderData.order_id,\n          point_id: this.state.newOrderData.point_id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json[\'st\'] == false) {\n          _this14.setState({\n            error: {\n              title: \'При подтверждении оплаты произошла ошибка\',\n              text: json.text_err\n            },\n            errorOpen: true\n          });\n        } else {\n          items_store.setItems([]);\n          var data = {\n            orderType: \'0\',\n            orderAddr: \'\',\n            orderPic: 0,\n            orderComment: \'\',\n            orderTimes: \'1\',\n            orderPredDay: \'\',\n            orderPredTime: \'\',\n            orderPay: \'\',\n            orderSdacha: \'\'\n          };\n          items_store.saveCartData(data);\n          setTimeout(function () {\n            window.location.pathname = \'/\' + _this14.state.city_name + \'/profile\';\n          }, 300);\n        }\n      });\n    }\n  }, {\n    key: "delAddr",\n    value: function delAddr(id) {\n      var _this15 = this;\n\n      if (confirm("Удалить сохраненный адрес ?")) {\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: cart_component_queryString.stringify({\n            type: \'del_addr_web\',\n            city_id: this.state.city_name,\n            user_id: items_store.getToken(),\n            id_addr: id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this15.setState({\n            my_addr: json\n          });\n        });\n      }\n    }\n  }, {\n    key: "changeDomTrue",\n    value: function changeDomTrue(type) {\n      this.setState({\n        newAddrDom: type\n      });\n    }\n  }, {\n    key: "closeTimeDialog",\n    value: function closeTimeDialog() {\n      if (this.state.orderPredTime == \'\') {\n        this.changePredDay({\n          target: {\n            value: 0\n          }\n        });\n        this.setState({\n          chooseTimeDialog: false\n        });\n      } else {\n        this.setState({\n          chooseTimeDialog: false\n        });\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this16 = this;\n\n      var this_pay = this.state.renderPay.find(function (item) {\n        return item.type == _this16.state.orderPay;\n      });\n      return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "Cart mainContainer MuiGrid-spacing-xs-3"\n      }, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Backdrop/* default */.Z, {\n        open: this.state.spiner,\n        style: {\n          zIndex: 99,\n          color: \'#fff\'\n        }\n      }, /*#__PURE__*/react.createElement(CircularProgress/* default */.Z, {\n        color: "inherit"\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, "\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430")), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        xsDown: true\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        style: {\n          paddingTop: 0\n        }\n      }, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "static",\n        style: {\n          backgroundColor: \'#fff\',\n          color: \'#000\',\n          zIndex: 0\n        },\n        elevation: 0\n      }, /*#__PURE__*/react.createElement(Tabs/* default */.Z, {\n        value: this.state.orderType,\n        onChange: this.changeTab.bind(this),\n        "aria-label": "simple tabs example",\n        style: {\n          justifyContent: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430"\n      }, cart_component_a11yProps(0), {\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0421\\u0430\\u043C\\u043E\\u0432\\u044B\\u0432\\u043E\\u0437"\n      }, cart_component_a11yProps(1), {\n        disableRipple: true\n      })))), /*#__PURE__*/react.createElement(cart_component_TabPanel, {\n        value: this.state.orderType,\n        index: 0,\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        component: "fieldset"\n      }, /*#__PURE__*/react.createElement(RadioGroup/* default */.Z, {\n        name: "addrs",\n        value: this.state.orderAddr ? this.state.orderAddr.id : 0,\n        onChange: this.changeAddr\n      }, this.state.my_addr.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          className: "boxAddr"\n        }, /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n          value: item.id,\n          control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n          label: item.city_name + \', \' + item.street + \' \' + item.home + (parseInt(item.pd) == 0 ? \'\' : \', Пд. \' + item.pd) + (parseInt(item.et) == 0 ? \'\' : \', Эт. \' + item.et) + (parseInt(item.kv) == 0 ? \'\' : \', Кв. \' + item.kv)\n        }), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          onClick: _this16.delAddr.bind(_this16, item.id),\n          icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n        }));\n      }))), /*#__PURE__*/react.createElement(Accordion/* default */.Z, null, /*#__PURE__*/react.createElement(AccordionSummary/* default */.Z, {\n        "aria-controls": "panel1a-content",\n        id: "panel1a-header"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "newAddr"\n      }, "\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441")), /*#__PURE__*/react.createElement(AccordionDetails/* default */.Z, {\n        className: "newAddr"\n      }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Autocomplete/* default */.ZP, {\n        freeSolo: true,\n        id: "newAddrStreet",\n        onBlur: this.checkNewAddr.bind(this),\n        options: this.state.all_addr.map(function (option) {\n          return option.value;\n        }),\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/react.createElement(TextField/* default */.Z, (0,esm_extends/* default */.Z)({}, params, {\n            label: "\\u0423\\u043B\\u0438\\u0446\\u0430",\n            margin: "normal",\n            variant: "outlined"\n          }));\n        }\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u0414\\u043E\\u043C",\n        variant: "outlined",\n        value: this.state.newAddrHome,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrHome: event.target.value\n          });\n        },\n        onBlur: this.checkNewAddr.bind(this)\n      })), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434",\n        variant: "outlined",\n        value: this.state.newAddrPD,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrPD: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u042D\\u0442\\u0430\\u0436",\n        variant: "outlined",\n        value: this.state.newAddrET,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrET: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430",\n        variant: "outlined",\n        value: this.state.newAddrKV,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrKV: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      })), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        variant: "contained",\n        className: "chooseDomTrue"\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: this.state.newAddrDom === true ? \'active\' : \'\',\n        onClick: this.changeDomTrue.bind(this, true)\n      }, "\\u0414\\u043E\\u043C\\u043E\\u0444\\u043E\\u043D \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442"), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: this.state.newAddrDom === false ? \'active\' : \'\',\n        onClick: this.changeDomTrue.bind(this, false)\n      }, "\\u0414\\u043E\\u043C\\u043E\\u0444\\u043E\\u043D \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442")))))), /*#__PURE__*/react.createElement(cart_component_TabPanel, {\n        value: this.state.orderType,\n        index: 1\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          display: \'flex\',\n          flexDirection: \'column\'\n        }\n      }, this.state.pic_point.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          className: "boxPic",\n          id: \'pic_\' + item.id,\n          key: key,\n          onClick: _this16.choosePic.bind(_this16, item.id)\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.raion), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.addr, ", c 10:00 \\u0434\\u043E 21:30"));\n      }))), this.state.orderType == 0 ? /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("form", {\n        noValidate: true,\n        autoComplete: "off"\n      }, /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        style: {\n          width: \'100%\'\n        },\n        id: "outlined-multiline-flexible",\n        label: "\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u043A\\u0443\\u0440\\u044C\\u0435\\u0440\\u0443",\n        multiline: true,\n        rowsMax: 2,\n        value: this.state.orderComment,\n        onChange: this.changeComment,\n        variant: "outlined"\n      }))) : null, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        component: "fieldset"\n      }, /*#__PURE__*/react.createElement(FormLabel/* default */.Z, {\n        component: "legend"\n      }, "\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430"), /*#__PURE__*/react.createElement(RadioGroup/* default */.Z, {\n        "aria-label": "pays",\n        name: "pays",\n        value: this.state.orderPay,\n        onChange: this.changePay\n      }, this.state.renderPay.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n          key: key,\n          value: item.type,\n          control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n          label: item.title\n        });\n      })))), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        component: "fieldset"\n      }, /*#__PURE__*/react.createElement(FormLabel/* default */.Z, {\n        component: "legend"\n      }, "\\u041A\\u043E\\u0433\\u0434\\u0430 \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u044C?"), /*#__PURE__*/react.createElement(RadioGroup/* default */.Z, {\n        "aria-label": "times",\n        name: "times",\n        value: this.state.orderTimes,\n        onChange: this.changeTimes\n      }, /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n        value: "1",\n        control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n        label: "\\u041A\\u0430\\u043A \\u043C\\u043E\\u0436\\u043D\\u043E \\u0431\\u044B\\u0441\\u0442\\u0440\\u0435\\u0435"\n      }), /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n        value: "2",\n        control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n        label: "\\u041F\\u0440\\u0435\\u0434\\u0437\\u0430\\u043A\\u0430\\u0437"\n      })))), this.state.orderTimes == 2 ? /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        style: {\n          width: \'30%\'\n        }\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "age-native-simple"\n      }, "\\u0414\\u0435\\u043D\\u044C"), /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        displayEmpty: true,\n        value: this.state.orderPredDay,\n        onChange: this.changePredDay,\n        inputProps: {\n          id: \'age-native-simple\'\n        }\n      }, this.state.date_pred.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          value: item.date\n        }, item.text);\n      }))), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        style: {\n          width: \'20%\'\n        }\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "age-native-simple1"\n      }, "\\u0412\\u0440\\u0435\\u043C\\u044F"), /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        displayEmpty: true,\n        value: this.state.orderPredTime,\n        onChange: this.changePredTime,\n        inputProps: {\n          id: \'age-native-simple1\'\n        }\n      }, this.state.timePred.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          value: item.value\n        }, item.text);\n      })))) : null, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h2"\n      }, "\\u041C\\u043E\\u044F \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430")), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("table", {\n        className: "tableCart"\n      }, /*#__PURE__*/react.createElement("tbody", null, this.state.cartItems_main.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItem, {\n          key: key,\n          item: item,\n          type: "item"\n        });\n      }), this.state.cartItems_promo.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItem, {\n          key: key,\n          item: item,\n          type: "promo"\n        });\n      }), /*#__PURE__*/react.createElement("tr", {\n        className: "rowAboutDop"\n      }, /*#__PURE__*/react.createElement("td", {\n        colSpan: "3"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: ""\n      }, "\\u0421\\u043E\\u0435\\u0432\\u044B\\u0439 \\u0441\\u043E\\u0443\\u0441, \\u0438\\u043C\\u0431\\u0438\\u0440\\u044C \\u0438 \\u0432\\u0430\\u0441\\u0430\\u0431\\u0438 \\u043F\\u0440\\u0438\\u043E\\u0431\\u0440\\u0435\\u0442\\u0430\\u044E\\u0442\\u0441\\u044F \\u043E\\u0442\\u0434\\u0435\\u043B\\u044C\\u043D\\u043E!"), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: ""\n      }, "\\u041D\\u0435 \\u0437\\u0430\\u0431\\u0443\\u0434\\u044C \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u0438 \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443."))), this.state.cartItems_dop.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItem, {\n          key: key,\n          item: item,\n          type: "dop"\n        });\n      })), /*#__PURE__*/react.createElement("tfoot", null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", {\n        colSpan: "2"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        component: "span"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430:")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: "namePrice"\n      }, this.state.sumDiv, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 20 500 200"\n      })))), /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", {\n        colSpan: "2"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        component: "span"\n      }, "\\u0418\\u0442\\u043E\\u0433\\u043E:")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: "namePrice"\n      }, this.state.sumDiv + this.state.allPrice, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 20 500 200"\n      }))))))), this.state.orderType == 0 ? /*#__PURE__*/react.createElement("div", {\n        className: "orderSdacha"\n      }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(FormControl/* default */.Z, null, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "standard-adornment-weight"\n      }, "\\u041F\\u043E\\u0434\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0434\\u0430\\u0447\\u0443 \\u0441"), /*#__PURE__*/react.createElement(Input/* default */.Z, {\n        type: "number",\n        id: "standard-adornment-weight",\n        value: this.state.orderSdacha,\n        onChange: this.changeSdacha,\n        endAdornment: /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          viewBox: "-400 0 1200 300"\n        })\n      })))) : null, /*#__PURE__*/react.createElement("div", {\n        className: "promoOrder"\n      }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Paper/* default */.Z, {\n        component: "div",\n        className: "SpacePromo"\n      }, /*#__PURE__*/react.createElement(InputBase/* default */.Z, {\n        onBlur: this.checkPromo.bind(this),\n        value: this.state.orderPromo,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            orderPromo: event.target.value\n          });\n        },\n        placeholder: "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434"\n      }), /*#__PURE__*/react.createElement(Divider/* default */.Z, {\n        orientation: "vertical"\n      }), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        color: "primary",\n        "aria-label": "directions",\n        onClick: this.checkPromo.bind(this)\n      }, /*#__PURE__*/react.createElement(CheckOutlined/* default */.Z, null))), this.state.orderPromoText.length > 0 ? /*#__PURE__*/react.createElement("div", {\n        className: "DescPromo"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434 \\u0434\\u0430\\u0435\\u0442: ", this.state.orderPromoText)) : null), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: this.startOrder.bind(this)\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437")))))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        smUp: true\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer mobile"\n      }, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "static",\n        style: {\n          backgroundColor: \'#fff\',\n          color: \'#000\',\n          zIndex: 0\n        },\n        elevation: 0\n      }, /*#__PURE__*/react.createElement(Tabs/* default */.Z, {\n        value: this.state.orderType,\n        onChange: this.changeTab.bind(this),\n        "aria-label": "simple tabs example",\n        style: {\n          justifyContent: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430"\n      }, cart_component_a11yProps(0), {\n        style: {\n          width: \'50%\'\n        },\n        disableRipple: true\n      })), /*#__PURE__*/react.createElement(Tab/* default */.Z, (0,esm_extends/* default */.Z)({\n        label: "\\u0421\\u0430\\u043C\\u043E\\u0432\\u044B\\u0432\\u043E\\u0437"\n      }, cart_component_a11yProps(1), {\n        style: {\n          width: \'50%\'\n        },\n        disableRipple: true\n      })))), /*#__PURE__*/react.createElement(cart_component_TabPanel, {\n        value: this.state.orderType,\n        index: 0,\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseAddr: true\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u0410\\u0434\\u0440\\u0435\\u0441: ", this.state.orderAddr ? this.state.orderAddr.city_name + \', \' + this.state.orderAddr.street + \' \' + this.state.orderAddr.home + (parseInt(this.state.orderAddr.pd) == 0 ? \'\' : \', Пд. \' + this.state.orderAddr.pd) + (parseInt(this.state.orderAddr.et) == 0 ? \'\' : \', Эт. \' + this.state.orderAddr.et) + (parseInt(this.state.orderAddr.kv) == 0 ? \'\' : \', Кв. \' + this.state.orderAddr.kv) : \'\'))), /*#__PURE__*/react.createElement(cart_component_TabPanel, {\n        value: this.state.orderType,\n        index: 1,\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile",\n        onClick: function onClick() {\n          return _this16.setState({\n            choosePicDialog: true\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u0410\\u0434\\u0440\\u0435\\u0441: ", this.state.orderPic > 0 ? this.state.pic_point.find(function (item) {\n        return item.id == _this16.state.orderPic;\n      })[\'addr\'] : \'\'))), /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseTimeDialog: true\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u0438\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u043C: ", this.state.orderTimes == 1 ? \'как можно быстрее\' : this.state.orderPredDay + \' \' + this.state.orderPredTime)), /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile",\n        onClick: function onClick() {\n          return _this16.setState({\n            choosePayDialog: true\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041E\\u043F\\u043B\\u0430\\u0447\\u0443: ", this_pay ? this_pay[\'title\'] : \'\')), /*#__PURE__*/react.createElement("div", {\n        style: {\n          marginTop: 15\n        }\n      }, /*#__PURE__*/react.createElement(Paper/* default */.Z, {\n        component: "div",\n        className: "SpacePromo"\n      }, /*#__PURE__*/react.createElement(InputBase/* default */.Z, {\n        onBlur: this.checkPromo.bind(this),\n        value: this.state.orderPromo,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            orderPromo: event.target.value\n          });\n        },\n        placeholder: "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434"\n      }), /*#__PURE__*/react.createElement(Divider/* default */.Z, {\n        orientation: "vertical"\n      }), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        color: "primary",\n        "aria-label": "directions",\n        onClick: this.checkPromo.bind(this)\n      }, /*#__PURE__*/react.createElement(CheckOutlined/* default */.Z, null))), this.state.orderPromoText.length > 0 ? /*#__PURE__*/react.createElement("div", {\n        className: "DescPromo"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434 \\u0434\\u0430\\u0435\\u0442: ", this.state.orderPromoText)) : null), this.state.orderType == 0 ? /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile_ area",\n        style: {\n          paddingTop: 20\n        }\n      }, /*#__PURE__*/react.createElement("form", {\n        noValidate: true,\n        autoComplete: "off"\n      }, /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        style: {\n          width: \'100%\'\n        },\n        id: "outlined-multiline-flexible",\n        label: "\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u043A\\u0443\\u0440\\u044C\\u0435\\u0440\\u0443",\n        multiline: true,\n        rowsMax: 2,\n        value: this.state.orderComment,\n        onChange: this.changeComment,\n        variant: "outlined"\n      }))) : null, this.state.orderType == 0 && this.state.orderPay == \'cash\' ? /*#__PURE__*/react.createElement("div", {\n        className: "boxMobile_ area",\n        style: {\n          paddingTop: 20\n        }\n      }, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        variant: "outlined",\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "outlined-adornment-password"\n      }, "\\u041F\\u043E\\u0434\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0434\\u0430\\u0447\\u0443 \\u0441"), /*#__PURE__*/react.createElement(OutlinedInput/* default */.Z, {\n        id: "outlined-adornment-password",\n        type: "number",\n        style: {\n          width: \'100%\'\n        },\n        value: this.state.orderSdacha,\n        onChange: this.changeSdacha,\n        endAdornment: /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          viewBox: "-600 80 1000 300"\n        }),\n        label: "\\u041F\\u043E\\u0434\\u0433\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0434\\u0430\\u0447\\u0443 \\u0441"\n      }))) : null, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        className: "tableMobile"\n      }, this.state.cartItems_main.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItemMobile, {\n          key: key,\n          item: item,\n          type: "item"\n        });\n      }), this.state.cartItems_promo.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItemMobile, {\n          key: key,\n          item: item,\n          type: "promo"\n        });\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "boxItem rowAboutDop"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: ""\n      }, "\\u0421\\u043E\\u0435\\u0432\\u044B\\u0439 \\u0441\\u043E\\u0443\\u0441, \\u0438\\u043C\\u0431\\u0438\\u0440\\u044C \\u0438 \\u0432\\u0430\\u0441\\u0430\\u0431\\u0438 \\u043F\\u0440\\u0438\\u043E\\u0431\\u0440\\u0435\\u0442\\u0430\\u044E\\u0442\\u0441\\u044F \\u043E\\u0442\\u0434\\u0435\\u043B\\u044C\\u043D\\u043E!"), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        gutterBottom: true,\n        variant: "h5",\n        component: "span",\n        className: ""\n      }, "\\u041D\\u0435 \\u0437\\u0430\\u0431\\u0443\\u0434\\u044C\\u0442\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u0438 \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443.")), this.state.cartItems_dop.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItemMobile, {\n          key: key,\n          item: item,\n          type: "dop"\n        });\n      }))), /*#__PURE__*/react.createElement("div", {\n        className: "bottomOrder",\n        style: {\n          paddingTop: 0\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          padding: \'5px 0px\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "namePrice"\n      }, this.state.sumDiv, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 600 200"\n      }))), /*#__PURE__*/react.createElement("div", {\n        style: {\n          paddingBottom: 5\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span"\n      }, "\\u041A \\u043E\\u043F\\u043B\\u0430\\u0442\\u0435"), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "namePrice"\n      }, this.state.sumDiv + this.state.allPrice, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 600 200"\n      }))), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: this.startOrder.bind(this)\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437")))))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.errorOpen,\n        onClose: function onClose() {\n          return _this16.setState({\n            errorOpen: false\n          });\n        },\n        className: "DialogErr"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, this.state.error.title), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            errorOpen: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement(DialogContentText/* default */.Z, {\n        className: "DialogErrText"\n      }, this.state.error.text)), /*#__PURE__*/react.createElement(DialogActions/* default */.Z, null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: function onClick() {\n          return _this16.setState({\n            errorOpen: false\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u0425\\u043E\\u0440\\u043E\\u0448\\u043E")))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.chooseAddr,\n        fullWidth: true,\n        onClose: function onClose() {\n          return _this16.setState({\n            chooseAddr: false\n          });\n        },\n        className: "DialogChooseAddr"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseAddr: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        component: "fieldset"\n      }, /*#__PURE__*/react.createElement(RadioGroup/* default */.Z, {\n        name: "addrs",\n        value: this.state.orderAddr ? this.state.orderAddr.id : 0,\n        onChange: this.changeAddr\n      }, this.state.my_addr.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          key: key,\n          className: "boxAddr"\n        }, /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n          value: item.id,\n          control: /*#__PURE__*/react.createElement(Radio/* default */.Z, null),\n          label: item.city_name + \', \' + item.street + \' \' + item.home + (parseInt(item.pd) == 0 ? \'\' : \', Пд. \' + item.pd) + (parseInt(item.et) == 0 ? \'\' : \', Эт. \' + item.et) + (parseInt(item.kv) == 0 ? \'\' : \', Кв. \' + item.kv)\n        }), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n        }));\n      }))), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "newAddrMobile",\n        onClick: function onClick() {\n          _this16.setState({\n            chooseAddr: false,\n            chooseNewAddr: true\n          });\n        }\n      }, "\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441"))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.chooseNewAddr,\n        fullWidth: true,\n        onClose: function onClose() {\n          return _this16.setState({\n            chooseNewAddr: false\n          });\n        },\n        className: "DialogChooseNewAddr"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseNewAddr: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        style: {\n          paddingTop: 0\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "newAddrMobile",\n        style: {\n          paddingTop: 0\n        }\n      }, /*#__PURE__*/react.createElement(Autocomplete/* default */.ZP, {\n        freeSolo: true,\n        id: "newAddrStreet",\n        style: {\n          width: \'100%\'\n        },\n        onBlur: this.checkNewAddr.bind(this),\n        options: this.state.all_addr.map(function (option) {\n          return option.value;\n        }),\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/react.createElement(TextField/* default */.Z, (0,esm_extends/* default */.Z)({}, params, {\n            label: "\\u0423\\u043B\\u0438\\u0446\\u0430",\n            margin: "normal"\n          }));\n        }\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u0414\\u043E\\u043C" //variant="outlined" \n        ,\n        style: {\n          width: \'100%\'\n        },\n        value: this.state.newAddrHome,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrHome: event.target.value\n          });\n        },\n        onBlur: this.checkNewAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434" //variant="outlined" \n        ,\n        style: {\n          width: \'100%\'\n        },\n        value: this.state.newAddrPD,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrPD: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u042D\\u0442\\u0430\\u0436" //variant="outlined" \n        ,\n        style: {\n          width: \'100%\'\n        },\n        value: this.state.newAddrET,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrET: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n        label: "\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430" //variant="outlined" \n        ,\n        style: {\n          width: \'100%\'\n        },\n        value: this.state.newAddrKV,\n        onChange: function onChange(event) {\n          return _this16.setState({\n            newAddrKV: event.target.value\n          });\n        },\n        onBlur: this.saveDataCustomAddr.bind(this)\n      }), /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        variant: "contained",\n        className: "chooseDomTrue"\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: this.state.newAddrDom === true ? \'active\' : \'\',\n        onClick: this.changeDomTrue.bind(this, true)\n      }, "\\u0414\\u043E\\u043C\\u043E\\u0444\\u043E\\u043D \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442"), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: this.state.newAddrDom === false ? \'active\' : \'\',\n        onClick: this.changeDomTrue.bind(this, false)\n      }, "\\u0414\\u043E\\u043C\\u043E\\u0444\\u043E\\u043D \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442"))), /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseNewAddr: false\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C")))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.choosePicDialog,\n        fullWidth: true,\n        onClose: function onClose() {\n          return _this16.setState({\n            choosePicDialog: false\n          });\n        },\n        className: "DialogChoosePicDialog"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u0410\\u0434\\u0440\\u0435\\u0441 \\u043A\\u0430\\u0444\\u0435"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            choosePicDialog: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          display: \'flex\',\n          flexDirection: \'column\'\n        }\n      }, this.state.pic_point.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("div", {\n          className: "boxPic " + (_this16.state.orderPic == item.id ? \'active\' : \'\'),\n          id: \'pic_\' + item.id,\n          key: key,\n          onClick: _this16.choosePic.bind(_this16, item.id)\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.raion), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span"\n        }, item.addr, ", c 10:00 \\u0434\\u043E 21:30"));\n      })))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.chooseTimeDialog,\n        fullWidth: true,\n        onClose: this.closeTimeDialog.bind(this),\n        className: "DialogChoosePicDialog"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u0412\\u0440\\u0435\\u043C\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: this.closeTimeDialog.bind(this),\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n        style: {\n          display: \'flex\',\n          flexDirection: \'column\'\n        }\n      }, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        style: {\n          width: \'100%\',\n          paddingBottom: 20\n        }\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "age-native-simple"\n      }, "\\u0414\\u0435\\u043D\\u044C"), /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        displayEmpty: true,\n        value: this.state.orderPredDay,\n        onChange: this.changePredDay,\n        inputProps: {\n          id: \'age-native-simple\'\n        }\n      }, /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n        value: 0\n      }, "\\u041A\\u0430\\u043A \\u043C\\u043E\\u0436\\u043D\\u043E \\u0431\\u044B\\u0441\\u0442\\u0440\\u0435\\u0435"), this.state.date_pred.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          value: item.date\n        }, item.text);\n      }))), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        style: {\n          width: \'100%\',\n          paddingBottom: 20,\n          display: this.state.orderPredDay == 0 ? \'none\' : \'inline-flex\'\n        }\n      }, /*#__PURE__*/react.createElement(InputLabel/* default */.Z, {\n        htmlFor: "age-native-simple1"\n      }, "\\u0412\\u0440\\u0435\\u043C\\u044F"), /*#__PURE__*/react.createElement(Select/* default */.Z, {\n        displayEmpty: true,\n        value: this.state.orderPredTime,\n        onChange: this.changePredTime,\n        inputProps: {\n          id: \'age-native-simple1\'\n        }\n      }, this.state.timePred.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n          key: key,\n          value: item.value\n        }, item.text);\n      })))), /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        onClick: function onClick() {\n          return _this16.setState({\n            chooseTimeDialog: false\n          });\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C")))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        onClose: function onClose() {\n          return _this16.setState({\n            choosePayDialog: false\n          });\n        },\n        "aria-labelledby": "simple-dialog-title",\n        open: this.state.choosePayDialog,\n        fullWidth: true,\n        className: "DialogChoosePayDialog"\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        id: "simple-dialog-title",\n        style: {\n          paddingBottom: 0\n        }\n      }, "\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            choosePayDialog: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(List/* default */.Z, null, this.state.renderPay.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(ListItem/* default */.Z, {\n          button: true,\n          onClick: _this16.changePayMobile.bind(_this16, item.type),\n          key: key\n        }, /*#__PURE__*/react.createElement(ListItemAvatar/* default */.Z, null, /*#__PURE__*/react.createElement(Avatar/* default */.Z, {\n          style: {\n            color: \'#fff\',\n            backgroundColor: \'#000\'\n          }\n        }, item.type == \'cash\' ? /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMoneyBill */.aLp\n        }) : item.type == \'in\' ? /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faCashRegister */.J4t\n        }) : /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faCreditCard */.Ozh\n        }))), /*#__PURE__*/react.createElement(ListItemText/* default */.Z, {\n          primary: item.title\n        }));\n      }))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.orderCheckDop,\n        fullWidth: true,\n        onClose: this.startOrderNext.bind(this),\n        className: "DialogOrderCheckDopDialog"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u0410 \\u043A\\u0430\\u043A \\u0436\\u0435 \\u043F\\u0430\\u043B\\u043E\\u0447\\u043A\\u0438 \\u0438 \\u0441\\u043E\\u0435\\u0432\\u044B\\u0439 \\u0441\\u043E\\u0443\\u0441 ?"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: this.startOrderNext.bind(this),\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n        className: "tableMobile OrderCheckDopDialog"\n      }, this.state.cartItems_dop.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(CartItemMobile, {\n          key: key,\n          item: item,\n          type: "dop"\n        });\n      }))), /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          padding: \'12px 24px\',\n          paddingBottom: 24\n        }\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        style: {\n          width: \'100%\'\n        },\n        onClick: this.startOrderNext.bind(this)\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        style: {\n          width: \'100%\'\n        },\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C")))), this.state.orderCheck === true ? /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.orderCheck,\n        fullWidth: true,\n        onClose: function onClose() {\n          return _this16.setState({\n            orderCheck: false\n          });\n        },\n        className: "DialogOrderCheckDialog"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckTitle"\n      }, "\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430"), /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        className: "closeDialog",\n        onClick: function onClick() {\n          return _this16.setState({\n            orderCheck: false\n          });\n        },\n        icon: free_solid_svg_icons_index_es/* faTimes */.NBC\n      }), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        style: {\n          display: \'flex\',\n          flexDirection: \'column\'\n        }\n      }, parseInt(this.state.orderTimes) == 1 ? null : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u0440\\u0435\\u0434\\u0437\\u0430\\u043A\\u0430\\u0437\\u0430: ", this.state.orderPredDay + \' \' + this.state.orderPredTime), parseInt(this.state.orderType) == 0 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043C: ", this.state.orderAddr ? this.state.orderAddr.city_name + \', \' + this.state.orderAddr.street + \' \' + this.state.orderAddr.home + (parseInt(this.state.orderAddr.pd) == 0 ? \'\' : \', Пд. \' + this.state.orderAddr.pd) + (parseInt(this.state.orderAddr.et) == 0 ? \'\' : \', Эт. \' + this.state.orderAddr.et) + (parseInt(this.state.orderAddr.kv) == 0 ? \'\' : \', Кв. \' + this.state.orderAddr.kv) : null) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0417\\u0430\\u0431\\u0435\\u0440\\u0443: ", this.state.picPointInfo ? this.state.picPointInfo.addr : \'\'), parseInt(this.state.orderType) == 0 ? this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0414\\u043E\\u043C\\u043E\\u0444\\u043E\\u043D \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442") : null : null, this.state.orderPromo.length > 0 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434: ", this.state.orderPromo) : null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u041E\\u043F\\u043B\\u0430\\u0447\\u0443: ", this.state.renderPay.find(function (item) {\n        return item.type == _this16.state.orderPay;\n      })[\'title\']), parseInt(this.state.orderType) == 0 && this.state.orderPay == \'cash\' ? this.state.orderSdacha.length > 0 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "nameSdacha orderCheckText"\n      }, "\\u0421\\u0434\\u0430\\u0447\\u0430 \\u0441: ", this.state.orderSdacha, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 700 300"\n      })) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0411\\u0435\\u0437 \\u0441\\u0434\\u0430\\u0447\\u0438") : null, /*#__PURE__*/react.createElement("table", {\n        className: "tableOrderCheck"\n      }, /*#__PURE__*/react.createElement("tbody", null, items_store.getItems().map(function (item, key) {\n        return parseInt(item.count) > 0 ? /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", {\n          style: {\n            width: \'60%\'\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "orderCheckText"\n        }, item.name)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "orderCheckText"\n        }, item.count)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "namePrice orderCheckText"\n        }, item.all_price, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          width: "20",\n          viewBox: "0 0 700 300"\n        })))) : null;\n      }), this.state.cartItems_promo.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", {\n          style: {\n            width: \'60%\'\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "orderCheckText"\n        }, item.name)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "orderCheckText"\n        }, item.count)), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "namePrice orderCheckText"\n        }, item.allPrice, " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n          width: "20",\n          viewBox: "0 0 700 300"\n        }))));\n      }), parseInt(this.state.orderType) == 0 ? /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", {\n        colSpan: "2"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "namePrice orderCheckText"\n      }, items_store.getSumDiv(), " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 700 300"\n      })))) : null), /*#__PURE__*/react.createElement("tfoot", null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("td", {\n        colSpan: "2"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "orderCheckText bold"\n      }, "\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430")), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "namePrice orderCheckText"\n      }, parseInt(items_store.getAllPrice()) + parseInt(items_store.getSumDiv()), " ", /*#__PURE__*/react.createElement(cart_component_Ruble, {\n        width: "20",\n        viewBox: "0 0 700 300"\n      }))))))), /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          padding: \'12px 24px\',\n          paddingBottom: 24\n        }\n      }, this.state.orderPay == \'card\' ? /*#__PURE__*/react.createElement("a", {\n        href: this.state.newOrderData.pay.formUrl,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        style: {\n          width: \'100%\',\n          margin: \'0px 10px\'\n        },\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437"))) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder",\n        style: {\n          width: \'100%\'\n        },\n        onClick: this.trueOrder.bind(this)\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        style: {\n          width: \'100%\'\n        },\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437")))) : null);\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: cart_component_get_city(propsData),\n        page: \'cart\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: cart_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Cart;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/cart/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/pageAbout/pageAbout.component.jsx\n\n\n\n\n\n\n\n\nfunction pageAbout_component_createSuper(Derived) { var hasNativeReflectConstruct = pageAbout_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction pageAbout_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar pageAbout_component_queryString = __webpack_require__(7563);\n\n\n\nfunction pageAbout_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar PageAbout = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(PageAbout, _React$Component);\n\n  var _super = pageAbout_component_createSuper(PageAbout);\n\n  function PageAbout(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, PageAbout);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      title: \'\',\n      description: \'\',\n      page: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(PageAbout, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'PageAbout\');\n      PageAbout.fetchData(\'/\' + this.state.city_name).then(function (data) {\n        data.page.content = data.page.content.replace(/<a href=\\"\\//g, \'<a href="/\' + _this2.state.city_name + \'/\');\n\n        _this2.setState({\n          title: data.page.title,\n          description: data.page.description,\n          page: data.page\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "PAGEabout mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.page ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: pageAbout_component_get_city(propsData),\n        page: \'about\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: pageAbout_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return PageAbout;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/pageAbout/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/pageJob/pageJob.component.jsx\n\n\n\n\n\n\n\n\nfunction pageJob_component_createSuper(Derived) { var hasNativeReflectConstruct = pageJob_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction pageJob_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar pageJob_component_queryString = __webpack_require__(7563);\n\n\n\nfunction pageJob_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar PageJob = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(PageJob, _React$Component);\n\n  var _super = pageJob_component_createSuper(PageJob);\n\n  function PageJob(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, PageJob);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      title: \'\',\n      description: \'\',\n      page: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(PageJob, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'PageJob\');\n      PageJob.fetchData(\'/\' + this.state.city_name).then(function (data) {\n        data.page.content = data.page.content.replace(/<a href=\\"\\//g, \'<a href="/\' + _this2.state.city_name + \'/\');\n\n        _this2.setState({\n          title: data.page.title,\n          description: data.page.description,\n          page: data.page\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "PAGEjob mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.page ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: pageJob_component_get_city(propsData),\n        page: \'jobs\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: pageJob_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return PageJob;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/pageJob/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/pageInstPay/pageInstPay.component.jsx\n\n\n\n\n\n\n\n\nfunction pageInstPay_component_createSuper(Derived) { var hasNativeReflectConstruct = pageInstPay_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction pageInstPay_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar pageInstPay_component_queryString = __webpack_require__(7563);\n\n\n\nfunction pageInstPay_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar PageInstPay = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(PageInstPay, _React$Component);\n\n  var _super = pageInstPay_component_createSuper(PageInstPay);\n\n  function PageInstPay(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, PageInstPay);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      title: \'\',\n      description: \'\',\n      page: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(PageInstPay, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'PageInstPay\');\n      PageInstPay.fetchData(\'/\' + this.state.city_name).then(function (data) {\n        data.page.content = data.page.content.replace(/<a href=\\"\\//g, \'<a href="/\' + _this2.state.city_name + \'/\');\n\n        _this2.setState({\n          title: data.page.title,\n          description: data.page.description,\n          page: data.page\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "PAGEinstpay mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.page ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: pageInstPay_component_get_city(propsData),\n        page: \'instpayorders\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: pageInstPay_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return PageInstPay;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/pageInstPay/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/pageOferta/pageOferta.component.jsx\n\n\n\n\n\n\n\n\nfunction pageOferta_component_createSuper(Derived) { var hasNativeReflectConstruct = pageOferta_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction pageOferta_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar pageOferta_component_queryString = __webpack_require__(7563);\n\n\n\nfunction pageOferta_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar PageOferta = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(PageOferta, _React$Component);\n\n  var _super = pageOferta_component_createSuper(PageOferta);\n\n  function PageOferta(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, PageOferta);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      title: \'\',\n      description: \'\',\n      page: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(PageOferta, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'PageOferta\');\n      PageOferta.fetchData(\'/\' + this.state.city_name).then(function (data) {\n        data.page.content = data.page.content.replace(/<a href=\\"\\//g, \'<a href="/\' + _this2.state.city_name + \'/\');\n\n        _this2.setState({\n          title: data.page.title,\n          description: data.page.description,\n          page: data.page\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "PAGEoferta mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.page ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: pageOferta_component_get_city(propsData),\n        page: \'publichnaya-oferta\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: pageOferta_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return PageOferta;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/pageOferta/index.js\n\n\n;// CONCATENATED MODULE: ./src/components/pagePolitika/pagePolitika.component.jsx\n\n\n\n\n\n\n\n\nfunction pagePolitika_component_createSuper(Derived) { var hasNativeReflectConstruct = pagePolitika_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction pagePolitika_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar pagePolitika_component_queryString = __webpack_require__(7563);\n\n\n\nfunction pagePolitika_component_get_city(path) {\n  return path.split(\'/\')[1];\n}\n\nvar PagePolitika = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(PagePolitika, _React$Component);\n\n  var _super = pagePolitika_component_createSuper(PagePolitika);\n\n  function PagePolitika(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, PagePolitika);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "_isMounted", false);\n\n    _this.state = {\n      is_load: false,\n      city_name: props.match.params.cityName,\n      title: \'\',\n      description: \'\',\n      page: null\n    };\n    items_store.setCity(props.match.params.cityName);\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(PagePolitika, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      if (document.querySelector(\'.activeCat\')) {\n        document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n      }\n\n      window.scrollTo(0, 0);\n      items_store.setPage(\'PagePolitika\');\n      PagePolitika.fetchData(\'/\' + this.state.city_name).then(function (data) {\n        data.page.content = data.page.content.replace(/<a href=\\"\\//g, \'<a href="/\' + _this2.state.city_name + \'/\');\n\n        _this2.setState({\n          title: data.page.title,\n          description: data.page.description,\n          page: data.page\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Helmet/* Helmet */.q, null, /*#__PURE__*/react.createElement("title", null, this.state.title), /*#__PURE__*/react.createElement("meta", {\n        name: "description",\n        content: this.state.description\n      })), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "PAGEpolitika mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingBottom: 15\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "h1"\n      }, this.state.page ? this.state.page.page_h : \'\')), this.state.page && this.state.page.content ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        container: true,\n        spacing: 3,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        xl: 10,\n        className: "mainContainer",\n        dangerouslySetInnerHTML: {\n          __html: this.state.page.content\n        }\n      }) : null));\n    }\n  }], [{\n    key: "fetchData",\n    value: function fetchData(propsData) {\n      var data = {\n        type: \'get_page_info\',\n        city_id: pagePolitika_component_get_city(propsData),\n        page: \'politika-konfidencialnosti\'\n      };\n      return axios_default()({\n        method: \'POST\',\n        url: \'https://jacofood.ru/src/php/test_app.php\',\n        headers: {\n          \'content-type\': \'application/x-www-form-urlencoded\'\n        },\n        data: pagePolitika_component_queryString.stringify(data)\n      }).then(function (response) {\n        if (response[\'status\'] === 200) {\n          var json = response[\'data\'];\n          return {\n            title: json.page.title,\n            description: json.page.description,\n            page: json.page\n          };\n        }\n      })["catch"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return PagePolitika;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/pagePolitika/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Toolbar/Toolbar.js\nvar Toolbar = __webpack_require__(8358);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/ArrowDropDown.js\nvar ArrowDropDown = __webpack_require__(9039);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Popover/Popover.js\nvar Popover_Popover = __webpack_require__(2387);\n// EXTERNAL MODULE: ./node_modules/react-input-mask/index.js\nvar react_input_mask = __webpack_require__(6627);\nvar react_input_mask_default = /*#__PURE__*/__webpack_require__.n(react_input_mask);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Badge/Badge.js\nvar Badge = __webpack_require__(9009);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Menu/Menu.js + 1 modules\nvar Menu = __webpack_require__(7308);\n;// CONCATENATED MODULE: ./src/components/header/header.component.jsx\n\n\n\n\n\n\n\n\nfunction header_component_createSuper(Derived) { var hasNativeReflectConstruct = header_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction header_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar header_component_queryString = __webpack_require__(7563);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CustomBottomNavigation = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(CustomBottomNavigation, _React$Component);\n\n  var _super = header_component_createSuper(CustomBottomNavigation);\n\n  function CustomBottomNavigation(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, CustomBottomNavigation);\n\n    _this = _super.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      (0,mobx_esm/* autorun */.EH)(function () {\n        _this.setState({\n          allPrice: items_store.getSumDiv() + items_store.getAllPrice(),\n          thisPage: items_store.getPage(),\n          auth: items_store.getToken() ? true : false\n        });\n      });\n    });\n\n    _this.state = {\n      allPrice: 0,\n      thisPage: \'\',\n      auth: false\n    };\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(CustomBottomNavigation, [{\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.allPrice !== nextState.allPrice || this.state.thisPage !== nextState.thisPage || this.state.auth !== nextState.auth;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var this_city = items_store.getCity();\n      return /*#__PURE__*/react.createElement("div", {\n        className: "bottomNavigate"\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this_city + \'/\',\n        exact: true,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faUtensils */.fkH,\n        style: {\n          color: this.state.thisPage == \'home\' ? \'black\' : \'gray\'\n        }\n      })), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this_city + \'/actii\',\n        exact: true,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faGift */.Cly,\n        style: {\n          color: this.state.thisPage == \'actii\' ? \'black\' : \'gray\'\n        }\n      })), this.state.auth === true ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this_city + \'/cart\',\n        exact: true,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(Badge/* default */.Z, {\n        badgeContent: this.state.allPrice,\n        max: 500000,\n        color: "primary"\n      }, /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n        style: {\n          fill: this.state.thisPage == \'cart\' ? \'#CC0033\' : \'#CC0033\'\n        }\n      }))) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root",\n        onClick: this.props.login\n      }, /*#__PURE__*/react.createElement(Badge/* default */.Z, {\n        badgeContent: this.state.allPrice,\n        max: 500000,\n        color: "primary"\n      }, /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, {\n        style: {\n          fill: this.state.thisPage == \'cart\' ? \'#CC0033\' : \'#CC0033\'\n        }\n      }))), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this_city + \'/contact\',\n        exact: true,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faMapMarkerAlt */.FGq,\n        style: {\n          color: this.state.thisPage == \'contact\' ? \'black\' : \'gray\'\n        }\n      })), this.state.auth === true ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this_city + \'/profile\',\n        exact: true,\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root"\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faUser */.ILF,\n        style: {\n          color: this.state.thisPage == \'profile\' ? \'black\' : \'gray\'\n        }\n      })) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "MuiButtonBase-root MuiBottomNavigationAction-root",\n        onClick: this.props.login\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faUser */.ILF,\n        style: {\n          color: this.state.thisPage == \'profile\' ? \'black\' : \'gray\'\n        }\n      })));\n    }\n  }]);\n\n  return CustomBottomNavigation;\n}(react.Component);\n\nfunction header_component_Ruble(props) {\n  return /*#__PURE__*/react.createElement("svg", {\n    width: props.width ? props.width : "50",\n    height: "20",\n    viewBox: props.viewBox ? props.viewBox : "0 0 1500 200",\n    xmlns: "http://www.w3.org/2000/svg"\n  }, /*#__PURE__*/react.createElement("g", null, /*#__PURE__*/react.createElement("path", {\n    id: "svg_1",\n    d: "m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z"\n  })));\n}\n\nvar SimplePopover = /*#__PURE__*/function (_React$Component2) {\n  (0,inherits/* default */.Z)(SimplePopover, _React$Component2);\n\n  var _super2 = header_component_createSuper(SimplePopover);\n\n  function SimplePopover(props) {\n    var _this2;\n\n    (0,classCallCheck/* default */.Z)(this, SimplePopover);\n\n    _this2 = _super2.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "_isMounted", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "componentDidMount", function () {\n      _this2._isMounted = true;\n      var cartItems = items_store.getItems();\n\n      if (cartItems.length > 0) {\n        var newCart = [];\n        cartItems.map(function (item) {\n          if (item.count > 0) {\n            newCart.push(item);\n          }\n        });\n\n        _this2.setState({\n          cartItems: cartItems\n        });\n      }\n\n      (0,mobx_esm/* autorun */.EH)(function () {\n        if (_this2._isMounted) {\n          var _cartItems = items_store.getItems();\n\n          var _newCart = [];\n\n          _cartItems.map(function (item) {\n            if (item.count > 0) {\n              _newCart.push(item);\n            }\n          });\n\n          _this2.setState({\n            cartItems: _newCart,\n            sumDiv: items_store.getSumDiv(),\n            promoName: localStorage.getItem(\'promo_name\') ? localStorage.getItem(\'promo_name\') : \'\'\n          });\n        }\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "handleClick", function (event) {\n      if (items_store.getPage() !== \'cart\') {\n        _this2.setState({\n          anchorEl: event.currentTarget\n        });\n      } else {\n        _this2.handleClose();\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "handleClose", function () {\n      _this2.setState({\n        anchorEl: null\n      });\n    });\n\n    _this2.state = {\n      anchorEl: null,\n      cartItems: [],\n      allPrice: 0,\n      sumDiv: 0,\n      promoName: \'\',\n      promoText: \'\',\n      promoST: false\n    };\n    return _this2;\n  }\n\n  (0,createClass/* default */.Z)(SimplePopover, [{\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: "add",\n    value: function add(id) {\n      items_store.AddItem(id);\n    }\n  }, {\n    key: "minus",\n    value: function minus(id) {\n      items_store.MinusItem(id);\n    }\n  }, {\n    key: "checkPromo",\n    value: function checkPromo() {\n      var _this3 = this;\n\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: header_component_queryString.stringify({\n          type: \'get_promo_web\',\n          city_id: items_store.getCity(),\n          promo_name: this.state.promoName\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        items_store.setPromo(JSON.stringify(json), _this3.state.promoName);\n        var check_promo = items_store.checkPromo();\n\n        if (check_promo.st === false) {\n          localStorage.removeItem(\'promo_name\');\n        }\n\n        if (_this3.state.promoName.length == 0) {\n          _this3.setState({\n            promoText: \'\'\n          });\n        } else {\n          _this3.setState({\n            promoText: check_promo.text,\n            promoST: check_promo.st\n          });\n        }\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this4 = this;\n\n      var open = Boolean(this.state.anchorEl);\n      var id = open ? \'simple-popover\' : undefined;\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        className: "ShopIconBTN",\n        "aria-describedby": id,\n        color: "inherit",\n        "aria-label": "menu",\n        onClick: this.handleClick.bind(this)\n      }, /*#__PURE__*/react.createElement(Badge/* default */.Z, {\n        badgeContent: items_store.getAllPrice() + items_store.getSumDiv(),\n        max: 500000,\n        color: "primary"\n      }, /*#__PURE__*/react.createElement(ShoppingCartOutlined/* default */.Z, null))), /*#__PURE__*/react.createElement(Popover_Popover/* default */.ZP, {\n        id: id,\n        open: open,\n        anchorEl: this.state.anchorEl,\n        onClose: this.handleClose.bind(this),\n        anchorOrigin: {\n          vertical: \'bottom\',\n          horizontal: \'right\'\n        },\n        transformOrigin: {\n          vertical: \'top\',\n          horizontal: \'right\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: 400,\n          padding: 16\n        }\n      }, /*#__PURE__*/react.createElement("table", {\n        className: "TableMini"\n      }, /*#__PURE__*/react.createElement("tbody", null, this.state.cartItems.map(function (item, key) {\n        return /*#__PURE__*/react.createElement("tr", {\n          key: key\n        }, /*#__PURE__*/react.createElement("td", {\n          className: "TableMiniName"\n        }, item.name), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n          disableElevation: true,\n          disableRipple: true,\n          variant: "contained",\n          className: "BtnBorderWOBorder"\n        }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: _this4.minus.bind(_this4, item.item_id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMinus */.Kl4,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          component: "span",\n          className: "CardCountItem"\n        }, item.count)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n          variant: "contained",\n          className: "BtnCardMain",\n          onClick: _this4.add.bind(_this4, item.item_id)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faPlus */.r8p,\n          style: {\n            fontSize: \'1rem\'\n          }\n        })))), /*#__PURE__*/react.createElement("td", {\n          style: {\n            width: \'30%\'\n          }\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "TableMiniPrice"\n        }, item.all_price, " ", /*#__PURE__*/react.createElement(header_component_Ruble, {\n          viewBox: "0 220 700 300",\n          width: "20"\n        }))));\n      })), /*#__PURE__*/react.createElement("tfoot", null, this.state.sumDiv == 0 ? null : /*#__PURE__*/react.createElement("tr", {\n        style: {\n          height: 35\n        }\n      }, /*#__PURE__*/react.createElement("td", {\n        className: "TableMiniFullName"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430:"), /*#__PURE__*/react.createElement("td", {\n        className: "",\n        style: {\n          width: \'30%\',\n          textAlign: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "TableMiniPrice",\n        style: {\n          marginRight: 21\n        }\n      }, this.state.sumDiv, " ", /*#__PURE__*/react.createElement(header_component_Ruble, {\n        viewBox: "0 220 700 300",\n        width: "20"\n      })))), /*#__PURE__*/react.createElement("tr", {\n        style: {\n          height: 35\n        }\n      }, /*#__PURE__*/react.createElement("td", {\n        className: "TableMiniFullName"\n      }, "\\u0421\\u0443\\u043C\\u043C\\u0430:"), /*#__PURE__*/react.createElement("td", {\n        className: "",\n        style: {\n          width: \'30%\',\n          textAlign: \'center\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "TableMiniPrice",\n        style: {\n          marginRight: 21\n        }\n      }, items_store.getAllPrice() + items_store.getSumDiv(), " ", /*#__PURE__*/react.createElement(header_component_Ruble, {\n        viewBox: "0 220 700 300",\n        width: "20"\n      })))))), /*#__PURE__*/react.createElement(Paper/* default */.Z, {\n        component: "div",\n        className: "SpacePromo"\n      }, /*#__PURE__*/react.createElement(InputBase/* default */.Z, {\n        onBlur: this.checkPromo.bind(this),\n        value: this.state.promoName,\n        onChange: function onChange(event) {\n          return _this4.setState({\n            promoName: event.target.value\n          });\n        },\n        placeholder: "\\u041F\\u0440\\u043E\\u043C\\u043E\\u043A\\u043E\\u0434"\n      }), /*#__PURE__*/react.createElement(Divider/* default */.Z, {\n        orientation: "vertical"\n      }), /*#__PURE__*/react.createElement(IconButton_IconButton/* default */.Z, {\n        color: "primary",\n        "aria-label": "directions",\n        onClick: this.checkPromo.bind(this)\n      }, /*#__PURE__*/react.createElement(CheckOutlined/* default */.Z, null))), this.state.promoText.length > 0 ? /*#__PURE__*/react.createElement("div", {\n        className: "DescPromo"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span"\n      }, this.state.promoST === true ? \'Промокод дает:\' : \'Промокодом нельзя воспользоваться. \', " ", this.state.promoText)) : null, /*#__PURE__*/react.createElement("div", {\n        className: "InCart"\n      }, items_store.getToken() !== null ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + items_store.getCity() + \'/cart\',\n        exact: true,\n        style: {\n          textDecoration: \'none\'\n        },\n        onClick: this.handleClose.bind(this)\n      }, /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder"\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem"\n      }, "\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443"))) : /*#__PURE__*/react.createElement(ButtonGroup/* default */.Z, {\n        disableElevation: true,\n        disableRipple: true,\n        variant: "contained",\n        className: "BtnBorder"\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        variant: "contained",\n        className: "BtnCardMain CardInCardItem",\n        onClick: this.props.openLogin\n      }, "\\u0412\\u043E\\u0439\\u0442\\u0438"))))));\n    }\n  }]);\n\n  return SimplePopover;\n}(react.Component);\n\nvar Header = /*#__PURE__*/function (_React$Component3) {\n  (0,inherits/* default */.Z)(Header, _React$Component3);\n\n  var _super3 = header_component_createSuper(Header);\n\n  function Header(props) {\n    var _this5;\n\n    (0,classCallCheck/* default */.Z)(this, Header);\n\n    _this5 = _super3.call(this, props);\n    /*let pathname = window.location.pathname;\n    \n    pathname = pathname.split(\'/\');\n    pathname = pathname[0];*/\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "is_load", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "sms1", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "sms2", false);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "componentDidMount", function () {\n      setTimeout(function () {\n        var cartData = items_store.getCartData();\n\n        if (cartData.orderType || cartData.orderType == 0) {\n          if (cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1) {\n            var allPrice = items_store.getAllPrice();\n\n            if (parseInt(cartData.orderAddr.free_drive) == 1) {\n              if (parseInt(allPrice) > 0) {\n                items_store.setSumDiv(0);\n              } else {\n                items_store.setSumDiv(1);\n              }\n            } else {\n              items_store.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n            }\n          }\n        }\n      }, 300);\n      (0,mobx_esm/* autorun */.EH)(function () {\n        _this5.setState({\n          activePage: items_store.getPage()\n        });\n\n        if (items_store.getCity() !== _this5.state.cityName) {\n          _this5.setState({\n            cityName: items_store.getCity()\n          });\n\n          _this5.load();\n        }\n\n        _this5.setState({\n          userName: items_store.userName\n        });\n      });\n\n      _this5.load();\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "handleKeyPress", function (event) {\n      if (event.key === \'Enter\') {\n        _this5.sendSMS();\n      }\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "handleClick", function (event) {\n      _this5.setState({\n        anchorEl: event.currentTarget\n      });\n    });\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this5), "handleClose", function () {\n      _this5.setState({\n        anchorEl: null\n      });\n    });\n\n    _this5.state = {\n      categoryItems: [],\n      cartItems: [],\n      activePage: \'\',\n      is_load: false,\n      openCity: false,\n      cityName: \'\',\n      testData: [1, 2, 3, 4],\n      cityList: [],\n      openLogin: false,\n      userLogin: \'\',\n      userLoginFormat: \'\',\n      userCode: \'\',\n      stage_1: true,\n      stage_2: false,\n      timerSMS: 59,\n      errPhone: \'\',\n      errSMS: \'\',\n      userName: \'\',\n      soc_link: null,\n      anchorEl: null\n    };\n    return _this5;\n  }\n\n  (0,createClass/* default */.Z)(Header, [{\n    key: "load",\n    value: function load() {\n      var _this6 = this;\n\n      if (!this.is_load) {\n        this.is_load = true;\n\n        if (items_store.getCity() && this.state.categoryItems.length == 0) {\n          fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n            method: \'POST\',\n            headers: {\n              \'Content-Type\': \'application/x-www-form-urlencoded\'\n            },\n            body: header_component_queryString.stringify({\n              type: \'get_cat_web\',\n              city_id: items_store.getCity(),\n              user_id: items_store.getToken()\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (json) {\n            console.log(json);\n            items_store.setUserName(json.user_name);\n            items_store.setDops(json.need_dop);\n            items_store.setAllItems(json.all_items);\n            items_store.setAllItemsCat(json.arr);\n            items_store.setAllItemsCatNew(json.main_cat);\n            items_store.setFreeItems(json.free_items);\n            items_store.setBanners(json.baners);\n            items_store.setCityRU(json.this_city_name_ru);\n\n            _this6.setState({\n              cityList: json.city_list,\n              categoryItems: json.arr,\n              categoryItemsNew: json.main_cat,\n              is_load: true\n            });\n\n            _this6.is_load = false;\n          })["catch"](function (err) {});\n        } else {\n          this.is_load = false;\n        }\n      }\n    }\n  }, {\n    key: "openCity",\n    value: function openCity() {\n      this.setState({\n        openCity: true\n      });\n    }\n  }, {\n    key: "closeCity",\n    value: function closeCity() {\n      this.setState({\n        openCity: false\n      });\n    }\n  }, {\n    key: "chooseCity",\n    value: function chooseCity(city) {\n      var this_addr = window.location.href;\n      localStorage.removeItem(\'cartData\');\n      setTimeout(function () {//window.location.href = this_addr.replace(this.state.cityName, city);\n      }, 300);\n    }\n  }, {\n    key: "getNewLink",\n    value: function getNewLink(city) {\n      var this_addr = window.location.pathname;\n      return this_addr.replace(this.state.cityName, city);\n    }\n  }, {\n    key: "openLogin",\n    value: function openLogin() {\n      this.setState({\n        openLogin: true\n      });\n    }\n  }, {\n    key: "closeLogin",\n    value: function closeLogin() {\n      this.setState({\n        openLogin: false\n      });\n    }\n  }, {\n    key: "sendSMS",\n    value: function sendSMS() {\n      var _this7 = this;\n\n      if (this.sms1 === false) {\n        this.sms1 = true;\n        this.setState({\n          errPhone: \'\',\n          errSMS: \'\'\n        });\n        var number = this.state.userLogin;\n        number = number.split(\' \').join(\'\');\n        number = number.split(\'(\').join(\'\');\n        number = number.split(\')\').join(\'\');\n        number = number.split(\'-\').join(\'\');\n        number = number.slice(1);\n        this.setState({\n          userLoginFormat: number\n        });\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: header_component_queryString.stringify({\n            type: \'create_profile\',\n            number: number\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this7.sms1 = false;\n\n          if (json[\'st\']) {\n            _this7.setState({\n              stage_1: false,\n              stage_2: true,\n              errPhone: \'\'\n            });\n\n            var timerId = setInterval(function () {\n              _this7.setState({\n                timerSMS: _this7.state.timerSMS - 1\n              });\n\n              if (_this7.state.timerSMS == 0) {\n                clearInterval(timerId);\n              }\n            }, 1000);\n          } else {\n            _this7.setState({\n              errPhone: json.text\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: "repeatSMS",\n    value: function repeatSMS() {\n      var _this8 = this;\n\n      if (this.sms2 === false) {\n        this.sms2 = true;\n        this.setState({\n          errSMS: \'\'\n        });\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: header_component_queryString.stringify({\n            type: \'repeat_sms\',\n            number: this.state.userLoginFormat\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this8.sms2 = false;\n\n          if (json[\'st\']) {\n            _this8.setState({\n              timerSMS: 59\n            });\n\n            var timerId = setInterval(function () {\n              _this8.setState({\n                timerSMS: _this8.state.timerSMS - 1\n              });\n\n              if (_this8.state.timerSMS == 0) {\n                clearInterval(timerId);\n              }\n            }, 1000);\n          } else {\n            _this8.setState({\n              errSMS: json.text\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: "checkCode",\n    value: function checkCode() {\n      var _this9 = this;\n\n      this.setState({\n        errSMS: \'\'\n      });\n      fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/x-www-form-urlencoded\'\n        },\n        body: header_component_queryString.stringify({\n          type: \'check_profile\',\n          cod: this.state.userCode,\n          number: this.state.userLoginFormat\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json[\'st\']) {\n          items_store.setToken(json.token, json.name);\n\n          _this9.closeLogin();\n        } else {\n          _this9.setState({\n            errSMS: json.text\n          });\n        }\n      });\n    }\n  }, {\n    key: "changeNumber",\n    value: function changeNumber() {\n      this.setState({\n        stage_1: true,\n        stage_2: false,\n        errPhone: \'\',\n        errSMS: \'\'\n      });\n    }\n  }, {\n    key: "changeCode",\n    value: function changeCode(code) {\n      var _this10 = this;\n\n      code = code.target.value;\n      this.setState({\n        userCode: code\n      });\n\n      if ((parseInt(code) + \'\').length == 4) {\n        setTimeout(function () {\n          _this10.checkCode();\n        }, 500);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this11 = this;\n\n      if (this.state.is_load === false) {\n        return /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n          position: "fixed",\n          className: "header",\n          style: {\n            zIndex: 2\n          }\n        }, /*#__PURE__*/react.createElement(Toolbar/* default */.Z, {\n          className: "sub_header"\n        }, /*#__PURE__*/react.createElement(Grid/* default */.Z, null, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          style: {\n            marginRight: 15\n          }\n        }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          to: "/" + this.state.cityName + "/"\n        }, /*#__PURE__*/react.createElement("img", {\n          alt: "\\u0416\\u0430\\u043A\\u043E \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u0440\\u043E\\u043B\\u043B\\u043E\\u0432 \\u0438 \\u043F\\u0438\\u0446\\u0446\\u044B",\n          src: "https://jacochef.ru/src/img/Bely_fon_logo.png"\n        }))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n          mdDown: true\n        }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          className: "CityProfileNav"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span",\n          onClick: this.openCity.bind(this),\n          style: {\n            display: \'flex\',\n            flexDirection: \'row\'\n          }\n        }, items_store.getCityRU(), " ", /*#__PURE__*/react.createElement(ArrowDropDown/* default */.Z, null)), /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span",\n          onClick: this.openLogin.bind(this)\n        }, "\\u0412\\u043E\\u0439\\u0442\\u0438")), this.state.testData.map(function (item, key) {\n          return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n            item: true,\n            key: key\n          }, /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 120,\n              height: 28,\n              marginRight: 12,\n              backgroundColor: \'#e5e5e5\'\n            }\n          }));\n        }), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true\n        }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          style: {\n            padding: \'4px 8px\'\n          },\n          to: "/" + this.state.cityName + "/actii",\n          className: this.state.activePage == \'actii\' ? "catLink activeCat" : "catLink"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, "\\u0410\\u043A\\u0446\\u0438\\u0438"))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true\n        }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          style: {\n            padding: \'4px 8px\'\n          },\n          to: "/" + this.state.cityName + "/contact",\n          className: this.state.activePage == \'contact\' ? "catLink activeCat" : "catLink"\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, "\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B"))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true\n        }, /*#__PURE__*/react.createElement(SimplePopover, {\n          openLogin: this.openLogin.bind(this)\n        })))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n          lgUp: true\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "thisCity",\n          onClick: this.openCity.bind(this)\n        }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n          icon: free_solid_svg_icons_index_es/* faMapMarkerAlt */.FGq\n        }), " ", items_store.getCityRU()))), this.state.activePage == \'home\' ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          className: "scrollCat"\n        }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n          lgUp: true\n        }, this.state.testData.map(function (item, key) {\n          return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n            item: true,\n            key: key\n          }, /*#__PURE__*/react.createElement("div", {\n            style: {\n              width: 120,\n              height: 28,\n              marginRight: 12,\n              backgroundColor: \'#e5e5e5\'\n            }\n          }));\n        }))) : null);\n      }\n\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(AppBar/* default */.Z, {\n        position: "fixed",\n        className: "header",\n        style: {\n          zIndex: 2\n        }\n      }, /*#__PURE__*/react.createElement(Toolbar/* default */.Z, {\n        className: "sub_header"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        style: {\n          width: \'100%\'\n        }\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        style: {\n          marginRight: 15\n        }\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: "/" + this.state.cityName + "/",\n        onClick: function onClick() {\n          window.scrollTo({\n            top: 0,\n            behavior: \'smooth\'\n          });\n        }\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "\\u0416\\u0430\\u043A\\u043E \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u0440\\u043E\\u043B\\u043B\\u043E\\u0432 \\u0438 \\u043F\\u0438\\u0446\\u0446\\u044B",\n        src: "https://jacochef.ru/src/img/Bely_fon_logo.png"\n      }))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        mdDown: true\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        className: "CityProfileNav"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span",\n        onClick: this.openCity.bind(this),\n        style: {\n          display: \'flex\',\n          flexDirection: \'row\'\n        }\n      }, items_store.getCityRU(), " ", /*#__PURE__*/react.createElement(ArrowDropDown/* default */.Z, null)), items_store.getToken() ? items_store.getUserName() && items_store.getUserName().length > 0 ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: "/" + this.state.cityName + "/profile",\n        className: "cat"\n      }, items_store.getUserName()) : /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: "/" + this.state.cityName + "/profile"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span"\n      }, "\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C")) : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span",\n        onClick: this.openLogin.bind(this)\n      }, "\\u0412\\u043E\\u0439\\u0442\\u0438")), /*#__PURE__*/react.createElement("div", {\n        style: {\n          display: \'flex\',\n          alignItems: \'baseline\',\n          flexDirection: \'row\',\n          width: \'100%\'\n        }\n      }, this.state.categoryItemsNew.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n          item: true,\n          key: key\n        }, _this11.state.activePage == \'home\' ? item.cats.length > 0 ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          id: \'link_\' + item.id,\n          to: "/" + _this11.state.cityName + "/",\n          className: "catLink",\n          style: {\n            padding: \'4px 0.5vw\'\n          },\n          onClick: _this11.handleClick.bind(_this11)\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, item.name)), /*#__PURE__*/react.createElement(Menu/* default */.Z, {\n          id: "simple-menu",\n          anchorEl: _this11.state.anchorEl,\n          keepMounted: true,\n          open: Boolean(_this11.state.anchorEl),\n          onClose: _this11.handleClose.bind(_this11),\n          elevation: 2,\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: \'bottom\',\n            horizontal: \'center\'\n          },\n          transformOrigin: {\n            vertical: \'top\',\n            horizontal: \'center\'\n          }\n        }, item.cats.map(function (it, k) {\n          return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n            key: k,\n            style: {\n              width: \'100%\'\n            }\n          }, /*#__PURE__*/react.createElement(modules/* Link */.rU, {\n            onClick: _this11.handleClose.bind(_this11),\n            to: "cat" + it.id,\n            spy: true,\n            isDynamic: true,\n            onSetActive: function onSetActive(el) {\n              if (document.querySelector(\'.activeCat\')) {\n                document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n              }\n\n              document.querySelector(\'#link_\' + it.id).classList.add(\'activeCat\');\n            },\n            smooth: true,\n            offset: -60,\n            activeClass: "activeCat",\n            id: \'link_\' + it.id,\n            style: (0,defineProperty/* default */.Z)({\n              width: \'max-content\',\n              display: \'flex\',\n              whiteSpace: \'nowrap\',\n              padding: \'4px 0.5vw\'\n            }, "width", \'100%\')\n          }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n            className: "cat",\n            variant: "h5",\n            component: "span"\n          }, it.name)));\n        }))) : /*#__PURE__*/react.createElement(modules/* Link */.rU, {\n          key: key,\n          to: "cat" + item.id,\n          spy: true,\n          isDynamic: true,\n          onSetActive: function onSetActive(el) {\n            if (document.querySelector(\'.activeCat\')) {\n              document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n            }\n\n            document.querySelector(\'#link_\' + item.id).classList.add(\'activeCat\');\n          },\n          smooth: true,\n          offset: -60,\n          activeClass: "activeCat",\n          id: \'link_\' + item.id,\n          style: {\n            width: \'max-content\',\n            display: \'flex\',\n            whiteSpace: \'nowrap\',\n            padding: \'4px 0.5vw\'\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, item.name)) : /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          to: "/" + _this11.state.cityName + "/",\n          className: "catLink",\n          style: {\n            padding: \'4px 0.5vw\'\n          },\n          onClick: function onClick() {\n            typeof window !== \'undefined\' ? localStorage.setItem(\'goTo\', item.id) : {};\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, item.name)));\n      }), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        style: {\n          padding: \'4px 8px\'\n        },\n        to: "/" + this.state.cityName + "/actii",\n        className: this.state.activePage == \'actii\' ? "catLink activeCat" : "catLink"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span"\n      }, "\\u0410\\u043A\\u0446\\u0438\\u0438"))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        style: {\n          padding: \'4px 8px\'\n        },\n        to: "/" + this.state.cityName + "/contact",\n        className: this.state.activePage == \'contact\' ? "catLink activeCat" : "catLink"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        className: "cat",\n        variant: "h5",\n        component: "span"\n      }, "\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B")))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        style: {\n          marginLeft: \'auto\'\n        }\n      }, /*#__PURE__*/react.createElement(SimplePopover, {\n        openLogin: this.openLogin.bind(this)\n      })))), /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "thisCity",\n        onClick: this.openCity.bind(this)\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_solid_svg_icons_index_es/* faMapMarkerAlt */.FGq\n      }), " ", items_store.getCityRU()))), this.state.activePage == \'home\' ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        className: "scrollCat"\n      }, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, this.state.categoryItems.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(modules/* Link */.rU, {\n          key: key,\n          to: "cat" + item.id,\n          spy: true,\n          onSetActive: function onSetActive(el) {\n            if (document.querySelector(\'.activeCat\')) {\n              document.querySelector(\'.activeCat\').classList.remove(\'activeCat\');\n            }\n\n            document.querySelector(\'#link_\' + item.id).classList.add(\'activeCat\');\n            document.getElementById(\'link_\' + item.id).scrollIntoView(true);\n            document.querySelector(\'.scrollCat\').animate({\n              scrollLeft: 200\n            }, 100);\n          },\n          smooth: true,\n          offset: -60,\n          activeClass: "activeCat",\n          id: \'link_\' + item.id\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          className: "cat",\n          variant: "h5",\n          component: "span"\n        }, item.name));\n      }))) : null), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.openCity,\n        fullWidth: true,\n        maxWidth: \'xs\',\n        onClose: this.closeCity.bind(this),\n        "aria-labelledby": "alert-dialog-title",\n        "aria-describedby": "alert-dialog-description",\n        className: "ModalCity"\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        id: "alert-dialog-title"\n      }, "\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434"), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        className: "ModalContent_1_1",\n        style: {\n          paddingBottom: 24,\n          paddingTop: 0\n        }\n      }, this.state.cityList.map(function (item, key) {\n        return /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n          key: key,\n          className: _this11.state.cityName == item.link ? \'active\' : \'\',\n          to: {\n            pathname: _this11.getNewLink(item.link)\n          },\n          onClick: function onClick() {\n            setTimeout(function () {\n              items_store.saveCartData([]);\n              window.location.reload();\n            }, 300);\n          }\n        }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n          variant: "h5",\n          component: "span",\n          className: "ModalLabel"\n        }, item.name));\n      }))), /*#__PURE__*/react.createElement(Dialog/* default */.Z, {\n        open: this.state.openLogin,\n        fullWidth: true,\n        maxWidth: \'xs\',\n        onClose: this.closeLogin.bind(this),\n        "aria-labelledby": "alert-dialog-title",\n        "aria-describedby": "alert-dialog-description",\n        className: "ModalAuth"\n      }, /*#__PURE__*/react.createElement(DialogTitle/* default */.Z, {\n        id: "alert-dialog-title"\n      }, "\\u0412\\u0445\\u043E\\u0434 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442"), /*#__PURE__*/react.createElement(DialogContent/* default */.Z, {\n        className: "ModalContent_1_1"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ModalContent_1_2"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "ModalLabel"\n      }, "\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430"), /*#__PURE__*/react.createElement((react_input_mask_default()), {\n        className: "InputMask",\n        mask: "8 (999) 999-99-99",\n        placeholder: "8 (999) 999-99-99",\n        disabled: !this.state.stage_1,\n        value: this.state.userLogin,\n        onKeyPress: this.handleKeyPress,\n        onChange: function onChange(event) {\n          return _this11.state.stage_1 ? _this11.setState({\n            userLogin: event.target.value\n          }) : {};\n        }\n      }), this.state.stage_2 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "changeNumber",\n        onClick: this.changeNumber.bind(this)\n      }, "\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u0438\\u0442\\u044C \\u043D\\u043E\\u043C\\u0435\\u0440") : null, this.state.errPhone.length > 0 ? /*#__PURE__*/react.createElement("div", {\n        style: {\n          marginTop: 10,\n          padding: 16,\n          backgroundColor: \'#BB0025\',\n          borderRadius: 4\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          fontSize: \'1.1rem\',\n          color: \'#fff\'\n        }\n      }, this.state.errPhone)) : null), this.state.stage_2 ? /*#__PURE__*/react.createElement("div", {\n        className: "ModalContent_1_3"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        className: "ModalLabel"\n      }, "\\u041A\\u043E\\u0434 \\u0438\\u0437 \\u0441\\u043C\\u0441"), /*#__PURE__*/react.createElement("div", {\n        className: "ModalContent_1_2"\n      }, /*#__PURE__*/react.createElement((react_input_mask_default()), {\n        className: "InputMask",\n        mask: "9999",\n        value: this.state.userCode //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n        ,\n        onChange: this.changeCode.bind(this)\n      }), this.state.timerSMS > 0 ? /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          fontSize: \'0.8rem\',\n          paddingTop: 10\n        }\n      }, \'Новое смс доступно через \' + this.state.timerSMS + \' сек.\') : /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          fontSize: \'0.8rem\',\n          paddingTop: 10,\n          cursor: \'pointer\',\n          width: \'fit-content\'\n        },\n        onClick: this.repeatSMS.bind(this)\n      }, "\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043A\\u043E\\u0434")), this.state.errSMS.length > 0 ? /*#__PURE__*/react.createElement("div", {\n        style: {\n          marginTop: 10,\n          padding: 16,\n          backgroundColor: \'#BB0025\',\n          borderRadius: 4\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "h5",\n        component: "span",\n        style: {\n          fontSize: \'1.1rem\',\n          color: \'#fff\'\n        }\n      }, this.state.errSMS)) : null) : null), this.state.stage_1 ? /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          padding: \'12px 24px\'\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        onClick: this.sendSMS.bind(this),\n        style: {\n          backgroundColor: \'#BB0025\',\n          color: \'#fff\',\n          padding: \'6px 30px\'\n        }\n      }, "\\u0412\\u044B\\u0441\\u043B\\u0430\\u0442\\u044C \\u043A\\u043E\\u0434")) : null, this.state.stage_2 ? /*#__PURE__*/react.createElement(DialogActions/* default */.Z, {\n        style: {\n          padding: \'12px 24px\'\n        }\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        onClick: this.checkCode.bind(this),\n        style: {\n          backgroundColor: \'#BB0025\',\n          color: \'#fff\',\n          padding: \'6px 30px\'\n        }\n      }, "\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434")) : null), this.state.activePage == \'home\' ? /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 85,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.1\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 88,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.09\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 91,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.08\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 94,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.07\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 97,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.06\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 100,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.05\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 103,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.04\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 106,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.03\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 109,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.02\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          top: 112,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.01\n        }\n      })) : null, /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement(CustomBottomNavigation, {\n        login: this.openLogin.bind(this)\n      })));\n    }\n  }]);\n\n  return Header;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/header/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/mobx-react/dist/mobxreact.esm.js + 18 modules\nvar mobxreact_esm = __webpack_require__(150);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/free-brands-svg-icons/index.es.js\nvar free_brands_svg_icons_index_es = __webpack_require__(1417);\n;// CONCATENATED MODULE: ./src/components/app/app.component.jsx\n\n\n\n\n\n\n\n\nfunction app_component_createSuper(Derived) { var hasNativeReflectConstruct = app_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }\n\nfunction app_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar app_component_queryString = __webpack_require__(7563);\n\n\n\nvar stores = {\n  itemsStore: items_store\n};\n\n\n\n\nfunction Status(_ref) {\n  var code = _ref.code,\n      children = _ref.children;\n  return /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n    render: function render(_ref2) {\n      var staticContext = _ref2.staticContext;\n      if (staticContext) staticContext.status = code;\n      return children;\n    }\n  });\n}\n\nfunction NotFound() {\n  return /*#__PURE__*/react.createElement(Status, {\n    code: 404\n  }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n    container: true,\n    className: "Contact mainContainer MuiGrid-spacing-xs-3",\n    style: {\n      marginTop: 64\n    }\n  }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n    item: true,\n    xs: 12\n  }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n    variant: "h5",\n    component: "h1"\n  }, "404 \\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430"))));\n}\n\nvar StickyFooter = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(StickyFooter, _React$Component);\n\n  var _super = app_component_createSuper(StickyFooter);\n\n  function StickyFooter(props) {\n    var _this;\n\n    (0,classCallCheck/* default */.Z)(this, StickyFooter);\n\n    _this = _super.call(this, props);\n    /*let pathname = window.location.pathname;\n    \n    pathname = pathname.split(\'/\');\n    pathname = pathname[0];*/\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "componentDidMount", function () {\n      (0,mobx_esm/* autorun */.EH)(function () {\n        _this.setState({\n          cityName: items_store.getCity()\n        });\n\n        _this.loadPageInfo();\n      });\n    });\n\n    _this.state = {\n      soc_link: null,\n      cityName: _this.props.cityName,\n      is_load: false\n    };\n    return _this;\n  }\n\n  (0,createClass/* default */.Z)(StickyFooter, [{\n    key: "loadPageInfo",\n    value: function loadPageInfo() {\n      var _this2 = this;\n\n      if (items_store.getCity()) {\n        fetch(\'https://jacofood.ru/src/php/test_app.php\', {\n          method: \'POST\',\n          headers: {\n            \'Content-Type\': \'application/x-www-form-urlencoded\'\n          },\n          body: app_component_queryString.stringify({\n            type: \'get_page_info\',\n            city_id: items_store.getCity(),\n            page: \'info\'\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this2.setState({\n            soc_link: json.soc_link,\n            is_load: true\n          });\n        })["catch"](function (err) {});\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement("footer", {\n        className: "footer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        container: true,\n        className: "mainContainer"\n      }, /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 3,\n        xl: 3,\n        xs: 12,\n        className: "copy"\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\xA9 \\u0416\\u0430\\u043A\\u043E 2017 - ", new Date().getFullYear())), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 3,\n        xl: 3,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/about\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u041E \\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438")), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/jobs\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438")), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/publichnaya-oferta\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u0430\\u044F \\u043E\\u0444\\u0435\\u0440\\u0442\\u0430"))), /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 3,\n        xl: 3,\n        xs: 12\n      }, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/politika-konfidencialnosti\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u041F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438")), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/contact\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u0438 \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B")), /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: \'/\' + this.state.cityName + \'/instpayorders\',\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(Typography_Typography/* default */.Z, {\n        variant: "body1"\n      }, "\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0430 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432"))), this.state.is_load ? /*#__PURE__*/react.createElement(Grid/* default */.Z, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 3,\n        xl: 3,\n        xs: 12,\n        className: "socIcons"\n      }, this.state.soc_link && this.state.soc_link.link_fb ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: {\n          pathname: this.state.soc_link.link_fb\n        },\n        target: "_blank",\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_brands_svg_icons_index_es/* faFacebookF */.AYu,\n        style: {\n          fontSize: \'2rem\',\n          padding: 10\n        }\n      })) : null, this.state.soc_link && this.state.soc_link.link_inst ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: {\n          pathname: this.state.soc_link.link_inst\n        },\n        target: "_blank",\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_brands_svg_icons_index_es/* faInstagram */.Zzi,\n        style: {\n          fontSize: \'2rem\',\n          padding: 10\n        }\n      })) : null, this.state.soc_link && this.state.soc_link.link_ok ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: {\n          pathname: this.state.soc_link.link_ok\n        },\n        target: "_blank",\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_brands_svg_icons_index_es/* faOdnoklassniki */.eSE,\n        style: {\n          fontSize: \'2rem\',\n          padding: 10\n        }\n      })) : null, this.state.soc_link && this.state.soc_link.link_vk ? /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: {\n          pathname: this.state.soc_link.link_vk\n        },\n        target: "_blank",\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_brands_svg_icons_index_es/* faVk */.iD2,\n        style: {\n          fontSize: \'2rem\',\n          padding: 10\n        }\n      })) : null, /*#__PURE__*/react.createElement(react_router_dom/* NavLink */.OL, {\n        to: {\n          pathname: \'https://t.me/jacofood\'\n        },\n        target: "_blank",\n        style: {\n          textDecoration: \'none\'\n        }\n      }, /*#__PURE__*/react.createElement(index_es/* FontAwesomeIcon */.G, {\n        icon: free_brands_svg_icons_index_es/* faTelegramPlane */.IKq,\n        style: {\n          fontSize: \'2rem\',\n          padding: 10\n        }\n      }))) : null));\n    }\n  }]);\n\n  return StickyFooter;\n}(react.Component);\n\nvar App = /*#__PURE__*/function (_React$Component2) {\n  (0,inherits/* default */.Z)(App, _React$Component2);\n\n  var _super2 = app_component_createSuper(App);\n\n  function App(props) {\n    var _this3;\n\n    (0,classCallCheck/* default */.Z)(this, App);\n\n    _this3 = _super2.call(this, props);\n\n    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this3), "componentDidMount", function () {\n      (0,mobx_esm/* autorun */.EH)(function () {\n        _this3.setState({\n          activePage: items_store.getPage()\n        });\n\n        _this3.setState({\n          cityName: items_store.getCity()\n        });\n      });\n    });\n\n    console.log(_this3.props);\n    _this3.state = {\n      categoryItems: [],\n      cartItems: [],\n      activePage: \'\',\n      is_load: false,\n      openCity: false,\n      cityName: \'\',\n      testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      cityList: [],\n      openLogin: false,\n      userLogin: \'\',\n      userLoginFormat: \'\',\n      userCode: \'\',\n      stage_1: true,\n      stage_2: false,\n      timerSMS: 59,\n      errPhone: \'\',\n      errSMS: \'\',\n      userName: \'\',\n      soc_link: null\n    };\n    return _this3;\n  }\n\n  (0,createClass/* default */.Z)(App, [{\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.activePage !== nextState.activePage || this.state.cityName !== nextState.cityName;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      //{!itemsStore.getToken() && this.state.cityName ? <Redirect push to={"/"+this.state.cityName+"/"} /> : <Profile />}\n      return /*#__PURE__*/react.createElement(mobxreact_esm/* Provider */.zt, stores, /*#__PURE__*/react.createElement("div", {\n        className: "home"\n      }, /*#__PURE__*/react.createElement(Header, null), /*#__PURE__*/react.createElement(react_router/* Switch */.rs, null, /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/contact",\n        exact: true,\n        component: Contact\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/actii",\n        exact: true,\n        component: Actii\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/menu",\n        exact: true,\n        component: Home\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName",\n        exact: true,\n        component: Home\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/item/:id",\n        exact: true,\n        component: Home\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        exact: true,\n        path: "/:cityName/profile/",\n        component: Profile\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/menu/:itemLink",\n        exact: true,\n        component: Home\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/cart",\n        exact: true,\n        component: Cart\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/about",\n        exact: true,\n        component: PageAbout\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/jobs",\n        exact: true,\n        component: PageJob\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/instpayorders",\n        exact: true,\n        component: PageInstPay\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/publichnaya-oferta",\n        exact: true,\n        component: PageOferta\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/:cityName/politika-konfidencialnosti",\n        exact: true,\n        component: PagePolitika\n      }), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: "/"\n      }, /*#__PURE__*/react.createElement(react_router/* Redirect */.l_, {\n        push: true,\n        to: "/togliatti"\n      })), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        component: NotFound\n      })), this.state.activePage == \'cart\' ? /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 72 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.01\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 69 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.02\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 66 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.03\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 63 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.04\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 60 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.05\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 57 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.06\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 54 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.07\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 51 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.08\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 48 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.09\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 45 + 99,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.1\n        }\n      })) : /*#__PURE__*/react.createElement(Hidden/* default */.Z, {\n        lgUp: true\n      }, /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 72,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.01\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 69,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.02\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 66,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.03\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 63,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.04\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 60,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.05\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 57,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.06\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 54,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.07\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 51,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.08\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 48,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.09\n        }\n      }), /*#__PURE__*/react.createElement("div", {\n        style: {\n          width: \'100%\',\n          height: 3,\n          position: \'fixed\',\n          bottom: 45,\n          zIndex: 0,\n          backgroundColor: \'#bababa\',\n          opacity: 0.1\n        }\n      })), /*#__PURE__*/react.createElement(StickyFooter, {\n        cityName: this.state.cityName\n      })));\n    }\n  }]);\n\n  return App;\n}(react.Component);\n;// CONCATENATED MODULE: ./src/components/app/index.js\n\n\n;// CONCATENATED MODULE: ./src/index.prod.js\n\n\n // import App components\n\n // compile App component in `#app` HTML element\n\nreact_dom.hydrate( /*#__PURE__*/react.createElement(react_router_dom/* BrowserRouter */.VK, null, /*#__PURE__*/react.createElement(App, null)), document.getElementById(\'app\'));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6021\n')},8293:(C,I,g)=>{var A={"./ru":238,"./ru.js":238};function Q(C){var I=F(C);return g(I)}function F(C){if(!g.o(A,C)){var I=new Error("Cannot find module '"+C+"'");throw I.code="MODULE_NOT_FOUND",I}return A[C]}Q.keys=function(){return Object.keys(A)},Q.resolve=F,C.exports=Q,Q.id=8293}},C=>{"use strict";C.O(0,[216],(()=>(6021,C(C.s=6021)))),C.O()}]);