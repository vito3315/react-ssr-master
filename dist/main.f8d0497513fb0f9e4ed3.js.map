{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","itemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","console","log","state","is_load","city_name","itemLink","linkItem","title","data","description","_isMounted","autorun","link","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","Helmet","content","Box","component","className","Grid","container","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","allergens","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","Hidden","smUp","textAlign","margin","flexWrap","wordWrap","propsData","page","axios","url","response","cats","all","error","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","get_city","CardItem","Card","CardContent","cursor","openItem","is_new","top","right","padding","CardActions","marginLeft","sm","md","xl","CardItemBot","nextProps","nextState","href","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","acc","curr","b","hash","offset","duration","smooth","checkItem","location","pathname","act_id","innerWidth","openItemPC","replace","history","findIndex","fetchData","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","baners","aktia_id","to","exact","borderRadius","onDragStart","removeEventListener","touchStart","touchEnd","startMove","pageY","handleClose","page_h","cat","main_link","spacing","Backdrop","open","CircularProgress","xsDown","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Actii","actii","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","dangerouslySetInnerHTML","__html","closeDialog","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","type_order_addr_new","time_order_name","time_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","pic_point","choosePic","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","saveDataCustomAddr","id_addr","changePredDay","this_pay","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","aria-describedby","handleClick","transformOrigin","textDecoration","openLogin","HeaderCat","Header","load","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","openCity","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","user_name","sms1","number","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","onSetActive","activeClass","whiteSpace","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","globalState","ReactDOM","GLOBAL_STATE","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"mappings":"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","file":"main.f8d0497513fb0f9e4ed3.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\n\nimport Box from '@material-ui/core/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction get_item(path){\n    return path.split('/')[3];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props.item )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        item.items.push({\n                            kkal: item.kkal,\n                            protein: item.protein,\n                            fat: item.fat,\n                            carbohydrates: item.carbohydrates,\n                            name: ''\n                        })\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        /*if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }*/\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Box component=\"div\" className=\"pcItem\" >\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                        Аллергены\n                                    </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    {this.state.item.allergens.length == 0 ? null :\n                                        <Tab label=\"Аллергены\" {...a11yProps(2)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={2}>\n                                Аллергены\n                            </TabPanel>\n                                    \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n//import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                                //ref={el => this.elementSource = el}\n                            />\n                            <img \n                                //ref={el => this.elementImg = el}\n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={6} sm={6} md={6} xl={6} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                                //ref={el => this.elementSource = el}\n                            />\n                            <img \n                                //ref={el => this.elementImg = el}\n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6} xl={6} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        \n        console.log( 'this.props', this.props )\n        \n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii#act'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if ((time + 500 - Date.now()) < 0) {\n                    itemsStore.getAllItemsCat().map( (item, key) => {\n                        var elem = document.getElementById('cat'+item.id);\n                        if( elem ){\n                            var top = elem.getBoundingClientRect().top + document.body.scrollTop - 60;\n                            \n                            if(top < 0){\n                                arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                            }\n                        }\n                    })\n                    \n                    if( arrMax.length > 0 ){\n                        let max = arrMax.reduce((acc, curr) => acc.b > curr.b ? acc : curr);\n                        \n                        arrMax = [];\n                        \n                        if( max.length > 0 ){\n                            if( document.querySelector('.activeCat') ){\n                                document.querySelector('.activeCat').classList.remove('activeCat');\n                            }\n                            if( document.querySelector('#link_'+max[0].main_id) ){\n                                document.querySelector('#link_'+max[0].main_id).classList.add('activeCat');\n                            }\n                        }\n                    }\n                    \n                    time = Date.now();\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let hash = window.location.pathname;\n                \n                let checkItem = hash.split('/item/');\n                \n                if( checkItem.length > 1 ){\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    let item = allItems.find( (item) => item.link == act_id );\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(item.id);\n                    }else{\n                        this.openItemPC(item.id);\n                    }\n                    \n                    let str = window.location.pathname;\n                    str.replace(\"/item/\"+act_id, '');\n                    \n                    this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        Home.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                page: data.page,\n                title: data.title,\n                description: data.description,\n            } );\n        } );\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat(),\n                mainLink: itemsStore.getMainLink()\n            })\n            \n            this.loadBanners(itemsStore.getBanners());\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden smUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden xsDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden smUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <Hidden xsDown>\n                                                <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Hidden>\n                                            <Hidden smUp>\n                                                <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                            </Hidden>\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                        \n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            \n                            <MuiDialogContent className=\"modalActiiContent\">\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </MuiDialogContent>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            if( window.location.search.length > 3 ){\n                \n                let order_pay = window.location.search;\n                \n                let p1 = order_pay.split('&');\n        \t\tlet bank = p1[0].split('bank=');\n        \t\tbank = bank[1];\n\n        \t\tlet order_id = p1[1].split('orderId=');\n                order_id = order_id[1];\n                \n                this.checkPay(bank, order_id);            \n            }\n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            \n            let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n            \n            if( check_reload.length > 0 ){\n                setTimeout(()=>{\n                    this.loadData();\n                }, 6000)\n            }\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch('https://jacofood.ru/src/php/test_app.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: false,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }else{\n                        let data = {\n                            orderType: cartData.orderType,\n                            orderAddr: '',\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: '',\n                            orderPredTime: '',\n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha,\n                            \n                        };\n                        \n                        itemsStore.saveCartData(data);\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }else{\n                    if( this.state.pic_point.length > 0 ){\n                        this.choosePic(this.state.pic_point[0]['id']);\n                    }\n                    \n                    if( this.state.my_addr.length > 0 ){\n                        this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                    }\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            this.props.history.push('/'+this.state.city_name);\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( this.state.orderPromo.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.newAddrInfo && parseInt(this.state.newAddrInfo.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                    })\n                }else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street+' '+this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\">\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv )\n                                        } />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\">\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\"> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        \n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }else{\n                this.is_load = false;\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        localStorage.removeItem('cartData');\n        setTimeout(()=>{\n            //window.location.href = this_addr.replace(this.state.cityName, city);\n        }, 300)\n        \n    }\n    \n    getNewLink(city){\n        let this_addr = this.state.this_link;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 === false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms1 = false;\n                \n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        \n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }} \n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route\n                            path='/sitemap.xml'\n                            exact={ true }\n                        >\n                            <h1>Hello World</h1>\n                        </Route>\n                        \n                        <Route\n                            component={ NotFound }\n                        />\n                    </Switch>\n                    \n                 \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}