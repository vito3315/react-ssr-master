{"version":3,"sources":["webpack://react-ssr/./src/components/header/header.component.jsx"],"names":["queryString","require","CustomBottomNavigation","props","autorun","setState","allPrice","itemsStore","thisPage","auth","state","nextProps","nextState","this","this_city","className","to","exact","icon","faUtensils","style","color","faGift","Badge","badgeContent","max","ShoppingCartOutlined","fill","Typography","onClick","login","faMapMarkerAlt","faUser","React","Ruble","width","height","viewBox","xmlns","d","SimplePopover","_isMounted","cartItems","length","newCart","map","item","count","push","sumDiv","promoName","localStorage","getItem","event","anchorEl","currentTarget","handleClose","promoText","promoST","id","fetch","method","headers","body","stringify","type","city_id","promo_name","then","res","json","JSON","check_promo","st","removeItem","text","open","Boolean","undefined","IconButton","aria-describedby","aria-label","handleClick","bind","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","key","name","ButtonGroup","disableElevation","disableRipple","variant","Button","minus","item_id","faMinus","fontSize","component","add","faPlus","all_price","textAlign","marginRight","Paper","InputBase","onBlur","checkPromo","value","onChange","target","placeholder","Divider","orientation","CheckOutlined","textDecoration","openLogin","Header","setTimeout","cartData","orderType","orderAddr","parseInt","free_drive","sum_div","is_load","activePage","cityName","load","userName","sendSMS","console","log","data","all","other","cats","need_dop","all_items","arr","main_cat","free_items","baners","this_link","categoryItemsNew","categoryItems","openCity","city","testData","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","user_id","user_name","this_city_name_ru","err","window","location","href","replace","sms1","number","split","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","AppBar","position","zIndex","Toolbar","Grid","alt","src","display","flexDirection","ArrowDropDown","link","Hidden","lgUp","backgroundColor","scrollTo","top","behavior","mdDown","alignItems","Menu","keepMounted","elevation","getContentAnchorEl","it","k","MenuItem","spy","isDynamic","onSetActive","el","document","querySelector","classList","remove","smooth","offset","activeClass","whiteSpace","setItem","marginLeft","getElementById","scrollIntoView","Dialog","fullWidth","maxWidth","closeCity","aria-labelledby","DialogTitle","DialogContent","paddingBottom","paddingTop","pathname","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","marginTop","borderRadius","changeCode","cursor","repeatSMS","DialogActions","opacity"],"mappings":"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","file":"header.796838d9119ac4faf012.js","sourcesContent":["import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/actii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contact'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        \n        if( cartItems.length > 0 ){\n            \n            let newCart = [];\n            \n            cartItems.map((item) => {\n                if( item.count > 0 ){\n                    newCart.push(item)\n                }\n            })\n            \n            this.setState({\n                cartItems: cartItems\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    <tr key={key}>\n                                        <td className=\"TableMiniName\">{item.name}</td>\n                                        <td>\n                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                    <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                </Button>\n                                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                        <td style={{ width: '30%' }}> \n                                            <div className=\"TableMiniPrice\">\n                                                {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props )\n        \n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n        itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n        itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n        itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n        itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n        itemsStore.setBanners(this.props.data.all.other.cats.baners)\n        //itemsStore.setCityRU(json.this_city_name_ru);\n        \n        \n        this.state = {      \n            this_link: this.props.this_link,\n            categoryItemsNew: this.props.data.all.other.cats.main_cat,\n            \n            categoryItems: this.props.data.all.other.cats.arr,\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city,\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data.all.other.cats.city_list,\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null\n        };\n    }\n    \n    componentDidMount = () => {\n        \n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true;\n            \n            if( itemsStore.getCity() && this.state.categoryItems.length == 0 ){\n                fetch('https://jacofood.ru/src/php/test_app.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    console.log( json )\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    //itemsStore.setDops(json.need_dop);\n                    //itemsStore.setAllItems(json.all_items);\n                    //itemsStore.setAllItemsCat(json.arr);\n                    //itemsStore.setAllItemsCatNew(json.main_cat);\n                    //itemsStore.setFreeItems(json.free_items);\n                    //itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        //cityList: json.city_list,\n                        //categoryItems: json.arr, \n                        //categoryItemsNew: json.main_cat,\n                        is_load: true,\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }else{\n                this.is_load = false;\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    chooseCity(city){\n        let this_addr = window.location.href;\n        localStorage.removeItem('cartData');\n        setTimeout(()=>{\n            //window.location.href = this_addr.replace(this.state.cityName, city);\n        }, 300)\n        \n    }\n    \n    getNewLink(city){\n        let this_addr = this.state.this_link;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 === false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms1 = false;\n                \n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch('https://jacofood.ru/src/php/test_app.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/actii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contact\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName+\"/\"} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }} \n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName+\"/\"} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/actii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contact\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    <ScrollLink \n                                        key={key}\n                                        to={\"cat\"+item.id} \n                                        spy={true} \n                                        onSetActive={(el) => { \n                                            if( document.querySelector('.activeCat') ){\n                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                            }\n                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                            \n                                            document.getElementById('link_'+item.id).scrollIntoView(true);\n                                            \n                                            /*if( document.querySelector('.scrollCat') ){\n                                                document.querySelector('.scrollCat').animate({\n                                                    scrollLeft: 200\n                                                }, 100);\n                                            }*/\n                                        }} \n                                        smooth={true} \n                                        offset={-60} \n                                        activeClass=\"activeCat\" \n                                        id={'link_'+item.id} \n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                    </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}