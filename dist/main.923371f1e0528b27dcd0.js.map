{"version":3,"file":"main.923371f1e0528b27dcd0.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n\n  promoText = '';\n  promoST = null;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      if( promoName.length == 0 ){\n        itemsStore.promoText = '';\n        itemsStore.promoST = null;\n      }else{\n        itemsStore.promoText = check_promo.text;\n        itemsStore.promoST = check_promo.st;\n      }\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    //this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод не найден или уже активирован.'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }else{\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      \n\n      \n\n      \n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nimport TextField from '@mui/material/TextField';\nimport { height } from '@mui/system';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport function IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='ActionsCartButtonStart'>\n                <Button variant=\"outlined\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class MiniActionsCartButtonPrize extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButtonPrize'>\n                <div variant=\"contained\">\n                    { parseInt(this.props.count) == 1 ? \n                        <span>В подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span> \n                            : \n                        <span>{this.props.count} шт. в подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span>\n                    }\n                    <IconRuble style={{ width: 12, height: 12, fill: '#525252', marginLeft: 5 }} />\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class MyTextInput extends React.PureComponent {\n    constructor(props) {\n      super(props);\n          \n      this.state = {\n        type: 'text'\n      };\n    }\n    \n    render(){\n      return (\n        <TextField \n            sx={{ height: 60 }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n          onBlur={this.props.onBlur ? this.props.onBlur : null}\n          disabled={ this.props.disabled || this.props.disabled === true ? true : false }\n          variant=\"outlined\" \n          size={'small'} \n          color='primary'\n          multiline={this.props.multiline ? this.props.multiline : false}\n          maxRows={this.props.maxRows ? this.props.maxRows : 1}\n          type={ this.props.type ? this.props.type : this.state.type }\n          style={{ width: '100%' }} \n          className={ this.props.className ? this.props.className : '' }\n        />\n      )\n    }\n  }","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      //backgroundColor: '#f5f5f9',\n      //color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material/Box';\n\n//import LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconClose } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n\n\n\n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            //modules: [Navigation, Pagination, A11y, Autoplay],\n\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            //autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                //clickable: true,\n                \n            },\n\n            /*pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},*/\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    render() {\n\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"} style={{ overflow: 'hidden', position: 'relative' }}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" />\n                        <div className=\"swiper-button-next\" />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        //const width = window.innerWidth;\n\n        let width = 0;\n        let GRID = 0;\n\n        //const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 1280;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 320;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"outlined\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                if( this._isMounted === true ){\n                    this.setState( {\n                        page: data.page,\n                        title: data.title,\n                        description: data.description,\n\n\n                    } );\n                }\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat()\n                })\n            }\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <React.Fragment key={k}>\n                                            <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Grid>\n                                        \n                                            <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                            </Grid>\n                                        </React.Fragment>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    \n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Box>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    \n                    <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Box>\n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Box>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Grid>\n                                            \n                                                <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Grid>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </DialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Dialog disableElevation maxWidth={'md'} sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog disableElevation maxWidth={'lg'} sx={{ display: { xs: 'none', lg: 'block' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Dialog sx={{ display: { xs: 'block', md: 'none' } }} disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                    { this.state.openItem.items.length == 1 ? null :\n                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                    }\n\n                                    <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                        { this.state.openItem.items.map( (item, key) =>\n                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                    </div>\n                                                </div>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) }\n                                    </div>\n                                    \n                                    \n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'block', sm: 'none' } }} disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                        <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                            { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                                    :\n                                                null\n                                            }\n                                            { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                null\n                                                    :\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                            }\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog sx={{ display: { xs: 'none', lg: 'block' } }} disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@mui/material/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport AppBar from '@mui/material/AppBar';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'none', lg: 'block' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'block', lg: 'none' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                        size=\"small\"\n                                    />\n                                    <TextField \n                                        InputProps={{ readOnly: true }} \n                                        label=\"Номер телефона\" \n                                        value={this.state.info.user.login} \n                                        className=\"input\" \n                                        size=\"small\"\n                                    />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField \n                                            label=\"Дата рождения\" \n                                            className=\"input\" \n                                            InputProps={{ readOnly: true }} \n                                            value={this.state.info.user.date_bir} \n                                            size=\"small\"\n                                        />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\" size=\"small\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                    size=\"small\"\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                  size=\"small\"\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                        size=\"small\"\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={\n                                            <Checkbox \n                                                checked={ parseInt(this.state.spam) == 1 ? true : false } \n                                                name=\"checkedC\" \n                                                sx={{\n                                                    '&.Mui-checked': {\n                                                        color: '#c03',\n                                                    },\n                                                }}\n                                            />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </DialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel \n                                        key={key} \n                                        value={item.id} \n                                        control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } \n                                        label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                        </ButtonGroup>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport AppBar from '@mui/material/AppBar';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nimport Input from '@mui/material/Input';\n\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\">\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >{this.state.count}</Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = '';\n\n        let street1 = document.querySelector('#newAddrStreet').value;\n        let street2 = document.querySelector('#newAddrStreetModal').value;\n\n        street = street1.length > 0 ? street1 : street2.length > 0 ? street2 : '';\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                \n                \n                <Grid item container sx={{ display: { xs: 'none', sm: 'flex' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={ \n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Accordion>\n                            <AccordionSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className=\"newAddr\">\n                                <div>\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"newAddrStreet\"\n                                        size=\"small\"\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                        options={this.state.all_addr.map((option) => option.value)}\n                                        renderInput={(params) => (\n                                            <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                        )}\n                                    />\n                                    <TextField \n                                        label=\"Дом\" \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        value={this.state.newAddrHome} \n                                        onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField \n                                        label=\"Подъезд\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrPD} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Этаж\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrET} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Квартира\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrKV} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />  \n                                </div>\n                                <div>\n                                    <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                        <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                        <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                    </ButtonGroup>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1}>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </TabPanel>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className='_comment_'>\n                            <TextField\n                                id=\"outlined-multiline-flexible\"\n                                label=\"Комментарий курьеру\"\n                                multiline\n                                rowsMax={2}\n                                value={this.state.orderComment}\n                                onChange={this.changeComment}\n                                variant=\"outlined\" \n                                size={'small'} \n                                type={ 'text' }\n                            />\n\n                        </div>\n                            :\n                        null\n                    }\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Оплата</FormLabel>\n                            <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                {this.state.renderPay.map((item, key) => \n                                    <FormControlLabel key={key} value={item.type} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={item.title} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                            <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                <FormControlLabel value='1' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Как можно быстрее\" />\n                                <FormControlLabel value='2' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Предзаказ\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    {this.state.orderTimes == 2 ?\n                        <div>\n                            <FormControl style={{ width: '30%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                    displayEmpty\n                                    value={this.state.orderPredDay}\n                                    onChange={this.changePredDay}\n                                    inputProps={{\n                                    id: 'age-native-simple',\n                                    }}\n                                >\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '20%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    displayEmpty\n                                    size='small'\n                                    value={this.state.orderPredTime}\n                                    onChange={this.changePredTime}\n                                    inputProps={{\n                                    id: 'age-native-simple1',\n                                    }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                            :\n                        null\n                    }\n                    \n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                    </div>\n                    <div>\n                        <table className=\"tableCart\">\n                            <tbody>\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <tr className=\"rowAboutDop\">\n                                    <td colSpan='3'>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                        <br />\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                    </td>\n                                </tr>\n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Доставка:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Итого:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"orderSdacha\">\n                            <div>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                    <Input\n                                        type=\"number\"\n                                        id=\"standard-adornment-weight\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>    \n                            :\n                        null\n                    }\n                    <div className=\"promoOrder\">\n                        <div>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                    id=\"PROMONAME\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                </Grid>\n            \n            \n                <Grid item container sx={{ display: { xs: 'flex', sm: 'none' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                this.state.orderAddr.city_name+', '+\n                                this.state.orderAddr.street+' '+\n                                this.state.orderAddr.home+\n                                \n                                ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                    : ''}</Typography>\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                        <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                        </div>\n                    </TabPanel>\n                    \n                    <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                    </div>\n                    <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                    </div>\n                    <div style={{ marginTop: 15 }}>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.orderPromo}\n                                onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                onKeyPress={this.enterPromoMobile}\n                                id=\"PromoMobile\"\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.orderPromoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                    </div>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Комментарий курьеру\"\n                                    multiline\n                                    rowsMax={2}\n                                    value={this.state.orderComment}\n                                    onChange={this.changeComment}\n                                    variant=\"outlined\" \n                                    size={'small'} \n                                    type={ 'text' }\n                                />\n                            </form>\n                        </div>\n                            :\n                        null\n                    }\n                                            \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type=\"number\"\n                                    style={{ width: '100%' }}\n                                    value={this.state.orderSdacha}\n                                    onChange={this.changeSdacha}\n                                    endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                    label=\"Подготовить сдачу с\"\n                                />\n                            </FormControl>\n                        </div>\n                        :\n                        null\n                    }\n                    \n                    <div>\n                        <div className=\"tableMobile\">\n                            {this.state.cartItems_main.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            {this.state.cartItems_promo.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            <div className=\"boxItem rowAboutDop\">\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                <br />\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                            </div>\n                            \n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            \n                        </div>\n                        \n                        \n                    </div>\n                \n                    <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                        <div style={{ padding: '5px 0px' }}>\n                            <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div style={{ paddingBottom: 5 }}>\n                            <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </Grid>\n                \n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreetModal\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, MiniActionsCartButtonPrize, IconRuble, MyTextInput } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport Modal from '@mui/material/Modal';\n// web.cjs is required for IE11 support\nimport { useSpring, animated } from '@react-spring/web';\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n      from: { opacity: 0 },\n      to: { opacity: open ? 1 : 0 },\n      onStart: () => {\n        if (open && onEnter) {\n          onEnter();\n        }\n      },\n      onRest: () => {\n        if (!open && onExited) {\n          onExited();\n        }\n      },\n    });\n  \n    return (\n      <animated.div ref={ref} style={style} {...other}>\n        {children}\n      </animated.div>\n    );\n});\n\nFade.propTypes = {\n    children: PropTypes.element,\n    in: PropTypes.bool.isRequired,\n    onEnter: PropTypes.func,\n    onExited: PropTypes.func,\n};\n\nfunction SpringModal() {\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n  \n    return (\n        <div>\n            <Button onClick={handleOpen}>Open modal</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Box className='modalLoginStart'>\n                        <div className='loginHeader'>\n                            <Typography component=\"h2\">Мой аккаунт</Typography>\n                        </div>\n                        \n                        \n                        <MyTextInput label=\"Телефон\" value={ '' } func={ () => {} } />\n                        <MyTextInput label=\"Пароль\" value={ '' } func={ () => {} } />\n\n                        <Typography component=\"span\">Забыли пароль ?</Typography>\n\n                        <Typography component=\"span\">Войти</Typography>\n                        <Typography component=\"span\">Создать новый аккаутн</Typography>\n                        <div className='loginSMS'>\n                            <Typography component=\"span\">Войти по смс</Typography>\n                        </div>\n                        \n                    </Box>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            originPrice: 0,\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 1000)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        let allPrice = itemsStore.getSumDiv();\n\n        newCart.map( (item) => {\n            allPrice += parseInt(item.one_price) * parseInt(item.count);\n        } )\n\n        newCart.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            newCart[ key ]['img_new'] = this_item['img_new'];\n            newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n            newCart[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: newCart,\n            originPrice: allPrice,\n        })\n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n\n                    promoText: itemsStore.promoText,\n                    promoST: itemsStore.promoST,\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                let allPrice = itemsStore.getSumDiv();\n\n                newCart.map( (item) => {\n                    allPrice += parseInt(item.one_price) * parseInt(item.count);\n                } )\n\n                this.setState({\n                    originPrice: allPrice,\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        itemsStore.getInfoPromo(this.state.promoName);\n\n        /*fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })*/\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    //anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButtonPrize\" colSpan=\"2\">\n                                                <MiniActionsCartButtonPrize count={item.count} price={item.all_price} />\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        { this.state.originPrice != this.state.allPrice ?\n                                            <div className='originPrice'>\n                                                <span>\n                                                    { new Intl.NumberFormat('ru-RU').format(this.state.originPrice) } \n                                                    <IconRuble style={{ width: 14, height: 14, fill: 'rgba(27,27,31,0.2)', marginLeft: 5 }} />\n                                                </span>\n                                            </div>\n                                                :\n                                            <div>\n                                                { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                                <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                            </div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n\n                            { this.state.originPrice != this.state.allPrice ?\n                                <div className=\"DescPromoPrice\">\n                                    { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                </div>\n                                    :\n                                null\n                            }\n\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n\n                            <SpringModal />\n\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n  \nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n                \n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\" component=\"h1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","this","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","setItems","length","setTimeout","getInfoPromo","setToken","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","check_promo","checkPromo","st","promoText","promoST","text","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","IconClose","MiniActionsCartButton","ButtonGroup","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Button","Intl","NumberFormat","width","height","marginLeft","paddingBottom","ActionsCartButton","MiniActionsCartButtonPrize","MyTextInput","state","TextField","sx","label","value","onChange","func","onBlur","disabled","size","color","multiline","maxRows","firebaseAPP","Badge","new","hit","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","Typography","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","maxWidth","typography","pxToRem","border","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","xs","sm","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","paddingLeft","alignContent","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","pagination","navigation","nextEl","prevEl","overflow","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","loading","CardActions","flexWrap","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","index","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","href","page_h","cat","main_link","spacing","margin","md","lg","xl","Backdrop","zIndex","CircularProgress","Dialog","fullScreen","TransitionComponent","DialogTitle","disableTypography","IconButton","itemId","fullWidth","handleClosePC","DialogContent","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","icon","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","role","hidden","a11yProps","Ruble","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","changeName","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","nextProps","nextState","img","imgUpdate","faGift","faMinus","faPlus","gutterBottom","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","street1","street2","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","Fade","onEnter","onExited","useSpring","from","opacity","onStart","onRest","animated","SpringModal","setOpen","Modal","closeAfterTransition","BackdropComponent","BackdropProps","timeout","in","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","ShoppingCartOutlined","faMapMarkerAlt","faUser","SimplePopover","newCart","originPrice","anchorEl","currentTarget","keyCode","Boolean","undefined","handleClick","Popover","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}