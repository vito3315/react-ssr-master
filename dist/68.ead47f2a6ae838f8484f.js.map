{"version":3,"sources":["webpack://react-ssr/./src/components/contact/contact.component.jsx"],"names":["queryString","require","ControlledAccordions","props","React","expanded","setExpanded","points","className","map","item","key","Accordion","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","Typography","variant","component","raion","addr","AccordionDetails","style","flexDirection","padding","organization","inn","kpp","ogrn","full_addr","phone","Contact","document","querySelector","classList","remove","window","scrollTo","itemsStore","dynamicallyLoadScript","fetchData","state","city_name","then","data","setState","title","page","description","fetch","method","headers","body","stringify","type","city_id","res","json","points_zone","point","length","push","JSON","parse","unic_point","check","new_point","parseInt","is_load","setTimeout","loadMap","err","match","params","cityName","script","createElement","src","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","add","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","Grid","container","Helmet","this","name","content","xs","lg","md","xl","sm","sum_div","href","phone_new","width","height","marginRight","backgroundColor","propsData","path","split","axios","url","response","error","console","log"],"mappings":"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","file":"68.ead47f2a6ae838f8484f.js","sourcesContent":["import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            \n            title: '',\n            description: '',\n            \n            city_name: props.match.params.cityName,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        //iconImageHref: 'https://jacofood.ru/src/img/other/Favikon.png',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}"],"sourceRoot":""}