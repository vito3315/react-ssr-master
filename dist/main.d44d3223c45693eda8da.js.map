{"version":3,"file":"main.d44d3223c45693eda8da.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButtonStart'>\n                <Button variant=\"contained\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" >\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { sm: 'none', md: 'none', lg: 'none', xl: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        const width = window.innerWidth;\n\n        const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"contained\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n\n\n                } );\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden mdUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden smDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden mdUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Hidden xsDown>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ padding: '30px 16px', display: 'flex', width: '100%' }}>\n                                                        <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ display: 'flex', padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Hidden lgUp>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                        { this.state.openItem.items.length == 1 ? null :\n                                            <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                        }\n\n                                        <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                            { this.state.openItem.items.map( (item, key) =>\n                                                <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                        <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                            <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                            <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                            <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                        </div>\n                                                    </div>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                        <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) }\n                                        </div>\n                                        \n                                        \n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                            <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                                { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                        :\n                                                    null\n                                                }\n                                                { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                    null\n                                                        :\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                }\n                                                <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                            </div>\n                                        </div>\n                                        \n                                        <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                            {this.state.openModalPCSetItems.map( (item, key) =>\n                                                <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                        { item.img_app.length == 0 || !item.img_app ?\n                                                            <picture>\n                                                                <source \n                                                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                    type=\"image/webp\" \n                                                                />\n                                                                <img \n                                                                    src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                    alt={item.name}\n                                                                    title={item.name}\n                                                                    style={{ width: '100%', height: 'auto' }}\n                                                                />\n                                                            </picture>\n                                                                :\n                                                            <picture>\n                                                                <source srcset={`\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                                <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                            </picture>\n                                                        }\n                                                    </div>\n                                                    <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden only={['xs', 'sm', 'lg', 'xl']}>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                                ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                            } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            size=\"small\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            size=\"small\"\n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                        id=\"PROMONAME\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    onKeyPress={this.enterPromoMobile}\n                                    id=\"PromoMobile\"\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, IconRuble } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 300)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        console.log( cartItems )\n\n        cartItems.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            cartItems[ key ]['img_new'] = this_item['img_new'];\n            cartItems[ key ]['img_new_update'] = this_item['img_new_update'];\n            cartItems[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice()\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                console.log( newCart )\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }}/>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        <div>\n                                            { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                            <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","MiniActionsCartButton","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Intl","NumberFormat","width","height","marginLeft","paddingBottom","ActionsCartButton","firebaseAPP","Badge","new","color","hit","state","size","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","tooltip","maxWidth","typography","pxToRem","border","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","sx","sm","md","lg","xl","paddingLeft","alignContent","xs","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","index","nextEl","prevEl","slidePrev","slideNext","prev","next","Ruble","IconClose","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","Typography","overflow","CardActions","flexWrap","ButtonGroup","Button","CardItemBot","nextProps","nextState","href","gutterBottom","info_weight","ShoppingCartOutlined","icon","faMinus","faPlus","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","page_h","cat","main_link","spacing","margin","Hidden","mdUp","Backdrop","zIndex","CircularProgress","smDown","xsDown","smUp","Dialog","fullScreen","TransitionComponent","disableTypography","IconButton","itemId","lgUp","fullWidth","handleClosePC","only","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","value","role","hidden","a11yProps","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","mdDown","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","keyCode","Boolean","undefined","handleClick","Popover","anchorPosition","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}