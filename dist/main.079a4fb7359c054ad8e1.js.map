{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/react-ssr-master/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","itemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setToken","setTimeout","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","Ruble","props","width","height","viewBox","xmlns","d","TabPanel","children","value","index","other","role","hidden","aria-labelledby","a11yProps","get_item","path","split","propTypes","PropTypes","Item","event","newValue","setState","itemTab","console","log","state","is_load","city_name","itemLink","linkItem","title","data","description","_isMounted","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","Helmet","content","Box","component","className","Grid","container","style","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","info_weight","AppBar","backgroundColor","color","zIndex","elevation","Tabs","aria-label","onChange","changeTab","bind","justifyContent","Tab","label","disableRipple","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","tmp_desc","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","border","Button","minus","icon","faMinus","fontSize","faPlus","Hidden","smUp","textAlign","margin","flexWrap","wordWrap","propsData","page","axios","url","response","cats","all","error","React","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","spaceBetween","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","handleDragStart","e","preventDefault","get_city","CardItem","Card","CardContent","cursor","openItem","is_new","top","right","padding","CardActions","marginLeft","sm","md","xl","CardItemBot","nextProps","nextState","href","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","offset","duration","smooth","location","pathname","findIndex","fetchData","loadBanners","testData","openModal","openModalPC","banners_pc","banners_mobile","baners","aktia_id","to","exact","borderRadius","onDragStart","openItemPC","removeEventListener","touchStart","touchEnd","startMove","pageY","handleClose","page_h","cat","main_link","spacing","Backdrop","open","CircularProgress","xsDown","Dialog","fullScreen","onClose","TransitionComponent","disableTypography","faTimes","itemId","maxWidth","fullWidth","handleClosePC","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","dynamicallyLoadScript","points_zone","point","unic_point","new_point","loadMap","err","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","lg","phone_new","marginRight","Actii","actii","indexOf","act_id","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","dangerouslySetInnerHTML","__html","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","search","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","history","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","order","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","size","Close","mdDown","date_end","lgUp","flex","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","desc","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","free_drive","pic_point","choosePic","def_type","renderPay","pay_active","pays","dev","dev_mini","pic","saveData","my_addr","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","saveDataCustomAddr","id_addr","changePredDay","this_pay","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","OutlinedInput","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","Badge","badgeContent","fill","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","aria-describedby","handleClick","transformOrigin","textDecoration","openLogin","HeaderCat","Header","load","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","openCity","cityList","city_list","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","user_name","sms1","number","join","slice","timerId","setInterval","clearInterval","sms2","cod","token","closeLogin","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","whiteSpace","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","onKeyPress","handleKeyPress","changeNumber","changeCode","repeatSMS","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"mappings":"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","file":"main.079a4fb7359c054ad8e1.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@material-ui/core/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n  }\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        console.log( this.props )\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        /*if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }*/\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Box component=\"div\" className=\"pcItem\" >\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100vh' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLink as Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n//import { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: true,\n            loop: true,\n            centeredSlidesBounds: false,\n            setWrapperSize: true,\n            autoHeight: true,\n            spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: this.state.type == 'pc' ? 2 : 2,\n            \n            autoplay: true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this.state.type == 'pc' ? true : true,\n            pagination: this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className=\"swiper-wrapper _h2_\">\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                {this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\">\n                    \n                    <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                                style={{ minHeight: 150 }}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions className=\"CardAction\">\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                            <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\">\n                    <Grid style={{ position: 'relative' }} item xs={6} sm={6} md={6} xl={6} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.webp?\"+this.state.item.img_new_update} \n                                type=\"image/webp\" \n                                //ref={el => this.elementSource = el}\n                            />\n                            <img \n                                //ref={el => this.elementImg = el}\n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"300х200.jpg?\"+this.state.item.img_new_update} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} md={6} xl={6} className=\"SecondBox\">\n                        <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n                        <Typography className=\"CardInfoItem\" component=\"p\" onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.tmp_desc}</Typography>\n                        <div>\n                            <Typography gutterBottom className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble width=\"20\" viewBox=\"200 -200 400 600\" /></Typography>\n                            {this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                        <ShoppingCartOutlinedIcon color='inherit'  />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    startMove = 0;\n    activeID = 0;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openModal: false,\n            openModalPC: false,\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii/act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/actii/act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 250, borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', borderRadius: 15 }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if ((time + 500 - Date.now()) < 0) {\n                    AllItemsCat.map( (item, key) => {\n                        var elem = document.getElementById('cat'+item.id);\n                        if( elem ){\n                            var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                            \n                            if(top < 0){\n                                arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                            }\n                        }\n                    })\n                    \n                    if( arrMax.length > 0 ){\n                        let max = arrMax[ arrMax.length-1 ];\n                        \n                        arrMax = [];\n                        \n                        if( max ){\n                            if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                if( document.querySelector('.activeCat') ){\n                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                }\n                                if( document.querySelector('#link_'+max.main_id) ){\n                                    document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                }\n                                \n                                this.activeID = parseInt(max.main_id);\n                            }\n                        }\n                    }\n                    \n                    time = Date.now();\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                /*let hash = window.location.pathname;\n                \n                let checkItem = hash.split('/item/');\n                \n                if( checkItem.length > 1 ){\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n                    let item = allItems.find( (item) => item.link == act_id );\n                    \n                    if( window.innerWidth <= 400 ){\n                        this.openItem(item.id);\n                    }else{\n                        this.openItemPC(item.id);\n                    }\n                    \n                    let str = window.location.pathname;\n                    str.replace(\"/item/\"+act_id, '');\n                    \n                    this.props.history.replace({ pathname: checkItem[0] })\n                }*/\n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n                } );\n            } );\n        }\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            this.setState({\n                allItems: itemsStore.getAllItemsCat(),\n                mainLink: itemsStore.getMainLink()\n            })\n            \n            this.loadBanners(itemsStore.getBanners());\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        console.log( 'show item', item )\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        this.setState({\n            openModalPC: false,\n            openItem: null\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden smUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden xsDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden smUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                        <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                    </Grid>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                                <Hidden xsDown>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Hidden>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.handleClose.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <Dialog maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item\" open={this.state.openModalPC}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 50 }} onClick={this.handleClosePC.bind(this)}>\n                                    <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#CC0033' }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            \n                            <MuiDialogContent className=\"modalActiiContent\">\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} />\n                            </MuiDialogContent>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        var script = document.createElement(\"script\");  // create a script DOM node\n        script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n        document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'],\n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\t//hintContent: point['addr'],\n    \t\t\t\t\t//balloonContent: point['addr'],\n                        address: point['addr'],\n                    }, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\ticonLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"span\" className=\"p20\">Стоимость доставки: {this.state.points[0].sum_div} руб.</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.pathname;\n                \n                if( hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                    \n                    //this.props.history.replace({ pathname: '/'+this.state.city_name+'/akcii' })\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изминились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            if( window.location.search.length > 3 ){\n                \n                let order_pay = window.location.search;\n                \n                let p1 = order_pay.split('&');\n        \t\tlet bank = p1[0].split('bank=');\n        \t\tbank = bank[1];\n\n        \t\tlet order_id = p1[1].split('orderId=');\n                order_id = order_id[1];\n                \n                this.checkPay(bank, order_id);            \n            }\n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        if( !itemsStore.getToken() ){\n            window.location.pathname = '/'+this.state.city_name;\n            //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n        }\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_user_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            \n            let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n            \n            this.setState({ \n                info: json, \n                is_load: true,\n                arr_day: arr_day,\n                userMail: json.user.mail,\n                spam: json.user.spam,\n                userName: json.user.name\n            });\n            \n            if( check_reload.length > 0 ){\n                setTimeout(()=>{\n                    this.loadData();\n                }, 6000)\n            }\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            \n            console.log( json )\n            \n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                console.log( json )\n                \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: this.state.showOrder.street.name,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Активирывать промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут через: ' : 'будет готов через: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"Почта\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faRubleSign, faCreditCard, faMoneyBill, faCashRegister, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: false,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: 'cash',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadData(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_by_mi_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken()\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                my_addr: json.get_my_addr,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n            \n            setTimeout(() => {\n                let cartData = itemsStore.getCartData();\n    \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    \n                    this.setState({\n                        orderType: cartData.orderType,\n                        orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                        orderPic: cartData.orderPic,\n                        orderComment: cartData.orderComment,\n                        \n                        orderTimes: cartData.orderTimes,\n                        orderPredDay: cartData.orderPredDay,\n                        orderPredTime: cartData.orderPredTime,                \n                        \n                        orderPay: cartData.orderPay,\n                        orderSdacha: cartData.orderSdacha\n                    })\n                    \n                    if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                        setTimeout(() => {\n                            this.loadTimePred();   \n                        }, 300)\n                    }else{\n                        let data = {\n                            orderType: cartData.orderType,\n                            orderAddr: '',\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: '',\n                            orderPredTime: '',\n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha,\n                            \n                        };\n                        \n                        itemsStore.saveCartData(data);\n                    }\n                    \n                    setTimeout(() => {\n                        if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                            this.choosePic(cartData.orderPic);\n                        }\n                    }, 300)\n                    \n                    if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                        let allPrice = itemsStore.getAllPrice();\n                        \n                        if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                            if( parseInt(allPrice) > 0 ){\n                                itemsStore.setSumDiv(0);\n                            }else{\n                                itemsStore.setSumDiv(1);\n                            }\n                        }else{\n                            itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                        }\n                    }\n                    \n                    setTimeout(()=>{\n                        let type = cartData.orderTimes,\n                            type_order = cartData.orderType;\n                        \n                        if( type_order == 0 ){\n                            if( type == 1 ){\n                                this.setState({\n                                    renderPay: cartData.orderAddr && parseInt(cartData.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                                })\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.dev_mini,\n                                })\n                            }\n                        }else{\n                            this.setState({\n                                renderPay: this.state.pays.pic,\n                            })\n                        }\n                    }, 300)\n                }else{\n                    if( this.state.pic_point.length > 0 ){\n                        this.choosePic(this.state.pic_point[0]['id']);\n                    }\n                    \n                    if( this.state.my_addr.length > 0 ){\n                        this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                    }\n                }\n                \n                if (typeof window !== 'undefined') {\n                    setTimeout(()=>{\n                        if( localStorage.getItem('promo_name') ){\n                            this.setState({\n                                orderPromo: localStorage.getItem('promo_name')\n                            })\n                            \n                            setTimeout(()=>{\n                                this.checkPromo();\n                            }, 300)\n                        }\n                    }, 1000)\n                }\n            }, 300)\n        });\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('cart');\n        \n        if( !itemsStore.getToken() ){\n            window.location.pathname = '/'+this.state.city_name;\n            //this.props.history.push('/'+this.state.city_name);\n        }\n        \n        this.loadData();\n        \n        Cart.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        let cartItems = itemsStore.getItems();\n        let allItems = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        \n        let cartItems_new = [];\n        \n        if( cartItems.length > 0 && allItems.length > 0 ){\n            cartItems.map((item) => {\n                let thisitem = allItems.filter( (item_) => item_.id == item.item_id )[0];\n                \n                if(thisitem){\n                    cartItems_new.push({\n                        id: item.item_id,\n                        cat_id: thisitem.cat_id,\n                        name: item.name,\n                        desc: thisitem.tmp_desc,\n                        count: item.count,\n                        allPrice: item.all_price,\n                        img: thisitem.img_new,\n                        imgUpdate: thisitem.img_new_update,\n                    })\n                }\n            })\n            \n            let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n            let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n            let need_dop = itemsStore.check_need_dops();\n            \n            this.setState({\n                cartItems_main: main,\n                cartItems_dop: dop,\n                cartItems_need_dop: need_dop,\n                \n                sumDiv: itemsStore.getSumDiv(),\n                allPrice: itemsStore.getAllPrice()\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                \n                let cartItems = itemsStore.getItems();\n                let allItems = itemsStore.getAllItems();\n                let need_dop = itemsStore.check_need_dops();\n                let promoItems = itemsStore.getItemsPromo();\n                \n                let cartItems_new = [];\n                let cartPromoItems = [];\n                \n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                \n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                \n                let dop_new = [];\n                \n                need_dop.map((item) => {\n                    let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                    \n                    if( !cart_item ){\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: 0,\n                            allPrice: 0,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }else{\n                        dop_new.push({\n                            id: item.id,\n                            cat_id: item.cat_id,\n                            name: item.name,\n                            desc: item.tmp_desc,\n                            count: cart_item.count,\n                            allPrice: cart_item.allPrice,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartPromoItems.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: thisitem.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                this.setState({\n                    cartItems_dop: []\n                })\n                \n                this.setState({\n                    cartItems_dop: dop_new,\n                })\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_need_dop: need_dop,\n                    cartItems_promo: cartPromoItems,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        if( parseInt(thisitem.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: thisitem && parseInt(thisitem.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                })\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                });\n                def_type = 'cash';\n            }\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.orderPromo\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.orderPromo );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( this.state.orderPromo.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 0 : 1,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.newAddrInfo && parseInt(this.state.newAddrInfo.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                    })\n                }else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                    orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.orderAddr && parseInt(this.state.orderAddr.pay_active) == 1 ? this.state.pays.dev : this.state.pays.dev_mini,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( parseInt(item.item_id) == 17 && parseInt(item.count) > 0 ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                this.clickOrderStart = false;  \n                this.startOrderNext(); \n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    window.location.pathname = '/'+this.state.city_name+'/profile';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    render() {\n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv ) } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудь добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 ? this.state.pic_point.find( (item) => item.id == this.state.orderPic )['addr'] : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseTimeDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePayDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 ? '' : ', Кв. '+item.kv )\n                                        } />\n                                        <FontAwesomeIcon icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.setState({ newAddrPD: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.setState({ newAddrET: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.setState({ newAddrKV: event.target.value }) }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 1 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\">\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\"> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        \n        setTimeout(() => {\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            this.setState({\n                userName: itemsStore.userName\n            })\n        })\n        \n        this.load();\n    }\n    \n    load(){\n        if( !this.is_load ){\n            this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n            }else{\n                this.is_load = false;\n            }\n        }\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        this.setState({\n            openLogin: true\n        })\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false\n        })\n    }\n    \n    sendSMS(){\n        if( this.sms1 === false ){\n            this.sms1 = true;\n            \n            this.setState({\n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'create_profile', \n                    number: number\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms1 = false;\n                \n                if( json['st'] ){\n                    this.setState({ \n                        stage_1: false,\n                        stage_2: true, \n                        errPhone: ''\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                      errPhone: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: ''\n            });\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'repeat_sms', \n                    number: this.state.userLoginFormat\n                })\n            }).then(res => res.json()).then(json => {\n                this.sms2 = false;\n                \n                if( json['st'] ){\n                    this.setState({\n                        timerSMS: 59\n                    })\n                \n                    let timerId = setInterval(() => {\n                        this.setState({\n                            timerSMS: this.state.timerSMS-1\n                        })\n                        if( this.state.timerSMS == 0 ){\n                            clearInterval(timerId);\n                        }\n                    }, 1000);\n                }else{\n                    this.setState({\n                        errSMS: json.text\n                    });\n                }\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden lgUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden mdDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {itemsStore.getToken() ?\n                                        itemsStore.getUserName() && itemsStore.getUserName().length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{itemsStore.getUserName()}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden lgUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden lgUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        \n                            \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменеить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n                \n                {this.state.activePage == 'home' ?\n                    <Hidden lgUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden lgUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className=\"footer\">\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                 \n                    {this.state.activePage == 'cart' ?\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                            :\n                        <Hidden lgUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}