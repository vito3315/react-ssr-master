{"version":3,"file":"main.dcebc411d3296c120778.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRubleSign, faInfoCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport Popover from '@material-ui/core/Popover';\nimport Hidden from '@material-ui/core/Hidden';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@material-ui/core/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 300\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nfunction IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nfunction IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n}))(Tooltip);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n            <div>\n              {children}\n              </div>   \n        )}\n      </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nfunction ItemInfoPopover(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'ItemInfoPopover' : undefined;\n\n    if( props.items.length == 0 ){\n        return null;\n    }\n\n    return (\n        <div>\n            <IconButton aria-describedby={id} edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\n                <FontAwesomeIcon icon={faInfoCircle} style={{ fontSize: '1.2rem' }} />\n            </IconButton>\n      \n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <div className={props.items.length == 1 ? 'MainItemPopover MainItemPopoverOne' : 'MainItemPopover MainItemPopoverLot'}>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                            </tr>\n                            {props.items.map((item, key) => \n                                <tr key={key}>\n                                    <td>\n                                        <div className=\"NamePopover\">\n                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                        </div>\n                                        <div className=\"OtherPopover\">\n                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Popover>\n        </div>\n    );\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    render() {\n        /*if(!this.state.is_load){\n            return (\n                <Grid container spacing={3} className=\"MainItem mainContainer\">\n                    <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div style={{ width: 200, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 400, height: 400, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <div style={{ width: 500, height: 60, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                        <div style={{ width: 500, height: 30, backgroundColor: '#e5e5e5' }} />\n                    </Grid>\n                </Grid>\n            )\n        }*/\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Box component=\"div\" className=\"pcItem\" >\n                    <Grid container className=\"MainItem mainContainer\" style={{ paddingLeft: '6%', paddingRight: '6%' }}>\n                        <Grid item xs={6} style={{ paddingRight: 12, display: 'flex', alignItems: 'center', paddingTop: 60 }}>\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                        </Grid>\n                        <Grid item xs={6} style={{ paddingLeft: 12, position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">{this.state.item.info_weight}</Typography>\n                            \n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0, paddingTop: 10 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    {this.state.item.items && this.state.item.items.length == 0 && this.state.item.tmp_desc.length == 0 ? null :\n                                        <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    }\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15 }}>\n                                <div style={{ maxHeight: 250, overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15 }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: 300, overflowY: 'auto', overflowX: 'hidden' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                                                <picture style={{ height: 'auto', width: 100, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: 65 }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\">\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\">{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\">{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', position: 'absolute', bottom: -30, width: '65%' }}>\n                                \n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5, paddingBottom: 2 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                { false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\" style={{ fontSize: '1.2rem' }}>{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n                <Hidden smUp>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ paddingLeft: '4%', paddingRight: '4%', height: '100%' }}>\n                        <Grid item xs={12} style={{ paddingRight: 12 }}>\n                            <picture id=\"forSwiper\">\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ height: 'auto', width: '100%', paddingTop: 20 }}\n                                />\n                            </picture>\n                            \n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n                        <Grid item xs={12} style={{ position: 'relative' }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                                <Tabs aria-label=\"simple tabs example\" className=\"itemTabs\" value={this.state.itemTab} onChange={this.changeTab.bind(this)} style={{ justifyContent: 'center' }}>\n                                    <Tab label=\"Состав\" {...a11yProps(0)} disableRipple={true} />\n                                    {this.state.item.items && this.state.item.items.length == 0 ? null :\n                                        <Tab label=\"Пищевая ценность\" {...a11yProps(1)} disableRipple={true} />\n                                    }\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={this.state.itemTab} index={1} style={{ width: '100%', marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }} className={this.state.item.items && this.state.item.items.length == 1 ? 'MainItemPopover tab MainItemPopoverOne' : 'MainItemPopover tab MainItemPopoverLot'}>\n                                    <table>\n                                        <tbody>\n                                            \n                                            { this.state.item.info_weight.length > 0 ?\n                                                <tr>\n                                                    <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Вес: {this.state.item.info_weight}</Typography></td>\n                                                </tr>\n                                                    :\n                                                null\n                                            }\n                                            \n                                            \n                                            <tr>\n                                                <td><Typography variant=\"h5\" className=\"OtherMiniPopover\" component=\"span\">Пищевая ценность на 100 г</Typography></td>\n                                            </tr>\n                                            {this.state.item.items && this.state.item.items.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div className=\"NamePopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Белки:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.protein} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Жиры:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.fat} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Углеводы:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                        <div className=\"OtherPopover\">\n                                                            <Typography variant=\"h5\" component=\"span\">Энерг. ценность:</Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.kkal} ккал</Typography>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </TabPanel>\n                            <TabPanel value={this.state.itemTab} index={0} style={{ marginTop: 10, marginBottom: 15, minHeight: '30vh' }}>\n                                { this.state.item.items && this.state.item.items.length > 1 ?\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflowY: 'auto', overflowX: 'hidden', position: 'relative' }}>\n                                        {this.state.item.items && this.state.item.items.map((item, key) =>\n                                            <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '10px 0px' }}>\n                                                <picture style={{ height: 'auto', width: 70, display: 'table' }}>\n                                                    <source \n                                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.webp?\"+item.img_new_update} \n                                                        type=\"image/webp\" \n                                                    />\n                                                    <img \n                                                        src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"300х200.jpg?\"+item.img_new_update} \n                                                        alt={item.name}\n                                                        title={item.name}\n                                                        style={{ height: 'auto', width: '100%' }}\n                                                    />\n                                                </picture>\n                                                <div className=\"itemMiniText\" style={{ overflow: 'hidden', flexWrap: 'wrap', paddingRight: 15 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"dopItemName\" style={{ width: '100%' }}>{item.name}</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemDesc\" style={{ width: '100%', wordWrap: 'normal' }}>{item.tmp_desc}</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                        :\n                                    <div style={{ maxHeight: '30vh', height: '100%', overflow: 'auto' }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"ItemDesc\">{this.state.item.tmp_desc}</Typography>    \n                                    </div>\n                                }\n                            </TabPanel>\n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                <div className=\"newBTN\" onClick={this.add.bind(this)}>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ItemPriceValue\" style={{ paddingLeft: 5 }}>{ parseInt(this.state.count) == 0 ? parseInt(this.state.item.price) : parseInt(this.state.item.price) * parseInt(this.state.count) }</Typography>\n                                    <Ruble viewBox=\"0 0 600 300\" width=\"20\" />\n                                     \n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </div>\n                                \n                                {false && this.state.count == 0 ?\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.add.bind(this)}>\n                                            <ShoppingCartOutlinedIcon color='inherit'  />\n                                        </Button>\n                                    </ButtonGroup>\n                                        :\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\" style={{ border: 'none' }}>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                            <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                            <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                        </Button>\n                                        <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                            <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                        </Button>\n                                    </ButtonGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </div>\n        )\n    }\n}\n\nexport class Item2 extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        let item_name = '';\n\n        let count = \"\"+this.state.count;\n\n        count = count.split(\"\");\n\n        count = count[ count.length - 1 ];\n\n        if( parseInt( this.state.item.cat_id ) == 4 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'сет';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'сета';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'сетов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 14 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'пицца';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'пиццы';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'пицц';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 9 || parseInt( this.state.item.cat_id ) == 10 || parseInt( this.state.item.cat_id ) == 12 || parseInt( this.state.item.cat_id ) == 13 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'ролл';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'ролла';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'роллов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 6 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'напиток';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'напитка';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'напитков';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 7 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'соус';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'соуса';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'соусов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 5 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'закуска';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'закуски';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'закусок';\n            }\n        }\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" >\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item style={{ width: '56.4%', margin: '2% 2.25% 2% 4.5%', display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'relative' }}>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    <Badge size={'small'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'small'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item style={{ width: '56.4%', margin: '2% 2.25% 2% 4.5%', display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'relative' }}>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    <Badge size={'small'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'small'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item style={{ width: '31.3%', minHeight: 465, paddingLeft: '2.25%', marginRight: '5.5%', marginTop: '6%', marginBottom: '6%', justifyContent: 'start', position: 'relative' }}>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ position: 'absolute', bottom: 0 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 300, height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 16, height: 16, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ position: 'absolute', bottom: 0 }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: 296, height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 16, height: 16, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Hidden smUp>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Hidden>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nfunction IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport LazyLoad from 'react-lazyload';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nimport Swiper from \"swiper\";\nimport SwiperCore, { Pagination, Navigation, A11y, Autoplay } from 'swiper';\nSwiperCore.use([Navigation, Pagination, A11y, Autoplay]);\nimport \"swiper/swiper.min.css\";\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    prev(){\n        this.swiper.slidePrev();\n    }\n    \n    next(){\n        this.swiper.slideNext();\n    }\n     \n    render() {\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" onClick={this.prev.bind(this)} />\n                        <div className=\"swiper-button-next\" onClick={this.next.bind(this)} />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"64\"\n        height=\"64\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item, Item2 } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        let item_name = '';\n\n        let count = \"\"+this.state.count;\n\n        count = count.split(\"\");\n\n        count = count[ count.length - 1 ];\n\n        if( parseInt( this.state.item.cat_id ) == 4 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'сет';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'сета';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'сетов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 14 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'пицца';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'пиццы';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'пицц';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 9 || parseInt( this.state.item.cat_id ) == 10 || parseInt( this.state.item.cat_id ) == 12 || parseInt( this.state.item.cat_id ) == 13 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'ролл';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'ролла';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'роллов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 6 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'напиток';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'напитка';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'напитков';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 7 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'соус';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'соуса';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'соусов';\n            }\n        }\n\n        if( parseInt( this.state.item.cat_id ) == 5 ){\n            if( parseInt( count ) == 1 ){\n                item_name = 'закуска';\n            }\n\n            if( parseInt( count ) > 1 && parseInt( count ) < 5 ){\n                item_name = 'закуски';\n            }\n\n            if( parseInt( count ) > 4 || parseInt( count ) == 0 ){\n                item_name = 'закусок';\n            }\n        }\n\n        const width = window.innerWidth;\n\n        const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                    <span style={{ fontSize: '1.25rem', fontFamily: 'Roboto', fontWeight: 700, color: '#525252', textTransform: 'initial' }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                    <IconRuble style={{ width: 16, height: 16, fill: '#525252', marginLeft: 5 }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <button style={{ width: 30, height: 30, padding: 0, borderRadius: 40, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                    <div>\n                                        <span style={{ fontSize: '1.25rem', fontFamily: 'Roboto', fontWeight: 700, color: '#525252' }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                        <IconRuble style={{ width: 16, height: 16, fill: '#525252', marginLeft: 5 }} />\n                                    </div>\n                                    <button style={{ width: 40, height: 40, padding: 0, borderRadius: 40, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                </div>\n                            </ButtonGroup>\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 500, color: '#525252', width: 80, height: 30, padding: 0, backgroundColor: '#fff', border: '1px solid #F9BC23', borderRadius: 30, backgroundColor: 'rgb(255, 255, 255)', border: '1px solid rgb(249, 188, 35)', borderRadius: 30 }} onClick={this.add.bind(this)}>\n                                        В корзину за {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 28, borderRadius: 40, border: '1px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 28, height: 28, padding: 0, marginLeft: 13, color: '#525252', fontSize: '0.875rem', fontFamily: 'Roboto', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: 'transparent', border: 'transparent' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '0.875rem', fontFamily: 'Roboto', fontWeight: 500, color: '#525252' }}>{this.state.count}</span>\n                                        </div>\n                                        <button style={{ width: 28, height: 28, padding: 0, marginRight: 10, color: '#525252', fontSize: '0.875rem', fontFamily: 'Roboto', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: 'transparent', border: 'transparent' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    page: data.page,\n                    title: data.title,\n                    description: data.description,\n\n\n                } );\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            this.setState({\n                allItems: itemsStore.getAllItemsCat()\n            })\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    <Hidden mdUp>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Hidden>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    <Hidden smDown>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Hidden>\n                    <Hidden mdUp>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Hidden>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Hidden xsDown>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ padding: '30px 16px', display: 'flex', width: '100%' }}>\n                                                        <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                                <Hidden smUp>\n                                                    <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ display: 'flex', padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                        <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                    </Grid>\n                                                </Hidden>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </MuiDialogTitle>\n                            <div>\n                                <Item2 itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Hidden lgUp>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item2 itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                        <Item2 itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, backgroundColor: 'rgba(0, 0, 0, 0.6)', borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                        { this.state.openItem.items.length == 1 ? null :\n                                            <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                        }\n\n                                        <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                            { this.state.openItem.items.map( (item, key) =>\n                                                <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                        <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                            <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                            <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                            <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                        </div>\n                                                    </div>\n                                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                        <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                            </div>\n                                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                                <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) }\n                                        </div>\n                                        \n                                        \n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden smUp>\n                                <Dialog disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                    <MuiDialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -47, left: 8, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                            <IconClose style={{ width: 25, height: 25 }} />\n                                        </IconButton>\n                                    </MuiDialogTitle>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                        <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                            <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                                { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                        :\n                                                    null\n                                                }\n                                                { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                    null\n                                                        :\n                                                    <>\n                                                        <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                        <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                    </>\n                                                }\n                                                <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                            </div>\n                                        </div>\n                                        \n                                        <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                            {this.state.openModalPCSetItems.map( (item, key) =>\n                                                <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                        { item.img_app.length == 0 || !item.img_app ?\n                                                            <picture>\n                                                                <source \n                                                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                    type=\"image/webp\" \n                                                                />\n                                                                <img \n                                                                    src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                    alt={item.name}\n                                                                    title={item.name}\n                                                                    style={{ width: '100%', height: 'auto' }}\n                                                                />\n                                                            </picture>\n                                                                :\n                                                            <picture>\n                                                                <source srcset={`\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                    https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                                <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                            </picture>\n                                                        }\n                                                    </div>\n                                                    <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                        <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n\n                            <Hidden only={['xs', 'sm', 'lg', 'xl']}>\n                                <Dialog disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 2000, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                            \n                            <Hidden only={['xs', 'sm', 'md']}>\n                                <Dialog disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                    <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 2000, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose />\n                                    </IconButton>\n                                    \n                                    <MuiDialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '2.25%', alignContent: 'start' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                                <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </MuiDialogContent>\n                                </Dialog>\n                            </Hidden>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Hidden mdDown>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Hidden lgUp>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Hidden>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                    />\n                                    <TextField InputProps={{ readOnly: true }} label=\"Номер телефона\" value={this.state.info.user.login} className=\"input\" />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField label=\"Дата рождения\" className=\"input\" InputProps={{ readOnly: true }} value={this.state.info.user.date_bir} />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={<Checkbox checked={ parseInt(this.state.spam) == 1 ? true : false } name=\"checkedC\" />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </MuiDialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <Hidden xsDown>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                            </ButtonGroup>\n                        </Hidden>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Input from '@material-ui/core/Input';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                <Hidden xsDown>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                                <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                    {this.state.my_addr.map((item, key) => \n                                        <div key={key} className=\"boxAddr\">\n                                            <FormControlLabel value={item.id} control={<Radio />} label={ \n                                                item.city_name+', '+\n                                                item.street+' '+\n                                                item.home+\n                                                ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                                ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                                ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                                ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                            } />\n                                            <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                        </div>\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                            <Accordion>\n                                <AccordionSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails className=\"newAddr\">\n                                    <div>\n                                        <Autocomplete\n                                            freeSolo\n                                            id=\"newAddrStreet\"\n                                            size=\"small\"\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                            options={this.state.all_addr.map((option) => option.value)}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                            )}\n                                        />\n                                        <TextField \n                                            label=\"Дом\" \n                                            size=\"small\"\n                                            variant=\"outlined\" \n                                            value={this.state.newAddrHome} \n                                            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                            onBlur={this.checkNewAddr.bind(this)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField \n                                            label=\"Подъезд\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrPD} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Этаж\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrET} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />\n                                        <TextField \n                                            label=\"Квартира\" \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                            style={{ width: '100%' }}\n                                            value={this.state.newAddrKV} \n                                            onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                            onBlur={this.saveDataCustomAddr.bind(this)}\n                                        />  \n                                    </div>\n                                    <div>\n                                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </AccordionDetails>\n                            </Accordion>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1}>\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                                {this.state.pic_point.map((item, key) => \n                                    <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                        <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                        <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                    </div>\n                                )}\n                            </div>\n                        </TabPanel>\n                        \n                        {this.state.orderType == 0 ?\n                            <div>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Оплата</FormLabel>\n                                <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                    {this.state.renderPay.map((item, key) => \n                                        <FormControlLabel key={key} value={item.type} control={<Radio />} label={item.title} />\n                                    )}\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <div>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                                <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                    <FormControlLabel value='1' control={<Radio />} label=\"Как можно быстрее\" />\n                                    <FormControlLabel value='2' control={<Radio />} label=\"Предзаказ\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        {this.state.orderTimes == 2 ?\n                            <div>\n                                <FormControl style={{ width: '30%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredDay}\n                                      onChange={this.changePredDay}\n                                      inputProps={{\n                                        id: 'age-native-simple',\n                                      }}\n                                    >\n                                        {this.state.date_pred.map((item, key) => \n                                            <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <FormControl style={{ width: '20%' }}>\n                                    <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                    <Select\n                                      displayEmpty\n                                      value={this.state.orderPredTime}\n                                      onChange={this.changePredTime}\n                                      inputProps={{\n                                        id: 'age-native-simple1',\n                                      }}\n                                    >\n                                        {this.state.timePred.map((item, key) => \n                                            <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                        )}\n                                    </Select>\n                                </FormControl>\n                            </div>\n                                :\n                            null\n                        }\n                        \n                        <div>\n                            <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                        </div>\n                        <div>\n                            <table className=\"tableCart\">\n                                <tbody>\n                                    {this.state.cartItems_main.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                    \n                                    <tr className=\"rowAboutDop\">\n                                        <td colSpan='3'>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                            <br />\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                        </td>\n                                    </tr>\n                                    {this.state.cartItems_dop.map((item, key) =>\n                                        <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                    )}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Доставка:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan='2'>\n                                            <Typography component=\"span\">Итого:</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                        \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"orderSdacha\">\n                                <div>\n                                    <FormControl>\n                                        <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                        <Input\n                                            type=\"number\"\n                                            id=\"standard-adornment-weight\"\n                                            value={this.state.orderSdacha}\n                                            onChange={this.changeSdacha}\n                                            endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>    \n                                :\n                            null\n                        }\n                        <div className=\"promoOrder\">\n                            <div>\n                                <Paper component=\"div\" className=\"SpacePromo\">\n                                    <InputBase\n                                        onBlur={this.checkPromo.bind(this)}\n                                        value={this.state.orderPromo}\n                                        onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                        placeholder=\"Промокод\"\n                                        id=\"PROMONAME\"\n                                    />\n                                    <Divider orientation=\"vertical\" />\n                                    <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                        <CheckOutlinedIcon />\n                                    </IconButton>\n                                </Paper>\n                                {this.state.orderPromoText.length > 0 ?\n                                    <div className=\"DescPromo\">\n                                        <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                        \n                    </Grid>\n                </Hidden>\n                \n                <Hidden smUp>\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                            <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                                <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                                <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                            </Tabs>\n                        </AppBar>\n                        <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                                <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    \n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        : ''}</Typography>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                            <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                            </div>\n                        </TabPanel>\n                        \n                        <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                        </div>\n                        <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                            <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                        </div>\n                        <div style={{ marginTop: 15 }}>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    onKeyPress={this.enterPromoMobile}\n                                    id=\"PromoMobile\"\n                                    placeholder=\"Промокод\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                        {this.state.orderType == 0 ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-multiline-flexible\"\n                                        label=\"Комментарий курьеру\"\n                                        multiline\n                                        rowsMax={2}\n                                        value={this.state.orderComment}\n                                        onChange={this.changeComment}\n                                        variant=\"outlined\"\n                                    />\n                                </form>\n                            </div>\n                                :\n                            null\n                        }\n                                              \n                        {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                            <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                                <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-password\"\n                                        type=\"number\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                        label=\"Подготовить сдачу с\"\n                                    />\n                                </FormControl>\n                            </div>\n                            :\n                            null\n                        }\n                        \n                        <div>\n                            <div className=\"tableMobile\">\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <div className=\"boxItem rowAboutDop\">\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                    <br />\n                                    <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                </div>\n                                \n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                \n                            </div>\n                            \n                            \n                        </div>\n                    \n                        <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                            <div style={{ padding: '5px 0px' }}>\n                                <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div style={{ paddingBottom: 5 }}>\n                                <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                            </div>\n                            <div>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </Grid>\n                </Hidden>\n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }}>\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }}>\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Hidden from '@material-ui/core/Hidden';\nimport Popover from '@material-ui/core/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@material-ui/core/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus, faMapMarkerAlt, faRubleSign } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={itemsStore.getAllPrice() + itemsStore.getSumDiv()} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    \n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div style={{ width: 400, padding: 16 }}>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, item.item_id)}>\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, item.item_id)}> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"TableMiniName\">{item.name}</td>\n                                            <td>\n                                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderWOBorder\">\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\">\n                                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                                        <Typography component=\"span\" className=\"CardCountItem\">{item.count}</Typography>\n                                                    </Button>\n                                                    <Button variant=\"contained\" className=\"BtnCardMain PROMO\"> \n                                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                            <td style={{ width: '30%' }}> \n                                                <div className=\"TableMiniPrice\">\n                                                    {item.all_price} <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                { this.state.sumDiv == 0 ? null :\n                                    <tr style={{height: 35}}>\n                                        <td className=\"TableMiniFullName\">Доставка:</td>\n                                        <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                            <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                                { this.state.sumDiv } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                                <tr style={{height: 35}}>\n                                    <td className=\"TableMiniFullName\">Сумма:</td>\n                                    <td className=\"\" style={{width: '30%', textAlign: 'center'}}>\n                                        <div className=\"TableMiniPrice\" style={{ marginRight: 21 }}>\n                                            { itemsStore.getAllPrice() + itemsStore.getSumDiv() } <Ruble viewBox=\"0 220 700 300\" width=\"20\" />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.promoName}\n                                onChange={ event => this.setState({ promoName: event.target.value }) }\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.promoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{ this.state.promoST === true ? 'Промокод дает:' : 'Промокодом нельзя воспользоваться. '} {this.state.promoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                        <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">В корзину</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.props.openLogin}>Войти</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Hidden mdUp>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Hidden smDown>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Hidden>\n                        </Grid>\n                    \n                        <Hidden mdUp>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Hidden>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Hidden mdUp>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Hidden>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Hidden mdUp>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Hidden>\n                        :\n                    null\n                }    \n                \n                <Hidden mdUp>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Hidden>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF, faOdnoklassniki, faVk, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_fb ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_fb }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faFacebookF} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_inst ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_inst }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faInstagram} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faOdnoklassniki} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faVk} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <FontAwesomeIcon icon={faTelegramPlane} style={{ fontSize: '2rem', padding: 10 }} />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Hidden mdUp>\n                            <Hidden only=\"xs\">\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n\n\n                            <Hidden only=\"sm\">\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Hidden>\n                        </Hidden>\n                            :\n                        null\n                    }\n                 \n                    \n                    {this.state.activePage == 'cart' ? null\n                            :\n                        <Hidden mdUp>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Hidden>\n                    }\n                    \n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","firebaseAPP","Ruble","props","width","height","viewBox","xmlns","d","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","IconRuble","style","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","TabPanel","children","value","index","other","role","hidden","a11yProps","get_city","path","split","get_item","propTypes","PropTypes","Item","event","newValue","setState","itemTab","state","is_load","city_name","itemLink","linkItem","title","data","description","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","Helmet","content","Box","component","className","Grid","container","paddingLeft","paddingRight","xs","display","alignItems","paddingTop","srcSet","img_new","img_new_update","src","alt","minHeight","position","variant","info_weight","AppBar","zIndex","elevation","Tabs","onChange","changeTab","bind","justifyContent","tmp_desc","Tab","label","disableRipple","marginTop","marginBottom","maxHeight","overflow","overflowY","overflowX","flexDirection","gutterBottom","bottom","onClick","add","paddingBottom","ShoppingCartOutlined","ButtonGroup","disableElevation","Button","minus","icon","faMinus","faPlus","Hidden","smUp","textAlign","margin","flexWrap","wordWrap","propsData","page","axios","url","response","cats","all","error","console","log","React","Item2","openTooltip","img_name","img_app","img_type","desc","marc_desc_full","is_new","Badge","size","view","srcset","sizes","class","marginRight","borderRadius","flex","count_part_new","borderLeft","size_pizza","count_part","Intl","NumberFormat","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","fontFamily","fontWeight","lineHeight","whiteSpace","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","textTransform","marginLeft","alignContent","top","right","openInfo","openModalPCInfo","minWidth","Element","Scroll","scroller","SwiperCore","Navigation","Pagination","A11y","Autoplay","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","clickable","renderBullet","nextEl","prevEl","slidePrev","slideNext","prev","next","IconClose","handleDragStart","e","preventDefault","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","CardContent","openItem","CardActions","CardItemBot","nextProps","nextState","href","new","hit","arrColor","left","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","page_h","cat","main_link","spacing","sm","md","xl","mdUp","Backdrop","CircularProgress","smDown","xsDown","lg","Dialog","fullScreen","TransitionComponent","disableTypography","itemId","lgUp","fullWidth","handleClosePC","only","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","faTimes","dangerouslySetInnerHTML","__html","activePromo","info","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContent","DialogContentText","DialogActions","action","Close","mdDown","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","DialogTitle","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","Boolean","undefined","handleClick","transformOrigin","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_fb","faFacebookF","link_inst","faInstagram","link_ok","faOdnoklassniki","link_vk","faVk","faTelegramPlane","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}