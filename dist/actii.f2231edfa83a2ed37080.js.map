{"version":3,"sources":["webpack://react-ssr/./src/components/actii/actii.component.jsx"],"names":["queryString","require","Actii","props","document","querySelector","classList","remove","window","scrollTo","itemsStore","fetchData","state","city_name","then","data","setState","title","page","description","fetch","method","headers","body","stringify","type","city_id","res","json","actii","is_load","setTimeout","hash","location","length","act_id","split","this_item","find","item","id","openDialog","history","replace","pathname","err","pre_actii","showItem","match","params","cityName","openMSG","statusMSG","textMSG","this","allItems","items","map","act_item","key","item_id","promo_info","promo_name","JSON","Grid","container","className","Helmet","name","content","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","closeAlert","bind","message","style","backgroundColor","borderRadius","xs","Typography","variant","component","spacing","md","sm","xl","padding","width","height","srcSet","img_new","img_new_update","src","alt","promo_title","onClick","page_h","dangerouslySetInnerHTML","__html","Dialog","closeDialog","aria-labelledby","disableTypography","margin","IconButton","aria-label","position","top","right","icon","faTimes","fontSize","color","text","promo","justifyContent","ButtonGroup","disableElevation","disableRipple","activePromo","info","Button","propsData","path","axios","url","response","error","console","log","React"],"mappings":"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","file":"actii.f2231edfa83a2ed37080.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    return path.split('/')[1];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: props.match.params.cityName,\n            \n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(props.match.params.cityName);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:'https://jacofood.ru/src/php/test_app.php',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch('https://jacofood.ru/src/php/test_app.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.hash;\n                \n                if( hash.length > 0 ){\n                    let act_id = hash.split('#act')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                    \n                    this.props.history.replace({ pathname: window.location.pathname })\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                </Grid>\n                \n                { this.state.page && this.state.page.content ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </MuiDialogTitle>\n                        \n                        <MuiDialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </MuiDialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <MuiDialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </MuiDialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}"],"sourceRoot":""}