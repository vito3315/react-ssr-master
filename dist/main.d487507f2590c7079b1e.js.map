{"version":3,"file":"main.d487507f2590c7079b1e.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n\n  promoText = '';\n  promoST = null;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      if( promoName.length == 0 ){\n        itemsStore.promoText = '';\n        itemsStore.promoST = null;\n      }else{\n        itemsStore.promoText = check_promo.text;\n        itemsStore.promoST = check_promo.st;\n      }\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод не найден или уже активирован.'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }else{\n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n          setTimeout(()=>{\n            this.getInfoPromo( localStorage.getItem('promo_name') )\n          }, 500)\n        }\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n\n      \n\n      \n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport function IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='ActionsCartButtonStart'>\n                <Button variant=\"outlined\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class MiniActionsCartButtonPrize extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButtonPrize'>\n                <div variant=\"contained\">\n                    { parseInt(this.props.count) == 1 ? \n                        <span>В подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span> \n                            : \n                        <span>{this.props.count} шт. в подарок за { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) )}</span>\n                    }\n                    <IconRuble style={{ width: 12, height: 12, fill: '#525252', marginLeft: 5 }} />\n                </div>\n            </ButtonGroup>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      //backgroundColor: '#f5f5f9',\n      //color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material/Box';\n\n//import LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconClose } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n\n\n\n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            //modules: [Navigation, Pagination, A11y, Autoplay],\n\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            //autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                //clickable: true,\n                \n            },\n\n            /*pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},*/\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    render() {\n\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"} style={{ overflow: 'hidden', position: 'relative' }}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" />\n                        <div className=\"swiper-button-next\" />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        //const width = window.innerWidth;\n\n        let width = 0;\n        let GRID = 0;\n\n        //const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 1280;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n\n            if (typeof window !== 'undefined') {\n                width = window.innerWidth;\n            }else{\n                width = 320;\n            }\n\n            GRID = (width- 7*20) / 6;\n\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                    loading=\"lazy\"\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"outlined\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"outlined\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                if( this._isMounted === true ){\n                    this.setState( {\n                        page: data.page,\n                        title: data.title,\n                        description: data.description,\n\n\n                    } );\n                }\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat()\n                })\n            }\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <React.Fragment key={k}>\n                                            <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                            </Grid>\n                                        \n                                            <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                            </Grid>\n                                        </React.Fragment>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    \n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Box>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    \n                    <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Box>\n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Box>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Grid>\n                                            \n                                                <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Grid>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </DialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Dialog disableElevation maxWidth={'md'} sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog disableElevation maxWidth={'lg'} sx={{ display: { xs: 'none', lg: 'block' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Dialog sx={{ display: { xs: 'block', md: 'none' } }} disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                    { this.state.openItem.items.length == 1 ? null :\n                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                    }\n\n                                    <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                        { this.state.openItem.items.map( (item, key) =>\n                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                    </div>\n                                                </div>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) }\n                                    </div>\n                                    \n                                    \n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'block', sm: 'none' } }} disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                        <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                            { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                                    :\n                                                null\n                                            }\n                                            { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                null\n                                                    :\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                            }\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog sx={{ display: { xs: 'none', lg: 'block' } }} disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@mui/material/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport AppBar from '@mui/material/AppBar';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'none', lg: 'block' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'block', lg: 'none' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                        size=\"small\"\n                                    />\n                                    <TextField \n                                        InputProps={{ readOnly: true }} \n                                        label=\"Номер телефона\" \n                                        value={this.state.info.user.login} \n                                        className=\"input\" \n                                        size=\"small\"\n                                    />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField \n                                            label=\"Дата рождения\" \n                                            className=\"input\" \n                                            InputProps={{ readOnly: true }} \n                                            value={this.state.info.user.date_bir} \n                                            size=\"small\"\n                                        />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\" size=\"small\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                    size=\"small\"\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                  size=\"small\"\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                        size=\"small\"\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={\n                                            <Checkbox \n                                                checked={ parseInt(this.state.spam) == 1 ? true : false } \n                                                name=\"checkedC\" \n                                                sx={{\n                                                    '&.Mui-checked': {\n                                                        color: '#c03',\n                                                    },\n                                                }}\n                                            />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </DialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel \n                                        key={key} \n                                        value={item.id} \n                                        control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } \n                                        label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                        </ButtonGroup>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport AppBar from '@mui/material/AppBar';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nimport Input from '@mui/material/Input';\n\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\">\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >{this.state.count}</Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                \n                \n                <Grid item container sx={{ display: { xs: 'none', sm: 'flex' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={ \n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Accordion>\n                            <AccordionSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className=\"newAddr\">\n                                <div>\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"newAddrStreet\"\n                                        size=\"small\"\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                        options={this.state.all_addr.map((option) => option.value)}\n                                        renderInput={(params) => (\n                                            <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                        )}\n                                    />\n                                    <TextField \n                                        label=\"Дом\" \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        value={this.state.newAddrHome} \n                                        onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField \n                                        label=\"Подъезд\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrPD} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Этаж\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrET} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Квартира\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrKV} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />  \n                                </div>\n                                <div>\n                                    <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                        <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                        <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                    </ButtonGroup>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1}>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </TabPanel>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className='_comment_'>\n                            <TextField\n                                id=\"outlined-multiline-flexible\"\n                                label=\"Комментарий курьеру\"\n                                multiline\n                                rowsMax={2}\n                                value={this.state.orderComment}\n                                onChange={this.changeComment}\n                                variant=\"outlined\" \n                                size={'small'} \n                                type={ 'text' }\n                            />\n\n                        </div>\n                            :\n                        null\n                    }\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Оплата</FormLabel>\n                            <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                {this.state.renderPay.map((item, key) => \n                                    <FormControlLabel key={key} value={item.type} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={item.title} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                            <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                <FormControlLabel value='1' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Как можно быстрее\" />\n                                <FormControlLabel value='2' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Предзаказ\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    {this.state.orderTimes == 2 ?\n                        <div>\n                            <FormControl style={{ width: '30%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                    displayEmpty\n                                    value={this.state.orderPredDay}\n                                    onChange={this.changePredDay}\n                                    inputProps={{\n                                    id: 'age-native-simple',\n                                    }}\n                                >\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '20%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    displayEmpty\n                                    size='small'\n                                    value={this.state.orderPredTime}\n                                    onChange={this.changePredTime}\n                                    inputProps={{\n                                    id: 'age-native-simple1',\n                                    }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                            :\n                        null\n                    }\n                    \n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                    </div>\n                    <div>\n                        <table className=\"tableCart\">\n                            <tbody>\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <tr className=\"rowAboutDop\">\n                                    <td colSpan='3'>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                        <br />\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                    </td>\n                                </tr>\n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Доставка:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Итого:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"orderSdacha\">\n                            <div>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                    <Input\n                                        type=\"number\"\n                                        id=\"standard-adornment-weight\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>    \n                            :\n                        null\n                    }\n                    <div className=\"promoOrder\">\n                        <div>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                    id=\"PROMONAME\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                </Grid>\n            \n            \n                <Grid item container sx={{ display: { xs: 'flex', sm: 'none' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                this.state.orderAddr.city_name+', '+\n                                this.state.orderAddr.street+' '+\n                                this.state.orderAddr.home+\n                                \n                                ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                    : ''}</Typography>\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                        <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                        </div>\n                    </TabPanel>\n                    \n                    <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                    </div>\n                    <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                    </div>\n                    <div style={{ marginTop: 15 }}>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.orderPromo}\n                                onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                onKeyPress={this.enterPromoMobile}\n                                id=\"PromoMobile\"\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.orderPromoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                    </div>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Комментарий курьеру\"\n                                    multiline\n                                    rowsMax={2}\n                                    value={this.state.orderComment}\n                                    onChange={this.changeComment}\n                                    variant=\"outlined\" \n                                    size={'small'} \n                                    type={ 'text' }\n                                />\n                            </form>\n                        </div>\n                            :\n                        null\n                    }\n                                            \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type=\"number\"\n                                    style={{ width: '100%' }}\n                                    value={this.state.orderSdacha}\n                                    onChange={this.changeSdacha}\n                                    endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                    label=\"Подготовить сдачу с\"\n                                />\n                            </FormControl>\n                        </div>\n                        :\n                        null\n                    }\n                    \n                    <div>\n                        <div className=\"tableMobile\">\n                            {this.state.cartItems_main.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            {this.state.cartItems_promo.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            <div className=\"boxItem rowAboutDop\">\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                <br />\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                            </div>\n                            \n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            \n                        </div>\n                        \n                        \n                    </div>\n                \n                    <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                        <div style={{ padding: '5px 0px' }}>\n                            <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div style={{ paddingBottom: 5 }}>\n                            <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </Grid>\n                \n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, MiniActionsCartButtonPrize, IconRuble } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            originPrice: 0,\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        /*if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 1000)\n        }*/\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        let allPrice = itemsStore.getSumDiv();\n\n        newCart.map( (item) => {\n            allPrice += parseInt(item.one_price) * parseInt(item.count);\n        } )\n\n        newCart.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            newCart[ key ]['img_new'] = this_item['img_new'];\n            newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n            newCart[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: newCart,\n            originPrice: allPrice,\n        })\n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n\n                    promoText: itemsStore.promoText,\n                    promoST: itemsStore.promoST,\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                let allPrice = itemsStore.getSumDiv();\n\n                newCart.map( (item) => {\n                    allPrice += parseInt(item.one_price) * parseInt(item.count);\n                } )\n\n                this.setState({\n                    originPrice: allPrice,\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        console.log( 'checkPromo HEADER' )\n        itemsStore.getInfoPromo(this.state.promoName);\n\n        /*fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })*/\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    //anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButtonPrize\" colSpan=\"2\">\n                                                <MiniActionsCartButtonPrize count={item.count} price={item.all_price} />\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        { this.state.originPrice != this.state.allPrice ?\n                                            <div className='originPrice'>\n                                                <span>\n                                                    { new Intl.NumberFormat('ru-RU').format(this.state.originPrice) } \n                                                    <IconRuble style={{ width: 14, height: 14, fill: 'rgba(27,27,31,0.2)', marginLeft: 5 }} />\n                                                </span>\n                                            </div>\n                                                :\n                                            <div>\n                                                { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                                <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                            </div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n\n                            { this.state.originPrice != this.state.allPrice ?\n                                <div className=\"DescPromoPrice\">\n                                    { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                </div>\n                                    :\n                                null\n                            }\n\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n  \nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\" component=\"h1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","length","setTimeout","getInfoPromo","setToken","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","check_promo","checkPromo","st","promoText","promoST","text","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","IconClose","MiniActionsCartButton","ButtonGroup","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Button","Intl","NumberFormat","width","height","marginLeft","paddingBottom","ActionsCartButton","MiniActionsCartButtonPrize","firebaseAPP","Badge","new","color","hit","state","size","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","Typography","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","maxWidth","typography","pxToRem","border","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","sx","xs","sm","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","paddingLeft","alignContent","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","pagination","navigation","nextEl","prevEl","overflow","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","loading","CardActions","flexWrap","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","index","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","href","page_h","cat","main_link","spacing","margin","md","lg","xl","Backdrop","zIndex","CircularProgress","Dialog","fullScreen","TransitionComponent","DialogTitle","disableTypography","IconButton","itemId","fullWidth","handleClosePC","DialogContent","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","icon","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","value","role","hidden","a11yProps","Ruble","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","nextProps","nextState","img","imgUpdate","faGift","faMinus","faPlus","gutterBottom","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","ShoppingCartOutlined","faMapMarkerAlt","faUser","SimplePopover","newCart","originPrice","anchorEl","currentTarget","keyCode","Boolean","undefined","handleClick","Popover","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}