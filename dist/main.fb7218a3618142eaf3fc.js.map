{"version":3,"file":"main.fb7218a3618142eaf3fc.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/stores/elements.js","webpack://react-ssr/./src/components/item/item.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/contact/contact.component.jsx","webpack://react-ssr/./src/components/actii/actii.component.jsx","webpack://react-ssr/./src/components/profile/profile.component.jsx","webpack://react-ssr/./src/components/cart/cart.component.jsx","webpack://react-ssr/./src/components/pageAbout/pageAbout.component.jsx","webpack://react-ssr/./src/components/pageJob/pageJob.component.jsx","webpack://react-ssr/./src/components/pageInstPay/pageInstPay.component.jsx","webpack://react-ssr/./src/components/pageOferta/pageOferta.component.jsx","webpack://react-ssr/./src/components/pagePolitika/pagePolitika.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr/./node_modules/moment/locale/ sync [/\\\\](ru(\\.js)"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment\";\nconst queryString = require('query-string');\n\nimport config from './config';\n\nclass ItemsStore {\n  // Don't need decorators now\n  items = '';\n  itemsPromo = '';\n  allItems = '';\n  allItemsCat = '';\n  allItemsCatNew = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = '';\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  mainLink = '';\n  \n  free_drive = 0;\n  \n  setMainLink = (items) => {\n    this.mainLink = items;\n  };\n\n  getMainLink(){\n    return this.mainLink;\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo_web', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        //localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    itemsStore.free_drive = 0;\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).format(\"E\"));\n    }else{\n      this_date = moment(by_time).format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Данный промокод уже активирован или не найден'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Тип заказа не применим для данного промокода. Пожалуйста, отредактируйте заказ.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе. Пожалуйста, посетите для оформления заказа ближайшее к вам кафе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          if( this_item ){\n            check ++;\n          }\n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: promo_info.promo_text.false\n          }\n        }\n      }\n      //\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n            name: this_item['name'],\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: promo_info.promo_text.false,\n        test: promo_info\n      }\n    }\n  }\n\n  setBanners = (items) => {\n    this.banners = JSON.stringify(items);\n  };\n\n  getBanners(){\n    return this.banners.length == 0 ? [] : JSON.parse(this.banners, true);\n  };\n  \n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n  \n  setAllItemsCatNew = (items) => {\n    this.allItemsCatNew = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  getAllItemsCatNew(){\n    return this.allItemsCatNew.length == 0 ? [] : JSON.parse(this.allItemsCatNew, true);\n  };\n  \n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      if( originalItem ){\n        new_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          one_price: parseInt( originalItem.price ),\n          all_price: parseInt( originalItem.price ) * parseInt( item.count )\n        })\n      }\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = parseInt(item_info['price']);\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        \n\n        setTimeout( () => {\n\n          let check_dop = my_cart.filter( (item, key) => parseInt(item.count) > 0 && (parseInt(item.item_id) == 17 || parseInt(item.item_id) == 237) );\n\n          if( check_dop.length == 0 ){\n            check_dop = 1;\n          }else{\n            check_dop = check_dop.length;\n          }\n\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            max_count = max_count / check_dop;\n\n            if( max_count > 0 && max_count < 1 ){\n              max_count = 1;\n            }else{\n              max_count = parseInt(max_count);\n            }\n\n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count) >= 0 ? parseInt(item.count) + parseInt(max_count) : 0;\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) >= 0 ? ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price) : 0;\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.id) == 231 || parseInt(check_item.id) == 232 || parseInt(check_item.id) == 233 ){\n      return 1;\n    }\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      \n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n\n      if( localStorage.getItem('token') ){\n        setTimeout( () => {\n          this.setToken( localStorage.getItem('token'), '' );  \n        }, 300 )\n      }\n\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n    }\n    \n    \n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\n\nexport function IconRuble(props) {\n    return (\n        <svg\n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"-1 0 24 24\"\n            >\n            <path d=\"M17.778 7.449a3.628 3.628 0 00-1.107-2.761l-.001-.001a4.03 4.03 0 00-2.923-1.057h.009-5.454v7.636h5.454a4.032 4.032 0 002.917-1.06l-.003.003a3.633 3.633 0 001.108-2.768v.007zm4.04 0a7.11 7.11 0 01-2.158 5.368l-.002.002a7.65 7.65 0 01-5.581 2.08h.015-5.795v2.011H16.926c.29 0 .525.235.525.525v.022-.001 2.203c0 .29-.235.525-.525.525h-.022.001-8.608v3.291a.537.537 0 01-.537.528H4.886a.525.525 0 01-.525-.525v-.022.001-3.273H.522a.525.525 0 01-.525-.525v-.022.001-2.182-.021c0-.29.235-.525.525-.525h.022-.001 3.818v-2.011H.522a.525.525 0 01-.525-.525v-.022.001-2.54-.006a.537.537 0 01.528-.537h.019-.001 3.818V.55.529c0-.29.235-.525.525-.525h.022-.001 9.187a7.653 7.653 0 015.57 2.084l-.004-.004a7.11 7.11 0 012.157 5.378v-.013z\"></path>\n        </svg>\n    );\n}\n\nexport function VKIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M31.4907 63.4907C0 94.9813 0 145.671 0 247.04V264.96C0 366.329 0 417.019 31.4907 448.509C62.9813 480 113.671 480 215.04 480H232.96C334.329 480 385.019 480 416.509 448.509C448 417.019 448 366.329 448 264.96V247.04C448 145.671 448 94.9813 416.509 63.4907C385.019 32 334.329 32 232.96 32H215.04C113.671 32 62.9813 32 31.4907 63.4907ZM75.6 168.267H126.747C128.427 253.76 166.133 289.973 196 297.44V168.267H244.16V242C273.653 238.827 304.64 205.227 315.093 168.267H363.253C359.313 187.435 351.46 205.583 340.186 221.579C328.913 237.574 314.461 251.071 297.733 261.227C316.41 270.499 332.907 283.63 346.132 299.751C359.357 315.873 369.01 334.618 374.453 354.747H321.44C316.555 337.262 306.614 321.61 292.865 309.754C279.117 297.899 262.173 290.368 244.16 288.107V354.747H238.373C136.267 354.747 78.0267 284.747 75.6 168.267Z\"/>\n        </svg>\n    )\n}\n\nexport function OdnIcon(props){\n    return (\n        <svg \n            style={ props.style }\n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 448 512\"\n        >\n            <path d=\"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"/>\n        </svg>\n    )\n}\n\nexport function TGIcon(props){\n    return (\n        <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 496 512\"\n            style={ props.style }\n        >\n            <path d=\"M248,8C111.033,8,0,119.033,0,256S111.033,504,248,504,496,392.967,496,256,384.967,8,248,8ZM362.952,176.66c-3.732,39.215-19.881,134.378-28.1,178.3-3.476,18.584-10.322,24.816-16.948,25.425-14.4,1.326-25.338-9.517-39.287-18.661-21.827-14.308-34.158-23.215-55.346-37.177-24.485-16.135-8.612-25,5.342-39.5,3.652-3.793,67.107-61.51,68.335-66.746.153-.655.3-3.1-1.154-4.384s-3.59-.849-5.135-.5q-3.283.746-104.608,69.142-14.845,10.194-26.894,9.934c-8.855-.191-25.888-5.006-38.551-9.123-15.531-5.048-27.875-7.717-26.8-16.291q.84-6.7,18.45-13.7,108.446-47.248,144.628-62.3c68.872-28.647,83.183-33.623,92.511-33.789,2.052-.034,6.639.474,9.61,2.885a10.452,10.452,0,0,1,3.53,6.716A43.765,43.765,0,0,1,362.952,176.66Z\"/>\n        </svg>\n    )\n}\n\nexport function IconInfoWhite() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"#DADADA\" strokeWidth=\"2\"></circle>\n        <path\n          stroke=\"#DADADA\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.667\" r=\"4\" fill=\"#DADADA\"></circle>\n      </svg>\n    );\n}\n\nexport function IconInfoBlack() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 80 80\"\n      >\n        <circle cx=\"40\" cy=\"40\" r=\"40\" fill=\"#000\" fillOpacity=\"0.6\"></circle>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"4\"\n          d=\"M40 34L40 62\"\n        ></path>\n        <circle cx=\"40\" cy=\"22.666\" r=\"4\" fill=\"#fff\"></circle>\n      </svg>\n    );\n}\n\nexport class MiniActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MiniActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this, this.props.item_id)}>–</button>\n                    <span>{this.props.count}</span>\n                    <button className='plus' onClick={this.props.add.bind(this, this.props.item_id)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButtonStart extends React.PureComponent{\n    render(){\n        return(\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButtonStart'>\n                <Button variant=\"contained\" className='ModalItemButtonCart' onClick={this.props.add.bind(this)}>\n                    <span>В корзину за { new Intl.NumberFormat('ru-RU').format(this.props.price)}</span>\n                    <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1  }} />\n                </Button>\n            </ButtonGroup>\n        )\n    }\n}\n\nexport class ActionsCartButton extends React.PureComponent{\n    render(){\n        return (\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='ActionsCartButton'>\n                <div variant=\"contained\" className='ModalItemButtonCart OPEN'>\n                    <button className='minus' onClick={this.props.minus.bind(this)}>–</button>\n                    <div>\n                        <span>{this.props.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.props.price) * parseInt(this.props.count) )}</span>\n                        <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5, paddingBottom: 1 }} />\n                    </div>\n                    <button className='plus' onClick={this.props.add.bind(this)}>+</button>\n                </div>\n            </ButtonGroup>\n        )\n    }\n}\n\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { autorun } from \"mobx\"\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Box from '@mui/material/Box';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\n\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble, IconInfoWhite, IconInfoBlack } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 30 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 30, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: this.state.size == 'small' ? '0.75rem' : '1rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      //backgroundColor: '#f5f5f9',\n      //color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>\n                    {children}\n                </div>   \n            )}\n        </div>\n    );\n}\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};  \n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction get_item(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ path.length - 1 ];\n}\n\nexport class Item extends React.Component {\n    _isMounted = false;\n    swiper = null;\n    \n    startMove = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.item ? this.props.item : [],  \n            is_load: false,\n            count: 0,\n            city_name: !this.props.item ? this.props.city : '',\n            itemLink: !this.props.item ? this.props.linkItem : '',\n            title: this.props.data ? this.props.data.title : '',\n            description: this.props.data ? this.props.data.description : '',\n            itemTab: 0,\n\n            openTooltip: false\n        };\n        \n        if( !this.props.item ){\n            itemsStore.setCity(this.props.city);\n        }\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            item: get_item(propsData),\n            page: 'item' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        autorun(() => {\n            if( this._isMounted ){\n                let item = itemsStore.getAllItems().find( (item) => item.link == this.state.itemLink );\n                \n                if( item ){\n                    this.setState({\n                        item: item\n                    })\n                    \n                    if( item.items.length == 0 && (parseInt(item.type) !== 3 && parseInt(item.type) !== 4) ){\n                        if( parseFloat(item.kkal) == 0 && parseFloat(item.protein) == 0 && parseFloat(item.fat) == 0 && parseFloat(item.carbohydrates) == 0 ){\n                            \n                        }else{\n                            item.items.push({\n                                kkal: item.kkal,\n                                protein: item.protein,\n                                fat: item.fat,\n                                carbohydrates: item.carbohydrates,\n                                name: ''\n                            })\n                        }\n                    }\n                    \n                    this.setState({ \n                        is_load: true,\n                    });\n                    \n                    let my_cart = itemsStore.getItems();\n                    \n                    let item_cart = my_cart.filter( (item) => item.item_id == item['id'] )[0];\n              \n                    this.setState({ \n                        count: item_cart ? item_cart.count : 0,\n                    })\n                }\n            }\n        })\n        \n        if( this.props.item ){\n            \n            /*Item.fetchData('/'+this.state.city_name+'/menu/'+this.state.itemLink).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );*/\n            \n            if( this.state.item.items && this.state.item.items.length == 0 && (parseInt(this.state.item.type) !== 3 && parseInt(this.state.item.type) !== 4) ){\n                this.state.item.items.push({\n                    kkal: this.state.item.kkal,\n                    protein: this.state.item.protein,\n                    fat: this.state.item.fat,\n                    carbohydrates: this.state.item.carbohydrates,\n                    name: ''\n                })\n            }\n            \n            this.setState({ \n                is_load: true,\n            });\n            \n            let my_cart = itemsStore.getItems();\n            let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n      \n            this.setState({ \n                count: item ? item.count : 0,\n            })\n        }\n        \n        if( !this.props.item ){\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('item');\n        }\n    }\n    \n    add(){\n\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.AddItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    minus(){\n\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: this.state.item['id'],\n            items: [{ name: this.state.item.name }]\n        });\n\n        let count = itemsStore.MinusItem(this.state.item['id']);\n        this.setState({ count: count })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            itemTab: newValue\n        })\n    }\n    \n    handleTooltipOpen(){\n        this.setState({\n            openTooltip: !this.state.openTooltip\n        })\n    }\n\n    handleTooltipClose(){\n        this.setState({\n            openTooltip: false\n        })\n    }\n\n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc_full.length > 0 ? this.state.item.marc_desc_full : this.state.item.tmp_desc;\n\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n\n                \n                <Box component=\"div\" className=\"pcItem NewModal\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n                    <Grid container className=\"MainItem mainContainer\">\n                        \n                        {img_type == 'old' ?\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ minHeight: 150 }}\n                                    />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                                :\n                            <Grid item className='FirstMainItem'>\n                                <picture style={{ width: '100%' }}>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img alt={this.state.item.name} title={this.state.item.name} class=\"img\" src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n\n                                { parseInt(this.state.item.is_new) == 0 ? \n                                    parseInt(this.state.item.is_hit) == 0 ? null :\n                                    <Badge size={'big'} type={'hit'} view={'pc'} />\n                                        :\n                                    <Badge size={'big'} type={'new'} view={'pc'} />\n                                }\n                            </Grid>\n                        }\n                        \n                        <Grid item className='SecondMainItem'>\n                            <Typography variant=\"h5\" component=\"h1\" className='ModalItemTitle' style={{ marginTop: 0 }}>{this.state.item.name}</Typography>\n                            \n                            \n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', width: 300 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 80 : 150, height: 40, border: '1px solid #DADADA', borderRadius: 15, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 20, marginBottom: 20, marginRight: 25 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <ClickAwayListener mouseEvent=\"onMouseDown\" touchEvent=\"onTouchStart\" onClickAway={this.handleTooltipClose.bind(this)}>\n                                    <div>\n                                        <HtmlTooltip\n                                            onClose={this.handleTooltipClose.bind(this)}\n                                            open={this.state.openTooltip}\n                                            disableFocusListener\n                                            disableHoverListener\n                                            disableTouchListener\n                                            PopperProps={{\n                                                disablePortal: true,\n                                            }}\n                                            title={\n                                            <React.Fragment>\n                                                <Typography style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '1.5rem', fontWeight: 500, lineHeight: 1, paddingTop: 10, paddingBottom: this.state.item.items.length == 1 ? 20 : 20, whiteSpace: 'nowrap' }}>Пищевая ценность на 100 г</Typography>\n                                                \n                                                { this.state.item.items.length == 1 ? null :\n                                                    <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                                }\n\n                                                <div className='InfoScroll' style={ this.state.item.items.length > 1 ? { overflowY: 'scroll', maxHeight: 280, paddingRight: 5 } : {}}>\n                                                    { this.state.item.items.map( (item, key) =>\n                                                        <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.item.items.length == 1 ? 0 : this.state.item.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                                <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                                    <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25 }}>{item.name}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                                    <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500 }}>{item.kkal}</Typography>\n                                                                    <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400 }}>ккал</Typography>\n                                                                </div>\n                                                            </div>\n                                                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                                <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                                    <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400 }}>Состав: {item.tmp_desc}</Typography>\n                                                                </div>\n                                                                <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>белки</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.protein} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>жиры</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.fat} г</Typography>\n                                                                    </div>\n                                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1 }}>углеводы</Typography>\n                                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3 }}>{item.carbohydrates} г</Typography>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ) }\n                                                </div>\n                                            </React.Fragment>\n                                            }\n                                        >\n                                            <div style={{ width: 40, height: 40, cursor: 'pointer' }} onClick={this.handleTooltipOpen.bind(this)}>\n                                                { this.state.openTooltip === true ?\n                                                    <IconInfoBlack />\n                                                        :\n                                                    <IconInfoWhite />\n                                                }\n                                                \n                                            </div>\n                                        </HtmlTooltip>\n                                    </div>\n                                </ClickAwayListener>\n                                \n                            </div>\n                            \n\n                            { parseInt( this.state.item.cat_id ) == 4 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ marginBottom: 20, width: 300 }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCartOther' style={{ width: 300, height: 40, borderRadius: 30, border: '1px solid #F9BC23' }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>Состав сета</Button>\n                                </ButtonGroup>\n                                    :\n                                null\n                            }\n\n                            <Typography variant=\"h5\" component=\"span\" style={{ marginBottom: 20, minHeight: 200 }} className='ModalItemDesc'>{desc}</Typography>\n                            \n                            { this.state.count == 0 ?\n                                <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                    :\n                                <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n                \n\n                <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                    <Grid container className=\"MainItem MainItemMobile mainContainer\" style={{ height: 'calc(100vh - 50px)', paddingRight: 20, paddingLeft: 20, paddingTop: 20, alignContent: 'flex-start', position: 'relative' }}>\n                        <Grid item xs={12}>\n\n                            {img_type == 'old' ?\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                        alt={this.state.item.name}\n                                        title={this.state.item.name}\n                                        style={{ width: '100%' }}\n                                    />\n                                </picture>\n                                    :\n                                <picture>\n                                    <source srcset={`\n                                        https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg 138w, \n                                        https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 146w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 183w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_466x466.jpg 233w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_585x585.jpg 292w\n                                        https://storage.yandexcloud.net/site-img/${img_name}_732x732.jpg 366w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1168x1168.jpg 584w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_1420x1420.jpg 760w,\n                                        https://storage.yandexcloud.net/site-img/${img_name}_2000x2000.jpg 1875w`} \n                                        sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                    <img \n                                        alt={this.state.item.name} \n                                        title={this.state.item.name} \n                                        style={{ width: '80%' }}\n                                        src={`https://storage.yandexcloud.net/site-img/${img_name}_276x276.jpg`} />\n                                </picture>\n                            }\n\n                            <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center' }}>{this.state.item.name}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', position: 'relative' }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 238 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.item.count_part_new}</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ?\n                                        null\n                                            :\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza + ' см' : this.state.item.count_part + ' шт.' }</Typography>\n                                            <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                        </>\n                                    }\n                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight)} { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                </div>\n\n                                <div style={{ width: 30, height: 30, cursor: 'pointer', position: 'absolute', top: 10, right: 0 }} onClick={this.props.openInfo.bind(this)}>\n                                    { this.props.openModalPCInfo === true ?\n                                        <IconInfoBlack />\n                                            :\n                                        <IconInfoWhite />\n                                    }\n                                </div>\n                                \n                            </div>\n                        </Grid>\n\n                        { parseInt( this.state.item.cat_id ) == 4 ?\n                            <Grid item xs={12} style={{ marginBottom: 20 }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: 240, height: 30, borderRadius: 15, border: '1px solid #F9BC23', fontSize: '0.875rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 400 }} onClick={this.props.openSetPc.bind(this, this.state.item.items)}>\n                                        Состав сета\n                                    </Button>\n                                </ButtonGroup>\n                            </Grid>\n                                :\n                            null\n                        }\n\n                        <Grid item xs={12} style={{ height: 80, justifyContent: 'center' }}>\n                            <Typography component=\"span\" className='hidddenText4' style={{ textAlign: 'center', fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', width: '100%' }}>{desc}</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} style={{ position: 'absolute', width: 'calc(100% - 40px)', bottom: 120 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <Button variant=\"contained\" className='ModalItemButtonCart' style={{ width: '100%', height: 60, borderRadius: 40, border: '2px solid #F9BC23' }} onClick={this.add.bind(this)}>\n                                        <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>В корзину за { new Intl.NumberFormat('ru-RU').format(this.state.item.price)}</span>\n                                        <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" style={{ width: '100%' }}>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' style={{ width: '100%', height: 56, borderRadius: 40, border: '2px solid #F9BC23', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                        <button style={{ width: 30, height: 30, minWidth: 30, maxWidth: 30, minHeight: 30, maxHeight: 30, borderRadius: 40, padding: 0, marginLeft: 13, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '1.5rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.minus.bind(this)}>–</button>\n                                        <div>\n                                            <span style={{ fontSize: '1.25rem', textTransform: 'initial', fontFamily: 'Roboto', color: '#525252', fontWeight: 700 }}>{this.state.count} шт. на { new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price) * parseInt(this.state.count) )}</span>\n                                            <IconRuble style={{ width: 15, height: 15, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                        <button style={{ width: 40, height: 40, minWidth: 40, maxWidth: 40, minHeight: 40, maxHeight: 40, borderRadius: 40, padding: 0, marginRight: 10, border: '1px solid #F9BC23', backgroundColor: '#F9BC23', color: '#525252', fontSize: '2rem', fontFamily: 'Roboto', fontWeight: 300, display: 'flex', justifyContent: 'center', alignItems: 'center' }} onClick={this.add.bind(this)}>+</button>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport * as Scroll from 'react-scroll';\n\nvar Element  = Scroll.Element;\nvar Events  = Scroll.Events;\nvar scroller = Scroll.scroller;\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport IconButton from '@mui/material/IconButton';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/material/Box';\n\n//import LazyLoad from 'react-lazyload';\n\nimport { ActionsCartButton, ActionsCartButtonStart, IconRuble } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nclass CoverFlowCarousel extends React.Component {\n    swiper = null;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            data: this.props.data,\n            type: this.props.type,\n        };\n    }\n    \n    componentDidMount() {\n        let count = 1;\n        let this_count = this.state.data.length;\n        \n        /*if(this.state.type == 'pc'){\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }else{\n            count = this.state.data.length >= 3 ? 2 : 1;\n        }*/\n        \n        \n\n\n\n        \n        this.swiper = new Swiper(\".swiper-container\", {\n            //modules: [Navigation, Pagination, A11y, Autoplay],\n\n            grabCursor: this_count == 1 ? false : true,\n            loop: this_count == 1 ? false : true,\n            centeredSlidesBounds: false,\n            setWrapperSize: this_count == 1 ? false : true,\n            autoHeight: true,\n            //spaceBetween: 100,\n            centeredSlides: true,\n            slidesPerView: count,\n            \n            //autoplay: this_count == 1 ? false : true,\n            autoplay: {\n                delay: 5000,\n            },\n            \n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                clickable: true,\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            },\n\n            /*pagination: this_count == 1 ? false : this.state.type == 'pc' ? true : true,\n            pagination: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                el: \".swiper-pagination\",\n                clickable: true,\n                type: 'bullets',\n                renderBullet: function (index, className) {\n                    return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n                },\n            } : {},*/\n            navigation: this_count == 1 ? {} : this.state.type == 'pc' ? {\n                nextEl: \".swiper-button-next\", // arrows on the side of the slides\n                prevEl: \".swiper-button-prev\", // arrows on the side of the slides\n            } : {},\n            \n            //renderPrevButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />,\n            //renderNextButton: () => <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n        });\n    }\n     \n    render() {\n\n        return (\n            <div className={\"swiper-container swiper_\"+this.state.type+\" _h1_\"} style={{ overflow: 'hidden', position: 'relative' }}>\n                <div className={\"swiper-wrapper _h2_ _count_\"+this.state.data.length}>\n                    {this.state.data.map((item, key) => \n                        <div className={\"swiper-slide _h3_ \"+key} key={key}>\n                            {item}\n                        </div>\n                    )}\n                </div>\n                    \n                { this.state.data.length == 1 ? null : this.state.type == 'pc' ?\n                    <>\n                        <div className=\"swiper-pagination\" />\n                        <div className=\"swiper-button-prev\" />\n                        <div className=\"swiper-button-next\" />\n                    </>\n                        :\n                    null\n                }\n            </div>\n        );\n    }\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction IconClose(props) {\n    return (\n      <svg\n        style={ props.style ? props.style : null }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 64 64\"\n      >\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"3\"\n          d=\"M2 2l60 60M62 2L2 62\"\n        ></path>\n      </svg>\n    );\n}\n\nconst handleDragStart = (e) => e.preventDefault();\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nimport { Item } from '../item';\n\nclass CardItem extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            item: this.props.data, \n            count: 0,\n            is_old_price: false,\n            old_price: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n            \n            let city = itemsStore.getCity();\n            \n            if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 205,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n            \n            if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                this.setState({\n                    //old_price: 195,\n                    //is_old_price: true\n                })\n            }\n\n            if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                this.setState({\n                    //old_price: 135,\n                    //is_old_price: true\n                })\n            }\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                \n                let city = itemsStore.getCity();\n            \n                if( city == 'samara' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 205,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'samara' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                if( city == 'togliatti' && (parseInt(this.state.item['id']) == 70 || parseInt(this.state.item['id']) == 71 || parseInt(this.state.item['id']) == 7) ){\n                    this.setState({\n                        //old_price: 195,\n                        //is_old_price: true\n                    })\n                }\n    \n                if( city == 'togliatti' && parseInt(this.state.item['id']) == 4 ){\n                    this.setState({\n                        //old_price: 135,\n                        //is_old_price: true\n                    })\n                }\n                \n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    /*shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }*/\n    \n    render() {\n        const img_name = this.state.item.img_app.length > 0 ? this.state.item.img_app : this.state.item.img_new;\n        const img_type = this.state.item.img_app.length > 0 ? 'new' : 'old';\n\n        const desc = this.state.item.marc_desc.length > 0 ? this.state.item.marc_desc : this.state.item.tmp_desc;\n\n        const width = window.innerWidth;\n\n        const GRID = (width- 7*20) / 6;\n\n        if( this.props.type == 'pc' ){\n            return (\n                <Card elevation={0} className=\"CardItem\" style={{ width: '100%' }}>\n                    \n                    <CardContent style={{ cursor: 'pointer', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ minHeight: 150 }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img alt={this.state.item.name} title={this.state.item.name} src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} />\n                            </picture>\n                        }\n                        \n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'pc'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'pc'} />\n                        }\n\n                        <Typography className=\"CardNameItem\" variant=\"h5\" component=\"h3\" style={{ flex: 1 }}>{this.state.item.name}</Typography>\n\n                        <CardContent style={{ padding: 0 }}>\n                            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: 10, marginBottom: 10 }}>\n                                <div style={{ width: parseInt( this.state.item.cat_id ) == 4 ? 230 : parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? 75 : 135, height: 34, border: '1px solid #dadada', borderRadius: 15, display: 'flex', flexDirection: 'row' }}>\n                                    { parseInt( this.state.item.cat_id ) == 4 ?\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{this.state.item.count_part_new}</span>\n                                        </div>\n                                            :\n                                        null\n                                    }\n                                    { parseInt( this.state.item.cat_id ) == 5 || parseInt( this.state.item.cat_id ) == 6 || parseInt( this.state.item.cat_id ) == 7 ? null :\n                                        <div style={{ height: 34, borderRight: '1px solid #dadada', flex: parseInt( this.state.item.cat_id ) == 4 ? 2 : 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                            <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ parseInt( this.state.item.cat_id ) == 14 ? this.state.item.size_pizza : this.state.item.count_part } { parseInt( this.state.item.cat_id ) == 14 ? 'см' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'шт.'} </span>\n                                        </div>\n                                    }\n                                    <div style={{ height: 34, flex: 3, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <span style={{ fontFamily: 'Roboto', fontSize: '0.9rem', fontWeight: 400, color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.item.weight) } { parseInt( this.state.item.id ) == 17 || parseInt( this.state.item.id ) == 237 ? 'шт.' : parseInt( this.state.item.cat_id ) == 6 ? 'л' : 'г' }</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div style={{ height: 120, width: '100%', marginBottom: 10, textAlign: 'center', overflow: 'hidden' }}>\n                                <Typography component=\"span\" className='hidddenText5' style={{ fontFamily: 'Roboto', fontSize: '0.925rem', color: '#525252' }}>{desc}</Typography>\n                            </div>\n                        </CardContent>\n                    </CardContent>\n                    \n                    <CardActions style={{ padding: 0, width: '100%' }}>\n                        { this.state.count == 0 ?\n                            <ActionsCartButtonStart price={this.state.item.price} add={this.add.bind(this)} />\n                                :\n                            <ActionsCartButton count={this.state.count} price={this.state.item.price} item_id={this.state.item.id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                        }\n                    </CardActions>\n                </Card>\n            )\n        }\n        \n        if( this.props.type == 'mobile' ){\n            return (\n                <Grid item container xs={12} className=\"CardItem_mobile\" style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap' }}>\n                    <Grid style={{ position: 'relative', marginRight: 20 }} item onClick={ () => this.props.openItem(this.state.item.id)}>\n                        \n                        {img_type == 'old' ?\n                            <picture>\n                                <source \n                                    srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.webp?\"+this.state.item.img_new_update} \n                                    type=\"image/webp\" \n                                />\n                                <img \n                                    src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img_new+\"600х400.jpg?\"+this.state.item.img_new_update} \n                                    alt={this.state.item.name}\n                                    title={this.state.item.name}\n                                    style={{ width: ((GRID*3) + (2*20)), height: 'auto'  }}\n                                />\n                            </picture>\n                                :\n                            <picture>\n                                <source srcset={`\n                                    https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg 138w, \n                                    https://storage.yandexcloud.net/site-img/${img_name}_146x146.jpg 146w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_183x183.jpg 183w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_233x233.jpg 233w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_292x292.jpg 292w\n                                    https://storage.yandexcloud.net/site-img/${img_name}_366x366.jpg 366w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_584x584.jpg 584w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_760x760.jpg 760w,\n                                    https://storage.yandexcloud.net/site-img/${img_name}_1875x1875.jpg 1875w`} \n                                    sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                <img \n                                    alt={this.state.item.name} \n                                    title={this.state.item.name} \n                                    src={`https://storage.yandexcloud.net/site-img/${img_name}_138x138.jpg`} \n                                    style={{ width: ((GRID*3) + (2*20)), height: ((GRID*3) + (2*20))  }}\n                                />\n                            </picture>\n                        }\n\n                        { parseInt(this.state.item.is_new) == 0 ? \n                            parseInt(this.state.item.is_hit) == 0 ? null :\n                            <Badge size={'small'} type={'hit'} view={'mobile'} />\n                                :\n                            <Badge size={'small'} type={'new'} view={'mobile'} />\n                        }\n                    </Grid>\n                    <Grid item className=\"SecondBox_\" style={{ width: 'max-content', display: 'flex', flexDirection: 'column', position: 'relative', justifyContent: 'flex-end' }}>\n                        <Typography className=\"CardNameItem_\" variant=\"h5\" component=\"h3\" style={{ fontFamily: 'Roboto', fontSize: '1.0625rem', fontWeight: 700, color: '#525252', marginBottom: 10 }} onClick={ () => this.props.openItem(this.state.item.id)}>{this.state.item.name}</Typography>\n\n                        {  parseInt( this.state.item.cat_id ) == 4 ?\n                            <div style={{ width: 148, height: 28, display: 'flex', flexDirection: 'row', alignItems: 'center', border: '1px solid #dadada', borderRadius: 10, marginBottom: 10, }}>\n                                <div style={{ flex: 3, textAlign: 'center', borderRight: '1px solid #dadada', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part_new}</Typography>\n                                </div>\n                                <div style={{ flex: 2, textAlign: 'center', height: 28, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <Typography style={{ fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', lineHeight: 0 }} component=\"span\">{this.state.item.count_part} шт.</Typography>\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n\n                        <Typography className=\"CardInfoItem_\" style={{ marginBottom: 10, fontFamily: 'Roboto', fontSize: '0.875rem', fontWeight: 400, color: '#525252', maxHeight: 60, overflow: 'hidden' }} component=\"p\" onClick={() => this.props.openItem(this.state.item.id)}>{desc}</Typography>\n                        \n                        <div style={{ marginBottom: 10 }}>\n                            { this.state.count == 0 ?\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButtonStart'>\n                                    <Button variant=\"contained\" onClick={this.add.bind(this)}>\n                                        {new Intl.NumberFormat('ru-RU').format( parseInt(this.state.item.price))}\n                                        <IconRuble style={{ width: 11, height: 11, fill: '#525252', marginLeft: 3, paddingBottom: 1 }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className='MobileActionsCartButton'>\n                                    <div variant=\"contained\" className='ModalItemButtonCart OPEN' >\n                                        <span className='minus' onClick={this.minus.bind(this)}>–</span>\n                                        <span>{this.state.count}</span>\n                                        <span className='plus' onClick={this.add.bind(this)}>+</span>\n                                    </div>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </Grid>\n                    \n                </Grid>\n            )\n        }\n    }\n}\n\nclass CardItemBot extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {   \n            city: this.props.city,   \n            item: this.props.data, \n            count: 0 \n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        let my_cart = itemsStore.getItems();\n            \n        let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n  \n        if( item ){\n            this.setState({ \n              count: item.count,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted ){\n                let my_cart = itemsStore.getItems();\n                let item = my_cart.find( (item) => item.item_id == this.state.item['id'] );\n          \n                if( item ){\n                    this.setState({ \n                      count: item.count,\n                    })\n                }else{\n                    this.setState({ \n                      count: 0,\n                    })\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(){\n        if(this._isMounted){\n            itemsStore.AddItem(this.state.item['id']);\n        }\n    }\n    \n    minus(){\n        if(this._isMounted){\n            itemsStore.MinusItem(this.state.item['id']);\n        }\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.item.price !== nextState.item.price\n        );\n    }\n    \n    render() {\n        return (\n            <Card elevation={0} className=\"CardItem\">\n                \n                <CardContent style={{ cursor: 'pointer', position: 'relative' }} onClick={ () => this.props.openItem(this.state.item.id)}>\n                    <a href={'/'+this.state.city+'/menu/item/'+this.state.item.link}>\n                        { parseInt(this.state.item.is_new) == 0 ? null :\n                            <img \n                                src='/assets/is_new.png'\n                                alt=\"Новинка\"\n                                style={{ position: 'absolute', width: 70, top: 0, right: 0 }}\n                            />\n                        }\n                        \n                        <CardContent style={{ padding: '1.2vw', paddingBottom: 0, paddingTop: 0 }}>\n                            <Typography className=\"CardNameItem\" gutterBottom variant=\"h5\" component=\"h3\">{this.state.item.name}</Typography>\n                            <Typography gutterBottom className=\"CardInfoWeiItem\" component=\"p\">{this.state.item.info_weight}</Typography>\n                            <Typography className=\"CardInfoItem\" component=\"p\">{this.state.item.tmp_desc}</Typography>\n                        </CardContent>\n                    </a>\n                </CardContent>\n                    \n                <CardActions className=\"CardAction\">\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: 0, width: '100%' }}>\n                        <div><Typography className=\"CardPriceItem\" variant=\"h5\" component=\"span\">{this.state.item.price} <Ruble /></Typography></div>\n                        {this.state.count == 0 ?\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder fohover\">\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem NONHOVERED\" onClick={this.add.bind(this)}>\n                                    <ShoppingCartOutlinedIcon color='inherit'  />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem HOVERED\" onClick={this.add.bind(this)}>В корзину</Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >\n                                    <Typography className=\"CardCountItem\" component=\"span\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass Badge extends React.Component{\n    arrColor = {\n        new: { color: '#EE7900', text: 'новинка' },\n        hit: { color: '#AF00DB', text: 'хит' },\n        sale: { color: '#DB0021', text: 'скидка' }, \n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            size: this.props.size,\n            view: this.props.view,\n            color: this.arrColor[ this.props.type ].color,\n            text: this.arrColor[ this.props.type ].text\n        };\n    }\n\n    render(){\n        return (\n            <div style={{ position: 'absolute', top: this.state.view == 'mobile' ? 0 : 20, left: this.state.view == 'mobile' ? -10 : 20, }}>\n                <div style={{ width: this.state.size == 'small' ? 84 : 114, height: this.state.size == 'small' ? 34 : 44, backgroundColor: 'rgba(255, 255, 255, 0.6)', borderRadius: 15 }} />\n                <div style={{ width: this.state.size == 'small' ? 80 : 110, height: this.state.size == 'small' ? 30 : 40, backgroundColor: this.state.color, borderRadius: 15, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: 2, left: 2 }}>\n                    <Typography component=\"span\" style={{ fontFamily: 'Roboto', fontSize: '0.75rem', fontWeight: 400, color: '#fff', textTransform: 'uppercase', lineHeight: 1 }}>{this.state.text}</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport class HomeCat extends React.Component{\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    render(){\n        return (\n            <Home data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    startMove = 0;\n    activeID = 0;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allItems: [],  \n            is_load: false,\n            testData: [1, 2, 3, 4, 5, 6, 7, 8],\n            openItem: null,\n            openItemSet: null,\n            openModal: false,\n            openModalPC: false,\n            openModalPCSet: false,\n            openModalPCSetItems: [],\n            openModalPCInfo: false,\n            openModalPCInfoItems: [],\n            banners_pc: [],\n            banners_mobile: [],\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: this.props.data ? this.props.data.title : null,\n            description: this.props.data ? this.props.data.description : null,\n            mainLink: this.props.this_link\n        };\n        \n        if( this.props.data ){\n            this.loadBanners( this.props.data.all.other.cats.baners );\n        }\n        itemsStore.setCity(this.props.city);\n    }\n\n    loadBanners(banners){\n        let banners_pc = [],\n            banners_mobile = [];\n        \n        banners.map((item, key) => {\n            if( item.aktia_id && parseInt(item.aktia_id) > 0 ){\n                banners_pc.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n                banners_mobile.push(\n                    <Link\n                        to={'/'+itemsStore.getCity()+'/akcii?act_'+item.aktia_id}\n                        exact={ true }\n                        style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                    >\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    </Link>\n                )\n                \n            }else{\n                if( item.item && parseInt(item.item) > 0 ){\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItemPC.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                                onClick={this.openItem.bind(this, item.item)}\n                            />\n                        </picture>\n                    )\n                }else{\n                    banners_pc.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"3700х1000.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto', minHeight: 200/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                    \n                    banners_mobile.push(\n                        <picture style={{ width: 'inherit', height: 'auto' }}>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.webp?\"+item.img_new_update} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-home-img/\"+item.img_new+\"1000х500.jpg?\"+item.img_new_update} \n                                //alt={this.state.item.name}\n                                //title={this.state.item.name}\n                                style={{ width: 'inherit', height: 'auto'/*, borderRadius: 15*/ }}\n                                onDragStart={handleDragStart}\n                            />\n                        </picture>\n                    )\n                }\n            }\n        })\n        \n        this.setState({ \n            banners_pc: banners_pc,\n            banners_mobile: banners_mobile\n        });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: '',\n            link: propsData,\n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidUmount(){\n        window.removeEventListener('scroll');\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        var time = Date.now();\n        \n        let arrMax = [];\n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        const AllItemsCatNew = itemsStore.getAllItemsCatNew();\n        const AllItemsCat = itemsStore.getAllItemsCat();\n        \n        setTimeout( () => {\n            window.addEventListener('scroll', function() {\n                if( this._isMounted ){\n                    if ((time + 500 - Date.now()) < 0) {\n                        AllItemsCat.map( (item, key) => {\n                            var elem = document.getElementById('cat'+item.id);\n                            if( elem ){\n                                var top = elem.getBoundingClientRect().top + document.body.scrollTop - 200;\n                                \n                                if(top < 0){\n                                    arrMax.push({ name: item.name, Y: top, main_id: item.main_id })\n                                }\n                            }\n                        })\n                        \n                        if( arrMax.length > 0 ){\n                            let max = arrMax[ arrMax.length-1 ];\n                            \n                            arrMax = [];\n                            \n                            if( max ){\n                                if( this.activeID != parseInt(max.main_id) && parseInt(max.main_id) != 0 ){\n                                    if( document.querySelector('.activeCat') ){\n                                        document.querySelector('.activeCat').classList.remove('activeCat');\n                                    }\n                                    if( document.querySelector('#link_'+max.main_id) ){\n                                        document.querySelector('#link_'+max.main_id).classList.add('activeCat');\n                                    }\n                                    \n                                    this.activeID = parseInt(max.main_id);\n                                }\n                            }\n                        }\n                        \n                        time = Date.now();\n                    }\n                }\n            });\n            \n            this.setState({\n                is_load: true\n            })\n        }, 300 )\n        \n        let data = {\n            type: 'get_page_info', \n            city_id: this.state.city_name,\n            page: '' \n        };\n        \n        if (typeof window !== 'undefined') {\n            setTimeout(() => {\n                if( localStorage.getItem('goTo') ){\n                    let hash = localStorage.getItem('goTo')\n                    \n                    localStorage.removeItem('goTo');\n                    \n                    let offset = 50;\n                    \n                    if( document.querySelector('.scrollCat.mobile') ){\n                        offset += 50;\n                    }\n                    \n                    setTimeout(()=>{\n                        scroller.scrollTo(\"myScrollToElement\", {\n                            duration: 800,\n                            delay: 800,\n                            smooth: \"easeInOutQuart\",\n                            offset: document.getElementById('cat'+hash).getBoundingClientRect()['y'] - offset\n                        });\n                    }, 150)\n                    \n                    \n                }\n            }, 1000);\n            \n            setTimeout(() => {\n                let search = window.location.search;\n                \n                //\n                \n                if( search.length > 0 ){\n                    \n                    let checkItem = search.split('?showItem=');\n                    \n                    let allItems = itemsStore.getAllItems();\n                    let act_id = checkItem[1];\n\n                    act_id = act_id.split('&')[0];\n                    //let item = allItems.find( (item) => item.id == act_id );\n                    \n                    if( window.innerWidth <= 500 ){\n                        this.openItem(act_id);\n                    }else{\n                        this.openItemPC(act_id);\n                    }\n                    \n                    //let str = window.location.pathname;\n                    //str.replace(\"/item/\"+act_id, '');\n                    \n                    //this.props.history.replace({ pathname: checkItem[0] })\n                }\n                \n                \n                \n                \n                let link = window.location.pathname;\n                link = link.split('/');\n                let mainLink = '';\n                \n                let check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                        \n                        if( document.querySelector('.activeCat') ){\n                            document.querySelector('.activeCat').classList.remove('activeCat');\n                        }\n                        \n                        if( document.querySelector('[name=\"'+mainLink+'\"]') ){\n                            document.querySelector('[name=\"'+mainLink+'\"]').classList.add('activeCat')\n                        }\n                    }\n                }\n            }, 750);\n        }\n        \n        //if( !this.props.data ){\n            Home.fetchData('/'+this.state.city_name).then( data => {\n                if( this._isMounted === true ){\n                    this.setState( {\n                        page: data.page,\n                        title: data.title,\n                        description: data.description,\n\n\n                    } );\n                }\n            } );\n        //}\n        \n        itemsStore.setPage('home');\n        \n        if( itemsStore.getAllItemsCat().length == 0 ){\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat()\n                })\n            }\n        }\n        \n        //if( itemsStore.getAllItemsCat().length == 0 ){\n            window.scrollTo(0, 0);\n        //}\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                this.setState({\n                    allItems: itemsStore.getAllItemsCat(),\n                    mainLink: itemsStore.getMainLink()\n                })\n                \n                this.loadBanners(itemsStore.getBanners());\n            }\n        })\n    }\n\n    openItem(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModal: true\n        })\n        \n        setTimeout(()=>{\n            /*let el = document.getElementById(\"forSwiper\");\n            el.addEventListener(\"touchstart\", this.touchStart.bind(this), false);\n            el.addEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        }, 300)\n    }\n    \n    openItemPC(id){\n        let allItems = itemsStore.getAllItems();\n        let item = allItems.find( (item) => item.id == id );\n        \n        let state = { 'item_id': item.id, 'item_name': item.name },\n            title = '',\n            url = window.location.pathname+'?showItem='+item.id;\n\n        logEvent(this.firebaseAnalitic, 'open_item', {\n            content_type: 'item',\n            content_id: item.id,\n            items: [{ name: item.name }]\n        });\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openItem: item,\n            openModalPC: true\n        })\n    }\n\n    openModal(){\n        this.setState({\n            openModal: true\n        })\n    }\n    \n    handleClose(){\n        /*let el = document.getElementById(\"forSwiper\");\n        el.removeEventListener(\"touchstart\", this.touchStart.bind(this), false);\n        el.removeEventListener(\"touchend\", this.touchEnd.bind(this), false);*/\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModal: false,\n            openItem: null\n        })\n    }\n    \n    handleClosePC(){\n        \n        let state = { },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            openModalPC: false,\n            openItem: null,\n\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCSet(){\n        this.setState({\n            openModalPCSet: false,\n            openModalPCSetItems: []\n        })\n    }\n\n    handleClosePCInfo(){\n        this.setState({\n            openModalPCInfo: false,\n            openModalPCInfoItems: []\n        })\n    }\n\n    touchStart(el){\n        this.startMove = el['changedTouches'][0].pageY;\n    }\n    \n    touchEnd(el){\n        if( el['changedTouches'][0].pageY - this.startMove > 125 ){\n            this.handleClose();\n        }\n    }\n    \n    openSetPc(items){\n        this.setState({\n            openModalPCSet: true,\n            openModalPCSetItems: items\n        })\n    }\n\n    openInfo(items){\n        this.setState({\n            openModalPCInfo: true,\n            openModalPCInfoItems: items\n        })\n    }\n\n    render() {\n        //this.props.data.page.page_h\n        \n        let link = this.state.mainLink;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.mainLink != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        return (\n            this.state.is_load === false ?\n                <Element name=\"myScrollToElement\" className=\"Category\">\n                    \n                    <Typography variant=\"h5\" component=\"h1\" style={{ paddingBottom: 20 }}>{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        mainLink == '' || mainLink == cat.main_link ?\n                            <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 36px', flexWrap: 'wrap', width: '100%', paddingBottom: 40 }} className=\"MainItems mainContainer\">\n                                    <Typography variant=\"h5\" component=\"h2\">{ cat.name }</Typography>\n                                </Grid>\n                                <Grid container spacing={2} style={{ margin: 0, padding: '0px 10px', paddingBottom: 20, flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                    {cat.items.map((it, k) => (\n                                        <Grid item xs={12} sm={4} md={3} xl={3} key={k} style={{ padding: '10px 8px', display: 'flex'}}>\n                                            <CardItemBot city={this.state.city_name} data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                                :\n                            null\n                    )}\n                    \n                    \n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        <Backdrop style={{ zIndex: 4, color: '#fff' }} open={true}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n                    </Box>\n                </Element>\n                    :\n                <Element name=\"myScrollToElement\" className=\"Category\">\n            \n                    <Helmet>\n                        <title>{this.state.title}</title>\n                        <meta name=\"description\" content={this.state.description} />\n                    </Helmet>\n                    \n                    \n                    <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                        { this.state.banners_pc.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"pc\"\n                                data={this.state.banners_pc}\n                            />\n                        }\n                    </Box>\n                    <Box sx={{ display: { xs: 'block', md: 'none' } }}>\n                        { this.state.banners_mobile.length == 0 ? null :\n                            <CoverFlowCarousel\n                                type=\"mobile\"\n                                data={this.state.banners_mobile}\n                            />\n                        }\n                    </Box>\n                    \n                    {itemsStore.getAllItemsCat().map((cat, key) => \n                        cat.items.length > 0 ?\n                            mainLink == '' || mainLink == cat.main_link || mainLink == cat.link ?\n                                <div key={key} name={\"cat\"+cat.main_id} id={\"cat\"+cat.id}>\n                                    <Grid container spacing={2} style={{ margin: 0, padding: '0px 20px', flexWrap: 'wrap', width: '100%' }} className=\"MainItems mainContainer\" >\n                                        {cat.items.map((it, k) => (\n                                            <React.Fragment key={k}>\n                                                <Grid item className='_PC_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'none', sm: 'flex' } }} style={{ padding: '30px 16px', width: '100%' }}>\n                                                    <CardItem data={it} type={'pc'} openItem={this.openItemPC.bind(this)} />\n                                                </Grid>\n                                            \n                                                <Grid item className='_mobile_' xs={12} sm={6} md={4} lg={3} xl={3} sx={{ display: { xs: 'flex', sm: 'none' } }} style={{ padding: '10px 0px', borderBottom: cat.items.length-1 == k && itemsStore.getAllItemsCat().length-1 == key ? 'none' : '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                    <CardItem data={it} type={'mobile'} openItem={this.openItem.bind(this)} />\n                                                </Grid>\n                                            </React.Fragment>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                    :\n                                null\n                                :\n                            null\n                    )}\n                    \n                    {this.state.openItem ?\n                        <Dialog disableElevation fullScreen open={this.state.openModal} className=\"ItemDialog\" onClose={this.handleClose.bind(this)} TransitionComponent={Transition}>\n                            <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClose.bind(this)}>\n                                    <IconClose style={{ width: 25, height: 25 }} />\n                                </IconButton>\n                            </DialogTitle>\n                            <div>\n                                <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                            </div>\n                        </Dialog>\n                            :\n                        null\n                    }\n                    \n                    {this.state.openItem ?\n                        <>\n                            <Dialog disableElevation maxWidth={'md'} sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalMD\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -52, left: 16, zIndex: 1500, width: 52, height: 52, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog disableElevation maxWidth={'lg'} sx={{ display: { xs: 'none', lg: 'block' } }} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePC.bind(this)} className=\"modalActii Item OpenItemPC testModalLG\" open={this.state.openModalPC}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 1500, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePC.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ overflow: 'hidden' }}>\n                                    <Item itemId={this.state.openItem.id} item={this.state.openItem} openSetPc={this.openSetPc.bind(this)} openInfo={this.openInfo.bind(this)} openModalPCInfo={this.state.openModalPCInfo} />\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n\n                    {this.state.openItem ?\n                        <>\n                            <Dialog sx={{ display: { xs: 'block', md: 'none' } }} disableElevation fullScreen style={{ width: '100%', marginTop: this.state.openItem.items.length > 1 ? 400 : 470, borderTopRightRadius: 30, borderTopLeftRadius: 30 }} onClose={this.handleClosePCInfo.bind(this)} className=\"ItemDialog OpenItemMobInfo blurBacground\" open={this.state.openModalPCInfo} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCInfo.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: this.state.openItem.items.length > 1 ? 'calc(100vh - 400px)' : 'calc(100vh - 470px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#fff', width: '100%', marginBottom: 20 }}>Пищевая ценность на 100 г</Typography>\n\n                                    { this.state.openItem.items.length == 1 ? null :\n                                        <div style={{ width: '100%', height: 2, backgroundColor: '#fff', marginBottom: 20 }} />\n                                    }\n\n                                    <div style={ this.state.openItem.items.length > 1 ? { overflowY: 'scroll', maxHeight: 200 } : {}}>\n                                        { this.state.openItem.items.map( (item, key) =>\n                                            <div style={{ border: '2px solid #fff', borderRadius: 10, marginBottom: this.state.openItem.items.length == 1 ? 0 : this.state.openItem.items.length-1 == key ? 0 : 20 }} key={key}>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', borderBottom: '2px solid #fff' }}>\n                                                    <div style={{ width: '75%', display: 'flex', alignItems: 'center', borderRight: '2px solid #fff', padding: 10 }}>\n                                                        <Typography style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '1.1rem', lineHeight: 1.25, color: '#fff' }}>{item.name}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '25%', display: 'flex', alignItems: 'center', flexDirection: 'column', justifyContent: 'center', padding: 10 }}>\n                                                        <Typography style={{ fontSize: '2rem', lineHeight: 1, fontFamily: 'Roboto', fontWeight: 500, color: '#fff' }}>{item.kkal}</Typography>\n                                                        <Typography style={{ fontSize: '1rem', lineHeight: 0.8, fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>ккал</Typography>\n                                                    </div>\n                                                </div>\n                                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\n                                                    <div style={{ width: '50%', padding: 10, borderRight: '2px solid #fff' }}>\n                                                        <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, color: '#fff' }}>Состав: {item.tmp_desc}</Typography>\n                                                    </div>\n                                                    <div style={{ width: '50%', padding: 10 }} className='styleTooltip'>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>белки</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.protein} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>жиры</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.fat} г</Typography>\n                                                        </div>\n                                                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 1, color: '#fff' }}>углеводы</Typography>\n                                                            <Typography style={{ fontSize: '0.8rem', fontFamily: 'Roboto', fontWeight: 400, order: 3, color: '#fff' }}>{item.carbohydrates} г</Typography>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) }\n                                    </div>\n                                    \n                                    \n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'block', sm: 'none' } }} disableElevation fullScreen style={{ height: 'calc(100vh - 50px)', width: '100%' }} onClose={this.handleClosePCSet.bind(this)} className=\"ItemDialog OpenItemMobSet\" open={this.state.openModalPCSet} TransitionComponent={Transition}>\n                                <DialogTitle disableTypography style={{ margin: 0, padding: 0 }}>\n                                    <IconButton aria-label=\"close\" style={{ position: 'absolute', top: -36, left: 15, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                        <IconClose style={{ width: 25, height: 25 }} />\n                                    </IconButton>\n                                </DialogTitle>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ height: 'calc(100vh - 50px)', padding: 20, display: 'flex', flexWrap: 'wrap', alignContent: 'start' }}>\n\n                                    <Typography variant=\"h5\" component=\"h1\" style={{ textAlign: 'center', fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.625rem', color: '#525252', width: '100%' }}>{this.state.openItem.name}</Typography>\n\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                                        <div style={{ width: parseInt( this.state.openItem.cat_id ) == 4 ? 238 : parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ? 78 : 148, height: 28, border: '1px solid #DADADA', borderRadius: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginTop: 10, marginBottom: 20 }}>\n                                            { parseInt( this.state.openItem.cat_id ) == 4 ?\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{this.state.openItem.count_part_new}</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                                    :\n                                                null\n                                            }\n                                            { parseInt( this.state.openItem.cat_id ) == 5 || parseInt( this.state.openItem.cat_id ) == 6 || parseInt( this.state.openItem.cat_id ) == 7 ?\n                                                null\n                                                    :\n                                                <>\n                                                    <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: parseInt( this.state.openItem.cat_id ) == 4 ? 2 : 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ parseInt( this.state.openItem.cat_id ) == 14 ? this.state.openItem.size_pizza + ' см' : this.state.openItem.count_part + ' шт.' }</Typography>\n                                                    <div style={{ height: '100%', borderLeft: '1px solid #DADADA' }} />\n                                                </>\n                                            }\n                                            <Typography variant=\"h5\" component=\"span\" className='ModalItemOther' style={{ flex: 3, textAlign: 'center', fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.87rem', color: '#525252' }}>{ new Intl.NumberFormat('ru-RU').format(this.state.openItem.weight)} { parseInt( this.state.openItem.cat_id ) == 6 ? 'л' : 'г' }</Typography>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh - 250px)', overflow: 'auto' }}>\n                                        {this.state.openModalPCSetItems.map( (item, key) =>\n                                            <div key={key} style={{ width: '100', display: 'flex', flexDirection: 'row', padding: '10px 0', borderTop: key == 0 ? '1px solid rgba(27, 27, 31, 0.1)' : null, borderBottom: '1px solid rgba(27, 27, 31, 0.1)' }}>\n                                                <div style={{ width: '40%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                    { item.img_app.length == 0 || !item.img_app ?\n                                                        <picture>\n                                                            <source \n                                                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                                type=\"image/webp\" \n                                                            />\n                                                            <img \n                                                                src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                                alt={item.name}\n                                                                title={item.name}\n                                                                style={{ width: '100%', height: 'auto' }}\n                                                            />\n                                                        </picture>\n                                                            :\n                                                        <picture>\n                                                            <source srcset={`\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                                https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                                sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                            <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                        </picture>\n                                                    }\n                                                </div>\n                                                <div style={{ width: '60%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 700, fontSize: '1.06rem', color: '#525252'  }}>{ item.name }</Typography>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.875rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                            \n                            <Dialog sx={{ display: { xs: 'none', md: 'block', lg: 'none' } }} disableElevation maxWidth={'md'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '30%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '70%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem'  }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 300, fontSize: '0.94rem'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        \n                            <Dialog sx={{ display: { xs: 'none', lg: 'block' } }} disableElevation maxWidth={'lg'} fullWidth={true} style={{ borderRadius: 50 }} onClose={this.handleClosePCSet.bind(this)} className=\"modalActii Item OpenItemPCSet\" open={this.state.openModalPCSet}>\n                                <IconButton className='IconButtonClose' aria-label=\"close\" style={{ position: 'absolute', top: -44, left: 16, zIndex: 2000, width: 40, height: 40, backgroundColor: 'transparent' }} onClick={this.handleClosePCSet.bind(this)}>\n                                    <IconClose />\n                                </IconButton>\n                                \n                                <DialogContent className=\"modalActiiContentNew\" style={{ display: 'flex', flexWrap: 'wrap', padding: '2% 2.25% 2% 4.5%', marginRight: '1.5%', alignContent: 'start' }}>\n                                    {this.state.openModalPCSetItems.map( (item, key) =>\n                                        <div key={key} style={{ width: '49%', display: 'flex', flexDirection: 'row', marginRight: key == 0 || key % 2 == 0 ? '2%' : 0, marginBottom: '2%' }}>\n                                            <div style={{ width: '45%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                                { item.img_app.length == 0 || !item.img_app ?\n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                            style={{ width: '100%', height: 'auto' }}\n                                                        />\n                                                    </picture>\n                                                        :\n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img alt={item.name} title={item.name} style={{ width: '100%', height: 'auto' }} src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                }\n                                            </div>\n                                            <div style={{ width: '55%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 500, fontSize: '1.25rem', color: '#525252' }}>{ item.name }</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ fontFamily: 'Roboto', fontWeight: 400, fontSize: '0.9rem', color: '#525252'  }}>{ item.tmp_desc }</Typography>\n                                            </div>\n                                        </div>\n                                    )}\n                                </DialogContent>\n                            </Dialog>\n                        </>\n                            :\n                        null\n                    }\n                    \n                </Element>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nfunction ControlledAccordions(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const points = props.points;\n\n    return (\n        <div className=\"Accordion\">\n            {points.map((item, key) => \n                <Accordion key={key} expanded={expanded === 'panel'+key} onChange={handleChange('panel'+key)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\"+key+\"bh-content\"}\n                        id={\"panel\"+key+\"bh-header\"}\n                    >\n                        <Typography variant=\"h5\" component=\"span\">{item.raion}: {item.addr}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className=\"AccordionDesc\" style={{ flexDirection: 'column', padding: 0 }}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Название организации: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.organization}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ИНН / КПП: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.inn} / {item.kpp}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">ОГРН: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.ogrn}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Фактический адрес: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.full_addr}</Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"h5\" component=\"b\">Телефон: </Typography>\n                            <Typography variant=\"h5\" component=\"span\">{item.phone}</Typography>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n        </div>\n    );\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Contact extends React.Component {\n    is_load_script = false;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            points: [],  \n            unic_point: [],\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n            city_name: this.props.city,\n            is_load: false,\n\n            is_load_script: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    dynamicallyLoadScript() {\n        if( this.state.is_load_script === false ){\n\n            console.log( 'is_load_script' )\n\n            var script = document.createElement(\"script\");  // create a script DOM node\n            script.src = 'https://api-maps.yandex.ru/2.1/?apikey=ae2bad1f-486e-442b-a9f7-d84fff6296db&lang=ru_RU';  // set its src to the provided URL\n\n            document.head.appendChild(script);  // add it to the end of the head section of the page (could change 'head' to 'body' to add it to the end of the body section instead)\n\n            this.setState({\n                is_load_script: true\n            })\n        }\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('contact');\n        \n        //this.dynamicallyLoadScript();\n        \n        Contact.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_addr_zone_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            let points_zone = [];\n            \n            json.map(function(point){\n\t\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t\t}\n            })\n            \n            let unic_point = [],\n                check = false;\n            \n            json.map(function(point){\n                check = false;\n                \n                unic_point.map(function(new_point){\n                    if( parseInt(new_point.id) == parseInt(point.id) ){\n                        check = true;\n                    }\n                })\n                \n                if( !check ){\n                    unic_point.push(point)\n                }\n            })\n            \n            this.setState({\n                points: json,\n                unic_point: unic_point,\n                is_load: true\n            })\n            \n            setTimeout(() => {\n                this.loadMap(json, points_zone);\n            }, 500);\n            \n        })\n        .catch(err => { });\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'contacts' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    loadMap(points, points_zone){\n        let myMap2;\n        \n        ymaps.ready(function () {\n\n            myMap2 = new ymaps.Map('ForMap', {\n\t\t\t\tcenter: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n\t\t\t\tzoom: 10.8\n\t\t\t});\n            \n\t\t\tlet HintLayout = ymaps.templateLayoutFactory.createClass( \n                \"<div class='my-hint'>\" +\n                    \"<b>{{ properties.address }}</b><br />\" +\n                    \"График работы: c 10:00 до 21:30<br />\" +\n                    \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n                \"</div>\"\n            );\n\t\t\t\n            points_zone.map((zone, key)=>{\n                myMap2.geoObjects.add(\n                    new ymaps.Polygon([zone], {\n    \t\t\t\t\t//hintContent: \"Зона доставки\"\n                        address: points[ key ]['addr'], \n                        sum_div: points[ key ]['sum_div'], \n    \t\t\t\t}, {\n                        hintLayout: HintLayout,\n    \t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0.25)',\n    \t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\n    \t\t\t\t\tstrokeWidth: 5\n    \t\t\t\t})\n                );\n            })\n            \n\t\t\tpoints.map(function(point){\n\t\t\t\tmyMap2.geoObjects.add(\n                    new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n    \t\t\t\t\n                    }, {\n                        iconLayout: 'default#image',\n                        iconImageHref: '/assets/img_other/Favikon.png',\n    \t\t\t\t\ticonImageSize: [30, 30],\n    \t\t\t\t\ticonImageOffset: [-12, -24],\n    \t\t\t\t\ticonContentOffset: [15, 15],\n    \t\t\t\t})\n                )\n\t\t\t})\n        })\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Контакты</Typography>\n                </Grid>\n                <Grid item lg={4} md={4} xl={4} sm={12} xs={12} className=\"mainContainer\">\n                    <Typography variant=\"h5\" component=\"h2\">Режим работы</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"p20\">Работаем ежедневно с 10:00 до 21:30</Typography>\n                    <Typography variant=\"h5\" component=\"h2\">Телефон контакт-центра:</Typography>\n                    {this.state.points[0] ?\n                        <Typography variant=\"h5\" component=\"a\" className=\"p20\" href={'tel:'+this.state.points[0].phone_new}>{this.state.points[0].phone}</Typography>\n                            :\n                        null\n                    }\n\n                    <Typography variant=\"h5\" component=\"h2\">Адреса кафе:</Typography>\n                    <ControlledAccordions points={this.state.unic_point}/>\n                </Grid>\n                <Grid item lg={8} md={8} xl={8} sm={12} xs={12} id=\"ForMap\">\n                    <div style={{ width: '100%', height: '100%', marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Snackbar from '@mui/material/Snackbar';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class Actii extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],\n            pre_actii: [1, 2, 3, 4],  \n            is_load: false,\n            showItem: null,\n            openDialog: false,\n            title: '',\n            description: '',\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'akcii' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('actii');\n        \n        Actii.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_my_actii_web', \n                city_id: this.state.city_name\n            })\n        }).then(res => res.json()).then(json => {\n            \n            this.setState({ \n                actii: json.actii,  \n                is_load: true,\n            });\n            \n            setTimeout(() => {\n                let hash = window.location.search;\n                \n                if( hash.length > 0 && hash.indexOf('act_') > 0 ){\n                    let act_id = hash.split('act_')[1];\n                    \n                    let this_item = json.actii.find( (item) => item.id == act_id );\n                    \n                    this.openDialog(this_item);\n                }\n            }, 300);\n        })\n        .catch(err => { });\n    }\n    \n    closeDialog(){\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        \n        let allItems = itemsStore.getAllItems();\n        \n        item.items.map((act_item, key) => {\n            item.items[key]['item'] = allItems.find( (item) => item.id == act_item.item_id );\n        })\n        \n        let state = {  },\n            title = '',\n            url = window.location.pathname+'?act_'+item.id;\n\n        window.history.pushState(state, title, url)\n        \n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Actii mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    \n                />\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Акции</Typography>\n                </Grid>\n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\">\n                    \n                    {this.state.is_load === false ?\n                        this.state.pre_actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={3} xl={3} key={key} style={{ padding: 12}}>\n                                <div style={{ width: '100%', height: 300, backgroundColor: '#e5e5e5' }} />\n                            </Grid>\n                        )\n                            :\n                        this.state.actii.map((item, key) =>\n                            <Grid item xs={12} sm={6} md={4} xl={3} key={key}>\n                                <picture>\n                                    <source \n                                        srcSet={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.webp?\"+item.img_new_update} \n                                        type=\"image/webp\" \n                                    />\n                                    <img \n                                        src={\"https://storage.yandexcloud.net/site-aktii/\"+item.img_new+\"750х750.jpg?\"+item.img_new_update} \n                                        alt={item.promo_title}\n                                        title={item.promo_title}\n                                        style={{ width: '100%' }}\n                                        onClick={this.openDialog.bind(this, item)}\n                                    />\n                                </picture>\n                            </Grid>\n                        )\n                    }\n                    \n                    \n                </Grid>\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\" component=\"h2\">{ this.state.page && this.state.page.page_h ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                        :\n                    null\n                }\n                \n                { this.state.page && this.state.page.content && false ?\n                    <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer dopText\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                        :\n                    null\n                }\n                \n                { this.state.showItem ?\n                    <Dialog onClose={this.closeDialog.bind(this)} aria-labelledby=\"customized-dialog-title\" className=\"modalActii\" open={this.state.openDialog}>\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showItem.promo_title}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0 }} onClick={this.closeDialog.bind(this)}>\n                                <FontAwesomeIcon icon={faTimes} style={{ fontSize: '1.8rem', color: '#e5e5e5' }} />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"modalActiiContent\">\n                            <div dangerouslySetInnerHTML={{__html: this.state.showItem.text}} />\n                        </DialogContent>\n                        {this.state.showItem.promo.length > 0 ?\n                            <DialogActions style={{ justifyContent: 'center', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" onClick={this.activePromo.bind(this, this.state.showItem.info, this.state.showItem.promo)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Применить промокод</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport TextField from '@mui/material/TextField';\n\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport AppBar from '@mui/material/AppBar';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div style={{ width: '100%' }}>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : \"50\"} height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1500 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nexport class Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            actii: [],  \n            is_load: false,\n            openDialog: false,\n            delOrder: false,\n            \n            errorOpen: false,\n            error: {\n                title: '',\n                text: ''\n            },\n            \n            title: '',\n            description: '',\n            page: this.props.data ? this.props.data.page : null,\n            city_name: this.props.city,\n            \n            typeDel: '0',\n            \n            valueTab: 1,\n            info: {},\n            arr_day: [],\n            arr_m: [ \n                {name: 'Января', value: 1},\n                {name: 'Февраля', value: 2},\n                {name: 'Марта', value: 3},\n                {name: 'Апреля', value: 4},\n                {name: 'Мая', value: 5},\n                {name: 'Июня', value: 6},\n                {name: 'Июля', value: 7},\n                {name: 'Августа', value: 8},\n                {name: 'Сентября', value: 9},\n                {name: 'Октября', value: 10},\n                {name: 'Ноября', value: 11},\n                {name: 'Декабря', value: 12}\n            ],\n            \n            radiogroup_options: [\n                {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n                {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n                {id: '2', label: 'Изменились планы', value: 0 },\n                {id: '3', label: 'Недостаточно средств', value: 0 },\n                {id: '4', label: 'Другое', value: 0 },\n            ],\n            textDel: '',\n            \n            changeDay: '',\n            changeM: '',\n            userMail: '',\n            openMSG: false,\n            statusMSG: false,\n            textMSG: '',\n            spam: 0,\n            userName: '',\n            \n            spiner: false,\n            showOrder: null\n        };\n        \n        if( typeof window !== 'undefined' ){\n            \n            setTimeout( () => {\n                let search = window.location.search;\n            \n                if( search.length > 0 ){\n                    \n                    if(search.indexOf('orderId') > 0){\n                        let order_pay = window.location.search;\n                    \n                        let p1 = order_pay.split('&');\n                        let bank = p1[0].split('bank=');\n                        bank = bank[1];\n    \n                        let order_id = p1[1].split('orderId=');\n                        order_id = order_id[1];\n                        \n                        this.checkPay(bank, order_id);\n                        \n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                    \n                    if(search.indexOf('trueOrder') > 0){\n                        let state = { },\n                            title = '',\n                            url = window.location.pathname;\n    \n                        window.history.pushState(state, title, url)\n                    }\n                }\n            }, 300 )\n            \n        }\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    componentDidMount = () => {\n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('profile');\n        \n        setTimeout( () => {\n            if( !itemsStore.getToken() ){\n                window.location.pathname = '/'+this.state.city_name;\n                //this.props.history.replace({ pathname: '/'+this.state.city_name+'/' });\n            }\n        }, 300 )\n        \n        Profile.fetchData('/'+this.state.city_name).then( data => {\n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n            } );\n        } );\n        \n        this.loadData();\n    }\n    \n    loadData(){\n        let arr_day = [];\n        \n        for(let i = 1; i <= 31; i++){\n            arr_day.push(i)\n        }\n        \n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                \n                let check_reload = json.orders.my_orders.filter( (item) => parseInt(item.status_order) != 6 && parseInt(item.is_delete) == 0 );\n                \n                this.setState({ \n                    info: json, \n                    is_load: true,\n                    arr_day: arr_day,\n                    userMail: json.user.mail,\n                    spam: json.user.spam,\n                    userName: json.user.name\n                });\n                \n                if( check_reload.length > 0 ){\n                    setTimeout(()=>{\n                        this.loadData();\n                    }, 6000)\n                }\n                \n            })\n            .catch(err => { });\n        }, 300 )\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'profile' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    checkPay(bank, pay_id) {\n        let data = {\n            type: 'check_pay_web', \n            payId: pay_id,\n            bank: bank\n        };\n        \n        axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                if( json.repeat ){\n                    setTimeout(()=>{\n                        this.checkPay(bank, pay_id);\n                    }, 5000)\n                }else{\n                    if( !json.is_create ){\n                        this.setState({\n                            spiner: false\n                        })\n                      \n                        if( json.st ){\n                            this.trueOrder(json.order_id, json.point_id);\n                        }else{\n                            this.props.history.push(window.location.pathname);\n                            \n                            this.setState({\n                                error: {\n                                    title: 'Ошибка оплаты', \n                                    text: json.pay.actionCodeDescription\n                                },\n                                errorOpen: true\n                            })\n                        }\n                    }\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    trueOrder(order_id, point_id){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: order_id,\n                point_id: point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: '0',\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                this.loadData();\n            }\n        });\n    }\n    \n    closeDialog(){\n        this.setState({\n            showItem: null,\n            openDialog: false\n        })\n    }\n    \n    openDialog(item){\n        this.setState({\n            showItem: item,\n            openDialog: true\n        })\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            valueTab: newValue\n        })\n    }\n    \n    changeM = (event) => {\n        this.setState({\n            changeM: event.target.value\n        })\n    }\n    \n    changeDay = (event) => {\n        this.setState({\n            changeDay: event.target.value\n        })\n    }\n    \n    changeMail = (event) => {\n        this.setState({\n            userMail: event.target.value\n        })\n    }\n    \n    closeAlert(){\n        this.setState({\n            openMSG: false\n        })\n    }\n    \n    changeCheck = (event) => {\n        let check = event.target.checked;\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_spam', \n                my_spam: check ? 1 : 0,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            this.setState({\n                openMSG: true,\n                statusMSG: true,\n                textMSG: \"Данные успешно обновлены\",\n                spam: check ? 1 : 0\n            })\n        });\n    }\n    \n    saveMail(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_mail_web', \n                my_mail: this.state.userMail,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    saveDay(){\n        let day = this.state.changeDay,\n            mo = this.state.changeM;\n        \n        if( day != '' & mo != '' ){\n            \n            let nameM = '';\n            \n            this.state.arr_m.map(function(item, key){\n                if( parseInt(item.value) == parseInt(mo) ){\n                    nameM = item.name;\n                }\n            })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_profile_date', \n                    my_date: day + ' ' + nameM,\n                    user_id: itemsStore.getToken(),\n                })\n              }).then(res => res.json()).then(json => {\n                if( json['st'] ){\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'get_user_web', \n                            city_id: this.state.city_name,\n                            user_id: itemsStore.getToken()\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.setState({ \n                            info: json, \n                        });\n                    })\n                    .catch(err => { });\n                }\n                  \n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\"\n                        });\n                        \n                        \n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    activePromo(promo_info, promo_name){\n        itemsStore.setPromo(JSON.stringify(promo_info), promo_name)\n        let res = itemsStore.checkPromo();\n        \n        setTimeout(() => {\n            if( res['st'] ){\n                this.setState({\n                    openMSG: true,\n                    statusMSG: true,\n                    textMSG: \"Промокод применен\"\n                })\n            }else{\n                this.setState({\n                    openMSG: true,\n                    statusMSG: false,\n                    textMSG: res['text']\n                })\n            }\n        }, 300);\n    }\n    \n    changeName = (event) => {\n        this.setState({\n            userName: event.target.value\n        })\n    }\n    \n    saveName(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_profile_name', \n                my_name: this.state.userName,\n                user_id: itemsStore.getToken(),\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(() => {\n                if( json['st'] ){\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: true,\n                        textMSG: \"Данные успешно обновлены\"\n                    })\n                }else{\n                    this.setState({\n                        openMSG: true,\n                        statusMSG: false,\n                        textMSG: json['text']\n                    })\n                }\n            }, 300);\n        });\n    }\n    \n    getOrder(order_id, point_id){\n        this.setState({ \n            spiner: true\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_order', \n                order_id: order_id,\n                point_id: point_id\n            })\n        }).then(res => res.json()).then(json => {\n            setTimeout(()=>{\n                this.setState({ \n                    showOrder: json,\n                    openDialog: true,\n                    spiner: false\n                });\n            }, 1000)\n        })\n        .catch(err => { });\n    }\n    \n    closeOrder(){\n        this.setState({\n            delOrder: true,\n            typeDel: '0',\n            textDel: ''\n        })\n    }\n    \n    changeAddr = (event) => {\n        this.setState({\n            typeDel: event.target.value,\n        })\n    }\n    \n    closeOrderTrue(){\n        \n        let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n        if( deltype.id == '4' ){\n            deltype.label = this.state.textDel;\n        }\n        \n        if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'close_order', \n                    user_id: itemsStore.getToken(),\n                    order_id: this.state.showOrder.order.order_id,\n                    point_id: this.state.showOrder.order.point_id,\n                    ans: deltype.label\n                })\n            }).then(res => res.json()).then(json => {\n                setTimeout(() => {\n                    if( json['st'] ){\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: true,\n                            textMSG: \"Данные успешно обновлены\",\n                            \n                            delOrder: false,\n                            openDialog: false,\n                            showItem: null,\n                        });\n                        \n                        this.loadData();\n                    }else{\n                        this.setState({\n                            openMSG: true,\n                            statusMSG: false,\n                            textMSG: json['text']\n                        })\n                    }\n                }, 300);\n            });\n        }\n    }\n    \n    repeatOrder(){\n        let my_cart = [];\n        let all_items = itemsStore.getAllItems();\n        let item_info = null;\n        \n        this.state.showOrder.order_items.map( (item) => {\n            item_info = all_items.find( (item_) => item_.id == item.item_id );\n            \n            if( item_info ){\n                let price = parseInt(item_info.price),\n                    all_price = parseInt(item.count) * parseInt(item_info.price);\n                \n                my_cart.push({\n                    name: item.name,\n                    item_id: item.item_id,\n                    count: item.count,\n                    \n                    one_price: price,\n                    all_price: all_price\n                })\n            }\n        } )\n        \n        let data = {\n            orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n            orderAddr: parseInt(this.state.showOrder.order.type_order_) == 1 ? this.state.showOrder.street.name : null,\n            orderPic: parseInt(this.state.showOrder.order.point_id),\n            orderComment: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n            orderSdacha: '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n        \n        if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n            itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n        }\n        itemsStore.setItems(my_cart)\n        \n        setTimeout(()=>{\n            window.location.pathname = '/'+this.state.city_name+'/cart';\n        }, 300)\n    }\n    \n    logOut(){\n        localStorage.removeItem('token');\n        window.location.pathname = '/'+this.state.city_name;\n    }\n    \n    render() {\n        return (\n            <Grid container className=\"Profile mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Личный кабинет</Typography>\n                </Grid>\n                \n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openMSG}\n                    autoHideDuration={3000}\n                    onClose={this.closeAlert.bind(this)}\n                    message={this.state.textMSG}\n                    style={{ backgroundColor: this.state.statusMSG ? 'green' : '#BB0025', borderRadius: 4 }}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.closeAlert.bind(this)}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                \n                <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.valueTab} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Промокоды\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Заказы\" {...a11yProps(1)} disableRipple={true} />\n                            <Tab label=\"Редактирование\" {...a11yProps(2)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.valueTab} index={0} style={{ width: '100%' }}>\n                        <div style={{ padding: 12 }}>\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'none', lg: 'block' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromo\">\n                                        <thead>\n                                            <tr>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Промокод дает:</Typography></td>\n                                                <td><Typography variant=\"h5\" component=\"span\">Действует до</Typography></td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td><Typography variant=\"h5\" component=\"span\" onClick={this.activePromo.bind(this, item.info, item.promo_name)}>{item.promo_name}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography></td>\n                                                    <td><Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                            {this.state.info.promo ?\n                                <Box sx={{ display: { xs: 'block', lg: 'none' } }}>\n                                    <table style={{ width: '100%' }} className=\"TablePromoMobile\">\n                                        <tbody>\n                                            {this.state.info.promo.promo.map((item, key) => \n                                                <tr key={key}>\n                                                    <td>\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_name}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Действует до: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.date_end}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10, textAlign: 'justify' }}>\n                                                            <Typography variant=\"h5\" component=\"span\">Промокод дает: </Typography>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.promo_text}</Typography>\n                                                        </div>\n                                                        <div style={{ width: '100%', paddingTop: 10 }}>\n                                                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.activePromo.bind(this, item.info, item.promo_name)}>\n                                                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" style={{ width: '100%' }}>Применить промокод</Button>\n                                                            </ButtonGroup>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                </Box>\n                                    :\n                                null\n                            }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={1} style={{ width: '100%' }}>\n                        {this.state.info.orders ?\n                            <div className=\"TableOrders\">\n                                <div className=\"thead\">\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>№</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>Дата</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>Сумма</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}></Typography>\n                                </div>\n                                <div className=\"tbody\">\n                                    {this.state.info.orders.my_orders.map((item, key) => \n                                        <div key={key} className={ (parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? '' : 'active' } onClick={ this.getOrder.bind(this, item.order_id, item.point_id) }>\n                                            <div>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 2 }}>{item.order_id}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 3 }}>{item.date_time_new}</Typography>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\" style={{ flex: 1 }}>{item.sum} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                <Typography variant=\"h5\" component=\"span\" style={{ flex: 1 }}>{parseInt(item.is_delete) == 1 ? <CloseIcon style={{ position: 'relative', top: 3 }} /> : parseInt(item.status_order) == 6 ? <CheckIcon style={{ position: 'relative', top: 3 }} /> : null}</Typography>\n                                            </div>\n                                            \n                                            {(parseInt(item.status_order) == 6 || parseInt(item.is_delete) == 1) ? null :\n                                                <div className=\"boxSteps\">\n                                                    <div>\n                                                        <div className={ parseInt(item.steps[0]['active']) == 0 || parseInt(item.steps[0]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[0]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[1]['active']) == 0 || parseInt(item.steps[1]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[1]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[2]['active']) == 0 || parseInt(item.steps[2]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[2]['name']}</Typography>\n                                                        </div>\n                                                        <div className={ parseInt(item.steps[3]['active']) == 0 || parseInt(item.steps[3]['active']) == 2 ? '' : 'active' }>\n                                                            <Typography variant=\"h5\" component=\"span\">{item.steps[3]['name']}</Typography>                                                        \n                                                        </div>\n                                                    </div>\n                                                    { item.time_to_client == 0 ? null :\n                                                        <div>\n                                                            <Typography variant=\"h5\" component=\"span\">Заказ { parseInt(item.type_order) == 1 ? 'привезут до: ' : 'будет готов до: ' }{item.time_to_client}</Typography>\n                                                        </div>\n                                                    }\n                                                </div> \n                                            }\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                    <TabPanel value={this.state.valueTab} index={2} style={{ width: '100%' }}>\n                        {this.state.info.user ?\n                            <div className=\"TableInfo\">\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField \n                                        label=\"Имя\" \n                                        value={this.state.userName} \n                                        className=\"input\" \n                                        onChange={this.changeName.bind(this)}\n                                        onBlur={this.saveName.bind(this)}\n                                        size=\"small\"\n                                    />\n                                    <TextField \n                                        InputProps={{ readOnly: true }} \n                                        label=\"Номер телефона\" \n                                        value={this.state.info.user.login} \n                                        className=\"input\" \n                                        size=\"small\"\n                                    />\n                                </form>\n                                <form noValidate autoComplete=\"off\">\n                                    {this.state.info.user.date_bir != '' ?\n                                        <TextField \n                                            label=\"Дата рождения\" \n                                            className=\"input\" \n                                            InputProps={{ readOnly: true }} \n                                            value={this.state.info.user.date_bir} \n                                            size=\"small\"\n                                        />\n                                            :\n                                        <div className=\"input\">\n                                            <InputLabel className=\"otherLabel\" size=\"small\">Дата рождения</InputLabel>\n                                            \n                                            <FormControl className=\"ChangeDay\">\n                                                <Select\n                                                    size=\"small\"\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeDay}\n                                                  onChange={this.changeDay.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">День</MenuItem>\n                                                    {this.state.arr_day.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item}>{item}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            <FormControl className=\"ChangeM\">\n                                                <Select\n                                                  labelId=\"demo-simple-select-label\"\n                                                  id=\"demo-simple-select\"\n                                                  displayEmpty\n                                                  value={this.state.changeM}\n                                                  onChange={this.changeM.bind(this)}\n                                                  onBlur={this.saveDay.bind(this)}\n                                                  size=\"small\"\n                                                >\n                                                    <MenuItem className=\"menuItem\" value=\"\">Месяц</MenuItem>\n                                                    {this.state.arr_m.map((item, key) =>\n                                                        <MenuItem key={key} className=\"menuItem\" value={item.value}>{item.name}</MenuItem>\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    }\n                                    <TextField \n                                        label=\"E-mail\" \n                                        className=\"input\" \n                                        value={this.state.userMail} \n                                        onChange={this.changeMail.bind(this)} \n                                        onBlur={this.saveMail.bind(this)}\n                                        size=\"small\"\n                                    />\n                                </form>\n                                \n                                <FormGroup row className=\"input checkbox\">\n                                    <FormControlLabel \n                                        onChange={this.changeCheck.bind(this)} \n                                        control={\n                                            <Checkbox \n                                                checked={ parseInt(this.state.spam) == 1 ? true : false } \n                                                name=\"checkedC\" \n                                                sx={{\n                                                    '&.Mui-checked': {\n                                                        color: '#c03',\n                                                    },\n                                                }}\n                                            />} \n                                        label=\"Получать сообщения с акциями\" \n                                    />\n                                </FormGroup>\n                                \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.logOut.bind(this)}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Выйти</Button>\n                                </ButtonGroup>\n                            </div>\n                                :\n                            null\n                        }\n                    </TabPanel>\n                </Grid>\n                \n                { this.state.showOrder ?\n                    <Dialog \n                        onClose={this.closeDialog.bind(this)} \n                        aria-labelledby=\"customized-dialog-title\" \n                        className=\"showOrderDialog\" \n                        open={this.state.openDialog}\n                        fullWidth={true}\n                    >\n                        <DialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                            <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                          \n                            <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogTitle>\n                        \n                        <DialogContent className=\"showOrderDialogContent\">\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                            <Typography variant=\"h6\" component=\"span\">Статус заказа: {this.state.showOrder.order.this_status_order}</Typography>\n                            { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                                <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Промокод: {this.state.showOrder.order.promo_name}</Typography>\n                            }\n                            { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                            }\n                            { this.state.showOrder.order.sdacha == null || this.state.showOrder.order.sdacha.length == 0 || this.state.showOrder.order.sdacha == 0 ? null :\n                                <Typography variant=\"h6\" component=\"span\">Сдача с: {this.state.showOrder.order.sdacha}</Typography>\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"CardPriceItem\">Сумма закза: {this.state.showOrder.order.sum_order} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {this.state.showOrder.order_items.map((item, key) => \n                                        <tr key={key}>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            \n                        </DialogContent>\n                        \n                        { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                        { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                            <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                                </ButtonGroup>\n                            </DialogActions>\n                                :\n                            null\n                        }\n                    </Dialog>\n                        :\n                    null\n                }\n                \n                <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Отмена заказа</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Нам очень жаль, что вы приняли решение отменить заказ. Возможно, мы сделали что-то не так, помогите нам стать лучше, поделитесь причиной отказа:\n                        </DialogContentText>\n                      \n                        <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                            <CloseIcon />\n                        </IconButton>\n                      \n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                                {this.state.radiogroup_options.map((item, key) => \n                                    <FormControlLabel \n                                        key={key} \n                                        value={item.id} \n                                        control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } \n                                        label={item.label} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                      \n                        <TextField\n                            //autoFocus\n                            onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                            value={ this.state.textDel }\n                            onChange={ (event) => { this.setState({ textDel: event.target.value }) } }\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Причина отмены\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n                        </ButtonGroup>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlus, faMinus, faCreditCard, faMoneyBill, faCashRegister, faGift, faQrcode } from '@fortawesome/free-solid-svg-icons'\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport AppBar from '@mui/material/AppBar';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport OutlinedInput from '@mui/material/OutlinedInput';\n\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nimport Input from '@mui/material/Input';\n\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { autorun } from \"mobx\"\n\nimport {Helmet} from \"react-helmet\";\n\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nvar firebaseAPP = null;\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nfunction Ruble(props){\n    return (\n        <svg width={ props.width ? props.width : 50 } height=\"20\" viewBox={ props.viewBox ? props.viewBox : \"0 0 1400 200\"} xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n                <path id=\"svg_1\" d=\"m219.27,252.76c63.98,-2.85 99.22,-39.48 99.22,-103.13c0,-37.42 -12.62,-65.49 -37.52,-83.44c-22.29,-16.07 -48.63,-19.21 -62.35,-19.65c-28.61,-0.92 -107.02,-0.04 -110.34,0c-5.75,0.07 -10.38,4.75 -10.38,10.5l0,174.95c-9.23,-0.11 -15.07,-0.2 -15.31,-0.21c-0.06,0 -0.11,0 -0.17,0c-5.72,0 -10.41,4.59 -10.5,10.34c-0.09,5.8 4.54,10.57 10.34,10.66c0.95,0.01 6.78,0.1 15.64,0.21l0,26.12l-15.48,0c-5.8,0 -10.5,4.7 -10.5,10.5s4.7,10.5 10.5,10.5l15.48,0l0,74.89c0,5.8 4.7,10.5 10.5,10.5s10.5,-4.7 10.5,-10.5l0,-74.9l109.39,0c5.8,0 10.5,-4.7 10.5,-10.5s-4.7,-10.5 -10.5,-10.5l-109.39,0l0,-25.88c32.67,0.31 78.53,0.51 100.37,-0.46zm-100.37,-185.33c22.81,-0.21 76.99,-0.61 99.05,0.1c23.92,0.77 79.55,10.31 79.55,82.1c0,52.17 -26.63,79.82 -79.16,82.16c-21.17,0.94 -66.91,0.74 -99.44,0.43l0,-164.79z\"/>\n            </g>\n        </svg>\n    )\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>\n            {children}\n            </div>   \n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass CartItem extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            new_onePrice: -1,\n            allPrice: 0\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let promo_cartItems = itemsStore.getItemsPromo();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( parseInt(this.state.count) > 0 || parseInt(this.state.item.cat_id) == 7 ){\n            return (\n                <tr>\n                    <td style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                        <picture>\n                            <source \n                                srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                                type=\"image/webp\" \n                            />\n                            <img \n                                src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                                alt={this.state.item.name}\n                                title={this.state.item.name}\n                            />\n                        </picture>\n                        \n                        {this.state.type == 'promo' ? \n                            <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                                :\n                            null\n                        }\n                        <div>\n                            <Typography variant=\"h5\" component=\"span\" className=\"nameItem\">{this.state.item.name}</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"descItem\">{this.state.item.desc}</Typography>\n                        </div>\n                    </td>\n                    <td>\n                        {this.state.type != 'promo' ? \n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\">\n                                    <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                                :\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                <Button variant=\"contained\" className=\"BtnCardMain\">\n                                    <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\" >{this.state.count}</Button>\n                                <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                    <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                </Button>\n                            </ButtonGroup>\n                        }\n                    </td>\n                    <td>\n                        { this.state.new_onePrice != -1 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                :\n                            null\n                        }\n                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"0 20 500 200\" /></Typography>\n                    </td>\n                </tr>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nclass CartItemMobile extends React.Component {\n    _isMounted = false;\n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.firebaseAnalitic = this.props.firebaseAnalitic;\n\n        this.state = {  \n            item: this.props.item,\n            type: this.props.type,\n            count: 0,\n            onePrice: 0,\n            allPrice: 0,\n            new_onePrice: -1\n        };\n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        let cartItems = itemsStore.getItems();\n        let this_item = cartItems.find( (item) => item.item_id == this.state.item.id );\n        \n        if( this_item ){\n            this.setState({\n                count: this_item.count,\n                onePrice: this_item.one_price,\n                allPrice: this_item.all_price,\n            })\n        }\n        \n        autorun(() => {\n            if( this._isMounted === true ){\n                let new_cartItems = itemsStore.getItems();\n                let promo_cartItems = itemsStore.getItemsPromo();\n                \n                if( promo_cartItems && promo_cartItems.length > 0 ){\n                    let this_item = promo_cartItems.find( (item) => item.item_id == this.state.item.id );\n                    \n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                        })\n                    }\n                }\n                \n                let this_item = new_cartItems.find( (item) => item.item_id == this.state.item.id );\n                \n                if( this.state.type != 'promo' ){\n                    if( this_item ){\n                        this.setState({\n                            count: this_item.count,\n                            onePrice: this_item.one_price,\n                            allPrice: this_item.all_price,\n                            new_onePrice: this_item.new_one_price ? this_item.new_one_price : -1\n                        })\n                    }else{\n                        this.setState({\n                            count: 0,\n                            onePrice: 0,\n                            allPrice: 0,\n                            new_onePrice: -1\n                        })\n                    }\n                }\n            }\n        })\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    add(item_id){\n        logEvent(this.firebaseAnalitic, 'add_to_cart', {\n            content_type: 'add_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.AddItem(item_id);\n    }\n    \n    minus(item_id){\n        logEvent(this.firebaseAnalitic, 'remove_from_cart', {\n            content_type: 'remove_cart',\n            content_id: item_id,\n            items: [{ name: this.state.item.name }]\n        });\n\n        itemsStore.MinusItem(item_id);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.count !== nextState.count ||\n            this.state.onePrice !== nextState.onePrice ||\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.item.name !== nextProps.item.name\n        );\n    }\n    \n    render() {\n        if( this.state.count > 0 || (parseInt(this.state.item.cat_id) == 7 || parseInt(this.state.item.cat_id) == 6) ){\n            return (\n                <div className=\"boxItem\">\n                    <picture style={{ width: '40%' }}>\n                        <source \n                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.webp?\"+this.state.item.imgUpdate} \n                            type=\"image/webp\" \n                        />\n                        <img \n                            src={\"https://storage.yandexcloud.net/site-img/\"+this.state.item.img+\"300х200.jpg?\"+this.state.item.imgUpdate} \n                            alt={this.state.item.name}\n                            title={this.state.item.name}\n                        />\n                    </picture>\n                    {this.state.type == 'promo' ? \n                        <FontAwesomeIcon icon={faGift} className=\"promoIcon\" />\n                            :\n                        null\n                    }\n                    <div style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\">{this.state.item.name}</Typography>\n                        <div>\n                            {this.state.type != 'promo' ? \n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.minus.bind(this, this.state.item.id)}>\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\" onClick={this.add.bind(this, this.state.item.id)}> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"count promo\">\n                                    <Button variant=\"contained\" className=\"BtnCardMain\">\n                                        <FontAwesomeIcon icon={faMinus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain _COUNT_\" >\n                                        <Typography component=\"span\" className=\"CardCountItem\">{this.state.count}</Typography>\n                                    </Button>\n                                    <Button variant=\"contained\" className=\"BtnCardMain\"> \n                                        <FontAwesomeIcon icon={faPlus} style={{ fontSize: '1rem' }} />\n                                    </Button>\n                                </ButtonGroup>\n                            }\n                            \n                            { this.state.new_onePrice != -1 ?\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePriceOld\">{ parseInt(this.state.count) * parseInt(this.state.onePrice) }</Typography>\n                                    :\n                                null\n                            }\n                            \n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.allPrice} <Ruble width=\"20\" viewBox=\"10 0 600 200\" /></Typography>\n                        </div>    \n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    }\n}\n\nexport class Cart extends React.Component {\n    _isMounted = false;\n    clickOrderStart = false\n    \n    startOrderInterval = 90;\n    startOrderIntervalTimer = null;\n    \n    firebaseAnalitic = null;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            hasError: false,\n            \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            spiner: false,\n            \n            title: '',\n            description: '',\n            \n            orderCheckDopTea: false,\n            \n            chooseAddr: false,\n            choosePicDialog: false,\n            chooseTimeDialog: false,\n            choosePayDialog: false,\n            chooseNewAddr: false,\n            orderCheckDop: false,\n            \n            sumDiv: 0,\n            allPrice: 0,\n            \n            pic_point: [],\n            my_addr: [],\n            all_addr: [],\n            date_pred: [],\n            \n            picPointInfo: null,\n            \n            pays: {\n                dev: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                dev_mini: [\n                    {type: 'cash', title: 'Наличными курьеру'},\n                    {type: 'card', title: 'Онлайн на сайте'},\n                ],\n                pic: [\n                    {type: 'in', title: 'В кафе'},\n                ]\n            },\n            renderPay: [\n                {type: 'cash', title: 'Наличными курьеру'},\n                {type: 'card', title: 'Онлайн на сайте'},\n            ],\n            \n            cartItems_main: [],\n            cartItems_dop: [],\n            cartItems_need_dop: [],\n            cartItems_promo: [],\n            cartItems_dop_tea: [],\n            \n            timePred: [],\n            \n            error: {\n                title: '', \n                text: ''\n            },\n            errorOpen: false,\n            orderCheck: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n            newAddrHome: '',\n            newAddrDom: true,\n            \n            orderType: 0,\n            orderAddr: null,\n            orderPic: 0,\n            orderComment: '',\n            orderPay: '',\n            \n            orderTimes: '1',\n            orderPredDay: '',\n            orderPredTime: '',\n            \n            orderSdacha: '',\n            orderPromo: '',\n            orderPromoText: '',\n            \n            newOrderData: null,\n\n            CheckDomTrue: false\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'cart' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json,\n                    st: json.st,\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\n        //return { hasError: true };\n        //this.setState({ hasError: true })\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: '',\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    componentDidCatch(error, info) {\n      \n    \n    \n        // Пример \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        //logComponentStackToMyService(info.componentStack);\n        \n        console.log( error )\n        console.log( info )\n        \n        //this.setState({ hasError: true })\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'save_log_err', \n                page: 'cart',\n                error: JSON.stringify(error),\n                info: JSON.stringify(info),\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n    }\n    \n    loadData(){\n        setTimeout( () => {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_by_mi_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken()\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    pic_point: json.get_addr_pic.points,\n                    my_addr: json.get_my_addr,\n                    all_addr: json.get_addr,\n                    date_pred: json.date_pred\n                })\n                \n                setTimeout(() => {\n                    let cartData = itemsStore.getCartData();\n        \n                    if( cartData.orderType || cartData.orderType == 0 ){\n                        \n                        this.setState({\n                            orderType: cartData.orderType,\n                            orderAddr: cartData.orderAddr && cartData.orderAddr.id == -1 ? null : cartData.orderAddr,\n                            orderPic: cartData.orderPic,\n                            orderComment: cartData.orderComment,\n                            \n                            orderTimes: cartData.orderTimes,\n                            orderPredDay: cartData.orderPredDay,\n                            orderPredTime: cartData.orderPredTime,                \n                            \n                            orderPay: cartData.orderPay,\n                            orderSdacha: cartData.orderSdacha\n                        })\n                        \n                        if( parseInt(cartData.orderTimes) == 2 && cartData.orderPredDay != '' && ((cartData.orderAddr && cartData.orderAddr.id !== -1) || parseInt( cartData.orderPic ) > 0) ){\n                            setTimeout(() => {\n                                this.loadTimePred();   \n                            }, 300)\n                        }else{\n                            /*let data = {\n                                orderType: cartData.orderType,\n                                orderAddr: '',\n                                orderPic: cartData.orderPic,\n                                orderComment: cartData.orderComment,\n                                \n                                orderTimes: cartData.orderTimes,\n                                orderPredDay: '',\n                                orderPredTime: '',\n                                \n                                orderPay: cartData.orderPay,\n                                orderSdacha: cartData.orderSdacha,\n                                \n                            };\n                            \n                            itemsStore.saveCartData(data);*/\n                        }\n                        \n                        setTimeout(() => {\n                            if( parseInt( cartData.orderType ) == 1 && parseInt( cartData.orderPic ) > 0 ){\n                                this.choosePic(cartData.orderPic);\n                            }\n                        }, 300)\n                        \n                        if( parseInt( cartData.orderType ) == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                            let allPrice = itemsStore.getAllPrice();\n                            \n                            if( parseInt(cartData.orderAddr.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                            }\n                        }else{\n                            itemsStore.setSumDiv(0);\n                        }\n                        \n                        setTimeout(()=>{\n                            let type = cartData.orderTimes,\n                                type_order = cartData.orderType;\n                            \n                            if( type_order == 0 ){\n                                //if( type == 1 ){\n                                    this.setState({\n                                        renderPay: this.state.pays.dev\n                                    })\n                                /*}else{\n                                    this.setState({\n                                        renderPay: this.state.pays.dev_mini,\n                                    })\n                                }*/\n                            }else{\n                                this.setState({\n                                    renderPay: this.state.pays.pic,\n                                })\n                            }\n                        }, 300)\n                    }else{\n                        if( this.state.pic_point.length == 1 ){\n                            this.choosePic(this.state.pic_point[0]['id']);\n                        }\n                        \n                        if( this.state.my_addr.length == 1 ){\n                            this.changeAddr({target: {value: this.state.my_addr[0]['id']}})\n                        }\n                    }\n                    \n                    if (typeof window !== 'undefined') {\n                        setTimeout(()=>{\n                            if( localStorage.getItem('promo_name') ){\n                                this.setState({\n                                    orderPromo: localStorage.getItem('promo_name')\n                                })\n                                \n                                setTimeout(()=>{\n                                    this.checkPromo();\n                                }, 300)\n                            }\n                        }, 1000)\n                    }\n                }, 300)\n            });\n        }, 300 )\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true; \n        \n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        this.firebaseAnalitic = getAnalytics(firebaseAPP);\n\n        try{\n\n            if( document.querySelector('.activeCat') ){\n                document.querySelector('.activeCat').classList.remove('activeCat');\n            }\n            window.scrollTo(0, 0);\n            itemsStore.setPage('cart');\n            \n            setTimeout( () => {\n                if( !itemsStore.getToken() ){\n                    if (typeof window !== 'undefined') {\n                        window.location.pathname = '/'+this.state.city_name;\n                    }\n                }\n            }, 300 )\n            \n            \n            this.loadData();\n            \n            Cart.fetchData('/'+this.state.city_name).then( data => {\n                this.setState( {\n                    title: data.page.title,\n                    description: data.page.description,\n                } );\n            } );\n            \n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let promoItems = itemsStore.getItemsPromo();\n            \n            let cartItems_new = [];\n            \n            if( cartItems.length > 0 && allItems.length > 0 ){\n                cartItems.map((item) => {\n                    let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                    \n                    if(thisitem){\n                        cartItems_new.push({\n                            id: item.item_id,\n                            cat_id: thisitem.cat_id,\n                            name: item.name,\n                            desc: thisitem.tmp_desc,\n                            count: item.count,\n                            allPrice: item.all_price,\n                            img: thisitem.img_new,\n                            imgUpdate: thisitem.img_new_update,\n                        })\n                    }\n                })\n                \n                let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                let need_dop = itemsStore.check_need_dops();\n                \n                this.setState({\n                    cartItems_main: main,\n                    cartItems_dop: dop,\n                    cartItems_need_dop: need_dop,\n                    \n                    sumDiv: itemsStore.getSumDiv(),\n                    allPrice: itemsStore.getAllPrice()\n                })\n            }\n            \n            autorun(() => {\n                if( this._isMounted === true ){\n                    \n                    /*setTimeout( () => {\n                        let cartData = itemsStore.getCartData();\n                        \n                        if( cartData.orderType || cartData.orderType == 0 ){\n                            let allPrice = itemsStore.getAllPrice();\n                              \n                            if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                                if( parseInt(allPrice) > 0 ){\n                                    itemsStore.setSumDiv(0);\n                                }else{\n                                    itemsStore.setSumDiv(1);\n                                }\n                            }else{\n                                itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                            }\n                        }\n                        \n                        if( parseInt(cartData.orderType) == 0 ){\n                            itemsStore.setSumDiv(0);\n                        }\n                    }, 500 )*/\n                    \n                    \n                    let cartItems = itemsStore.getItems();\n                    let allItems = itemsStore.getAllItems();\n                    let need_dop = itemsStore.check_need_dops();\n                    let promoItems = itemsStore.getItemsPromo();\n                    \n                    let cartItems_new = [];\n                    let cartPromoItems = [];\n                    \n                    cartItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartItems_new.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: item.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    \n                    \n                    let main = cartItems_new.filter( (item_) => parseInt(item_.cat_id) !== 7 );\n                    let dop = cartItems_new.filter( (item_) => parseInt(item_.cat_id) == 7 );\n                    \n                    let dop_new = [];\n                    \n                    need_dop.map((item) => {\n                        let cart_item = cartItems_new.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        let thisitem = allItems.find( (item_) => parseInt(item_.id) == parseInt(item.id) );\n                        \n                        if( !cart_item ){\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: 0,\n                                allPrice: 0,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }else{\n                            dop_new.push({\n                                id: item.id,\n                                cat_id: item.cat_id,\n                                name: item.name,\n                                desc: item.tmp_desc,\n                                count: cart_item.count,\n                                allPrice: cart_item.allPrice,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    promoItems.map((item) => {\n                        let thisitem = allItems.find( (item_) => item_.id == item.item_id );\n                        \n                        if(thisitem){\n                            cartPromoItems.push({\n                                id: item.item_id,\n                                cat_id: thisitem.cat_id,\n                                name: thisitem.name,\n                                desc: thisitem.tmp_desc,\n                                count: item.count,\n                                allPrice: item.all_price,\n                                img: thisitem.img_new,\n                                imgUpdate: thisitem.img_new_update,\n                            })\n                        }\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: []\n                    })\n                    \n                    this.setState({\n                        cartItems_dop: dop_new,\n                    })\n                    \n                    this.setState({\n                        cartItems_main: main,\n                        cartItems_need_dop: need_dop,\n                        cartItems_promo: cartPromoItems,\n                        \n                        sumDiv: itemsStore.getSumDiv(),\n                        allPrice: itemsStore.getAllPrice()\n                    })\n                }\n            })\n        \n        } catch (e) {\n            //document.write('Text error');\n            \n            console.log( e )\n            \n            this.setState({ hasError: true })\n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_log_err', \n                    page: 'cart',\n                    error: JSON.stringify(e),\n                    info: '',\n                })\n            }).then(res => res.json()).then(json => {\n                \n            });\n            \n            //console.log( info )\n        }\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    changeTab = (event, newValue) => {\n        this.setState({\n            orderType: newValue\n        })\n        \n        let thisitem = this.state.orderAddr;\n        \n        if( newValue == 0 ){\n            let allPrice = itemsStore.getAllPrice();\n        \n            if(thisitem){\n                if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                    if( parseInt(allPrice) > 0 ){\n                        itemsStore.setSumDiv(0);\n                    }else{\n                        itemsStore.setSumDiv(1);\n                    }\n                }else{\n                    itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n                }\n            }else{\n                itemsStore.setSumDiv(0);\n            }\n        }else{\n            itemsStore.setSumDiv(0);\n            \n            setTimeout(()=>{\n                if( this.state.pic_point.length > 0 ){\n                    this.choosePic(this.state.orderPic);\n                }\n            }, 300)\n        }\n        \n        let type = this.state.orderTimes,\n            type_order = newValue,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                })\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev_mini,\n                })\n                def_type = 'cash';\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            //orderPay: def_type,\n        })\n        \n        this.saveData();\n    }\n    \n    changeAddr = (event) => {\n        let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n        let allPrice = itemsStore.getAllPrice();\n        \n        //проверка домофона\n        if( parseInt(thisitem.check_dom_true) == 0 ){\n            this.setState({\n                CheckDomTrue: true\n            })\n        }\n\n        if( parseInt(thisitem.free_drive) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n                itemsStore.setSumDiv(1);\n            }\n        }else{\n            itemsStore.setSumDiv(parseInt(thisitem.sum_div));\n        }\n        \n        let type_order = this.state.orderType;\n        \n        if( type_order == 0 ){\n            this.setState({\n                renderPay: this.state.pays.dev,\n            })\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n        }\n        \n        this.setState({\n            orderAddr: thisitem,\n            chooseAddr: false,\n            \n            newAddrInfo: null,\n            newAddrPD: '',\n            newAddrET: '',\n            newAddrKV: '',\n        })\n        \n        this.saveData();\n    }\n    \n    choosePic(pointId){\n        itemsStore.setSumDiv(0);\n        \n        if( document.querySelector('.boxPic.active') ){\n            document.querySelector('.boxPic.active').classList.remove('active');\n        }\n        if( document.querySelector('#pic_'+pointId) ){\n            document.querySelector('#pic_'+pointId).classList.add('active');\n        }\n        \n        let picPointInfo = this.state.pic_point.find( (item) => item.id == pointId );\n        \n        this.setState({\n            orderPic: pointId,\n            picPointInfo: picPointInfo,\n            choosePicDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeComment = (event) => {\n        let text = event.target.value;\n        \n        if( text.length <= 50 ){\n            this.setState({\n                orderComment: event.target.value\n            })\n        }\n        \n        this.saveData();\n    }\n    \n    changePay = (event) => {\n        this.setState({\n            orderPay: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    changePayMobile(type){\n\n        this.setState({\n            orderPay: type,\n            choosePayDialog: false\n        })\n        \n        this.saveData();\n    }\n    \n    changeTimes = (event) => {\n        let type = event.target.value,\n            type_order = this.state.orderType,\n            def_type = 'cash';\n        \n        if( type_order == 0 ){\n            //if( type == 1 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            /*}else{\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n                def_type = this.state.orderPay == '' || this.state.orderPay == 'in' ? 'cash' : this.state.orderPay;\n            }*/\n        }else{\n            this.setState({\n                renderPay: this.state.pays.pic,\n            })\n            def_type = 'in';\n        }\n        \n        this.setState({\n            orderTimes: type,\n            //orderPay: def_type,\n        })\n        \n        this.loadTimePred();\n        \n        this.saveData();\n    }\n    \n    changeSdacha = (event) => {\n        this.setState({\n            orderSdacha: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    checkPromo(){\n        itemsStore.free_drive = 0;\n        \n        let promo_name = '';\n        \n        if( document.getElementById('PROMONAME') && document.getElementById('PROMONAME').value.length > 0 ){\n            promo_name = document.getElementById('PROMONAME').value;\n        }else{\n            if( document.getElementById('PromoMobile') && document.getElementById('PromoMobile').value.length > 0 ){\n                promo_name = document.getElementById('PromoMobile').value;\n            }else{\n                promo_name = this.state.orderPromo;\n            }\n        }\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: promo_name\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), promo_name );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( promo_name.length == 0 ){\n                this.setState({\n                    orderPromoText: ''\n                })\n            }else{\n                if( check_promo.st === false ){\n                    //localStorage.removeItem('promo_name')\n                }\n                \n                this.setState({\n                    orderPromoText: check_promo.text\n                })\n            }\n            \n            setTimeout( () => {\n                let cartData = itemsStore.getCartData();\n                \n                if( cartData.orderType || cartData.orderType == 0 ){\n                    let allPrice = itemsStore.getAllPrice();\n                      \n                    if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n                    }\n                }\n                \n                if( parseInt(cartData.orderType) == 1 ){\n                    itemsStore.setSumDiv(0);\n                }\n            }, 500 )\n        })\n    }\n    \n    saveData(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: this.state.orderAddr,\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n                \n            };\n            \n            itemsStore.saveCartData(data);\n            \n            setTimeout( () => {\n                this.checkPromo();\n            }, 300 )\n        }, 500)\n    }\n    \n    saveDataCustomAddr(){\n        setTimeout(()=>{\n            let data = {\n                orderType: this.state.orderType,\n                orderAddr: {\n                    id: -1,\n                    city_name: itemsStore.getCityRU(),\n                    street: this.state.newAddrInfo ? this.state.newAddrInfo.street : '',\n                    home: this.state.newAddrInfo ? this.state.newAddrInfo.home : '',\n                    kv: this.state.newAddrKV,\n                    pd: this.state.newAddrPD,\n                    et: this.state.newAddrET,\n                    dom_true: this.state.newAddrDom ? 1 : 0,\n                    free_drive: this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0,\n                    sum_div: this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0,\n                    point_id: this.state.newAddrInfo ? this.state.newAddrInfo.point_id : 0,\n                    xy: this.state.newAddrInfo ? this.state.newAddrInfo.xy : '',\n                    pay_active: this.state.newAddrInfo ? this.state.newAddrInfo.pay_active : 0,\n                },\n                orderPic: this.state.orderPic,\n                orderComment: this.state.orderComment,\n                \n                orderTimes: this.state.orderTimes,\n                orderPredDay: this.state.orderPredDay,\n                orderPredTime: this.state.orderPredTime,\n                \n                orderPay: this.state.orderPay,\n                orderSdacha: this.state.orderSdacha,\n            };\n            \n            if( data.orderAddr.street.length > 0 && data.orderAddr.home.length > 0 ){\n                this.setState({\n                    orderAddr: data.orderAddr\n                })\n            }\n            \n            itemsStore.saveCartData(data);\n            \n            //let thisitem = this.state.my_addr.find( (item) => item.id == event.target.value );\n            let allPrice = itemsStore.getAllPrice();\n            \n            if( parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n                if( parseInt(allPrice) > 0 ){\n                    itemsStore.setSumDiv(0);\n                }else{\n                    itemsStore.setSumDiv(1);\n                }\n            }else{\n                itemsStore.setSumDiv(parseInt(this.state.newAddrInfo ? this.state.newAddrInfo.sum_div : 0));\n            }\n            \n            let type = this.state.orderTimes,\n                type_order = this.state.orderType;\n            \n            if( type_order == 0 ){\n                //if( type == 1 ){\n                    this.setState({\n                        renderPay: this.state.pays.dev,\n                    })\n                /*}else{\n                    this.setState({\n                        renderPay: this.state.pays.dev_mini,\n                    })\n                }*/\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                })\n            }\n        }, 500)\n    }\n    \n    loadTimePred(){\n        let my_cart = [];\n        let cartItems = itemsStore.getItems();  \n        \n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n        \n        cartItems.forEach(el => {\n            my_cart.push({\n                item_id: el.item_id,\n                count: el.count,\n            });\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_times_pred_web',  \n                point_id: this.state.orderType+1 == 1 ? this.state.orderAddr.point_id ?? 0 : this.state.orderPic ?? 0,\n                type_order: this.state.orderType+1,\n                date: this.state.orderPredDay,\n                cart: JSON.stringify( my_cart ),\n            })\n        }).then(res => res.json()).then(json => {\n            if( !json.st ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: json.text\n                    },\n                    errorOpen: true\n                })\n            }else{\n                this.setState({\n                    timePred: json.data\n                })\n            }\n        });\n    }\n    \n    changePredDay = (event) => {\n        if( event.target.value !== 0 ){\n            this.setState({\n                orderPredDay: event.target.value,\n                orderTimes: '2'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                    //orderPay: 'cash'\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n            \n            setTimeout(() => {\n                this.loadTimePred();   \n            }, 300)\n        }else{\n            this.setState({\n                orderPredDay: 0,\n                orderTimes: '1'\n            })\n            \n            let type_order = this.state.orderType;                \n            \n            if( type_order == 0 ){\n                this.setState({\n                    renderPay: this.state.pays.dev,\n                });\n            }else{\n                this.setState({\n                    renderPay: this.state.pays.pic,\n                    //orderPay: 'in'\n                })\n            }\n        }\n        \n        this.saveData();\n    }\n    \n    changePredTime = (event) => {\n        this.setState({\n            orderPredTime: event.target.value\n        })\n        \n        this.saveData();\n    }\n    \n    startOrder(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n\n            if( !payFull ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Выберите способ оплаты: онлайн на сайте или наличными при получении.'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( parseInt( this.state.orderTimes ) == 2 && (this.state.orderPredDay == '' || this.state.orderPredTime == '') ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Дата или время предзаказа не указано'\n                    },\n                    errorOpen: true\n                })\n                \n                this.clickOrderStart = false;\n                return;\n            }\n\n            if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n                if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: 'Адрес доставки или точка самовывоза не выбрана'\n                        },\n                        errorOpen: true\n                    })\n                    \n                    this.clickOrderStart = false;\n                    return;\n                }\n            }\n\n            this.setState({\n                spiner: true\n            })\n            \n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            let allItems = itemsStore.getAllItems();\n            let cartItems_dop_tea = [];\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        item_id: item.item_id,\n                        cat_id: allItems.find( (item_) => item_.id == item.item_id )['cat_id']\n                    })\n                }\n            })\n            \n            let check_tea = allItems.filter( (item) => parseInt(item.id) == 231 || parseInt(item.id) == 232 );\n            \n            check_tea.map( (item, key) => {\n                cartItems_dop_tea.push({\n                    name: item.name,\n                    id: item.id,\n                    count: 0,\n                    one_price: 0,\n                    all_price: 0,\n                    img: item.img_new,\n                    imgUpdate: item.img_new_update,\n                    cat_id: item.cat_id\n                })\n            } )\n            \n            let check_need_dop = false;\n            let check_dop_17 = false;\n            let check_dop_19 = false;\n            \n            let check_dop_231 = false;\n            let check_dop_232 = false;\n            \n            new_cart.forEach( (item) => {\n                if( \n                    (parseInt(item.cat_id) == 3 \n                        || \n                    parseInt(item.cat_id) == 4 \n                        || \n                    parseInt(item.cat_id) == 9 \n                        ||\n                    parseInt(item.cat_id) == 10 \n                        ||\n                    parseInt(item.cat_id) == 12\n                        ||\n                    parseInt(item.cat_id) == 13)\n                        && \n                    parseInt(item.count) > 0\n                ){\n                    check_need_dop = true;\n                }\n                \n                if( (parseInt(item.item_id) == 17 && parseInt(item.count) > 0) || (parseInt(item.item_id) == 237 && parseInt(item.count) > 0) ){\n                    check_dop_17 = true;\n                }\n                \n                if( parseInt(item.item_id) == 19 && parseInt(item.count) > 0 ){\n                    check_dop_19 = true;\n                }\n                \n                \n                /*if( (parseInt(item.item_id) == 231 && parseInt(item.count) > 0) ){\n                    check_dop_231 = true;\n                }\n                \n                if( parseInt(item.item_id) == 232 && parseInt(item.count) > 0 ){\n                    check_dop_232 = true;\n                }*/\n                \n                \n            });\n              \n            if( (check_need_dop && check_dop_17 == false) || (check_need_dop && check_dop_19 == false) ){\n                \n                this.setState({\n                    orderCheckDop: true,\n                    spiner: false\n                })\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                return;\n            }else{\n                \n                //let check = false;\n                \n                /*if( parseInt(this.state.orderType)+1 == 2 ){\n                    if( parseInt(this.state.orderPic) == 3 || parseInt(this.state.orderPic) == 6 ){\n                        check = true;\n                    }\n                }else{\n                    if( parseInt(this.state.orderAddr.point_id) == 3 || parseInt(this.state.orderAddr.point_id) == 6 ){\n                        check = true;\n                    }\n                }*/\n                \n                /*if( cartItems_dop_tea.length > 0 && (check && (check_dop_231 == false || check_dop_232 == false)) ){\n                    this.setState({\n                        orderCheckDopTea: true,\n                        spiner: false,\n                        cartItems_dop_tea: cartItems_dop_tea\n                    })\n                    \n                    setTimeout(()=>{\n                        this.clickOrderStart = false;    \n                    }, 300)\n                }else{*/\n                    this.clickOrderStart = false;  \n                    this.startOrderNext(); \n                //}\n            }\n        }\n    }\n    \n    startOrderNext(){\n        if( this.clickOrderStart == false ){\n            this.clickOrderStart = true;\n            \n            clearTimeout(this.startOrderIntervalTimer);\n            \n            this.setState({ \n                orderCheckDop: false,\n                orderCheckDopTea: false,\n                spiner: true\n            })\n            \n            let payFull = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n            let new_cart = [];\n            let cartItems = itemsStore.getItems();\n            \n            cartItems.forEach( (item) => {\n                if( item.count > 0 ){\n                    new_cart.push({\n                        name: item.name,\n                        count: item.count,\n                        price: item.all_price,\n                        id: item.item_id,\n                    })\n                }\n            })\n            \n            if( parseInt(this.state.orderType) == 0 ){\n                let addr = this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '';\n                \n                if( !addr || addr == '' ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Нет адреса для доставки'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            if( parseInt(this.state.orderType) == 1 ){\n                let pic = this.state.orderPic;\n                \n                if( !pic || pic == 0 ){\n                    setTimeout(()=>{\n                        this.setState({\n                            spiner: false,\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Не выбрана точка для самовывоза'\n                            },\n                            errorOpen: true\n                        })\n                        \n                        this.clickOrderStart = false;\n                    }, 300)\n                    \n                    return;\n                }\n            }\n            \n            \n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'createOrder_web', \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                  \n                    timePred: JSON.stringify( { value: parseInt( this.state.orderTimes ) == 1 ? 0 : this.state.orderPredDay + ' ' + this.state.orderPredTime } ),//\n                    typeOrder: this.state.orderType,//\n                    addrPic: this.state.orderPic,//\n                    comment: this.state.orderComment,//\n                    addrDev: this.state.orderAddr ? JSON.stringify(this.state.orderAddr) : '', //\n                    pay: payFull.title, //\n                    sdacha: this.state.orderSdacha,\n                    payFull: JSON.stringify(payFull), //\n                    cart: JSON.stringify(new_cart),//\n                    promo_name: this.state.orderPromo//\n                })\n            }).then(res => res.json()).then(json => {\n                \n                setTimeout(()=>{\n                    this.clickOrderStart = false;    \n                }, 300)\n                \n                setTimeout(()=>{\n                    this.setState({\n                        spiner: false\n                    })\n                    \n                    if( json.st ){\n                        this.setState({\n                            orderCheck: true,\n                            newOrderData: json\n                        })\n                        \n                        this.startOrderIntervalTimer = setTimeout(()=>{\n                            this.setState({\n                                orderCheck: false,\n                                newOrderData: null\n                            })\n                        }, this.startOrderInterval * 1000)\n                    }else{\n                        \n                        if( json.type && json.type == 'new_pred' ){\n                            this.setState({\n                                timePred: json.times\n                            })\n                        }\n                        \n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: json.text_err\n                            },\n                            errorOpen: true\n                        })\n                    }\n                }, 1000)\n            })\n            .catch(err => { \n                setTimeout( () => {\n                    this.setState({\n                        spiner: false\n                    })\n                }, 300 )\n                console.log( err )\n            });\n        }\n    }\n    \n    checkNewAddr(){\n        let street = document.querySelector('#newAddrStreet').value;\n        \n        if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'save_new_addr_web_new',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    street: street,\n                    home: this.state.newAddrHome\n                })\n            }).then(res => res.json()).then(json => {\n                if( !json.st ){\n                    this.setState({\n                        error: {\n                            title: 'Предупреждение', \n                            text: json.text\n                        },\n                        errorOpen: true\n                    })\n                }else{\n                    if( json.data.home == '' ){\n                        this.setState({\n                            error: {\n                                title: 'Предупреждение', \n                                text: 'Номер дома не указан или указан не верно'\n                            },\n                            errorOpen: true\n                        })\n                    }else{\n                        this.setState({\n                            newAddrInfo: json.data\n                        })\n                        this.saveDataCustomAddr()\n                    }\n                }\n            });\n        }\n    }\n    \n    trueOrder(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'trueOrder_web', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                order_id: this.state.newOrderData.order_id,\n                point_id: this.state.newOrderData.point_id,\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] == false ){\n                this.setState({\n                    error: {\n                        title: 'При подтверждении оплаты произошла ошибка', \n                        text: json.text_err\n                    },\n                    errorOpen: true\n                })\n            }else{\n                itemsStore.setItems([]);\n                \n                let data = {\n                    orderType: 0,\n                    orderAddr: '',\n                    orderPic: 0,\n                    orderComment: '',\n                    \n                    orderTimes: '1',\n                    orderPredDay: '',\n                    orderPredTime: '',\n                    \n                    orderPay: '',\n                    orderSdacha: '',\n                };\n                \n                itemsStore.saveCartData(data);\n                \n                setTimeout(()=>{\n                    \n                    let city = get_city( window.location.pathname )\n                    \n                    window.location.href = window.location.origin + '/'+city+'/profile?trueOrder';\n                    \n                    /*if( this.state.city_name.length > 0 ){\n                        window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    }else{\n                        if( this.props.city.length > 0 ){\n                            window.location.pathname = '/'+this.props.city+'/profile?trueOrder';\n                        }\n                    }*/\n                    \n                    //window.location.pathname = '/'+this.state.city_name+'/profile?trueOrder';\n                    //this.props.history.push('/'+this.state.city_name+'/profile');\n                }, 300)\n            }\n        });\n    }\n    \n    delAddr(id){\n        if (confirm(\"Удалить сохраненный адрес ?\")) {\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'del_addr_web',  \n                    city_id: this.state.city_name,\n                    user_id: itemsStore.getToken(),\n                    id_addr: id\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    my_addr: json\n                })\n            });\n        }\n    }\n    \n    changeDomTrue(type){\n        this.setState({\n            newAddrDom: type\n        })\n    }\n    \n    closeTimeDialog(){\n        if( this.state.orderPredTime == '' ){\n            this.changePredDay({target: {value: 0}});\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }else{\n            this.setState({ \n                chooseTimeDialog: false \n            })\n        }\n    }\n    \n    enterPromoMobile = (event) => {\n        if(event.key === 'Enter'){\n            //NextPromo\n            if( document.querySelector('#PromoMobile') ){\n                document.querySelector('#PromoMobile').blur()\n            }\n        }\n    }\n    \n    changePayMobile_new(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ choosePayDialog: true })\n    }\n\n    changeTimeMobile(){\n        if( this.state.orderType+1 == 1 && parseInt(this.state.orderTimes) == 1 ){\n            if( !this.state.orderAddr || !this.state.orderAddr.point_id ){\n                this.setState({\n                    error: {\n                        title: 'Предупреждение', \n                        text: 'Адрес доставки или точка самовывоза не выбрана'\n                    },\n                    errorOpen: true,\n                    orderTimes: '1'\n                })\n                \n                return;\n            }\n        }\n\n        this.setState({ chooseTimeDialog: true })\n    }\n\n    checkSaveData(event, type){\n        let value = event.target.value;\n\n        if( isNaN(value) ){\n            return ;\n        }\n\n        this.setState({\n            [type]: value\n        })\n    }\n\n    checkDomTrue(type, event){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkDomTrue', \n                city_id: this.state.city_name,\n                user_id: itemsStore.getToken(),\n                \n                addr_id: this.state.orderAddr.id,\n                dom_true: type === true ? 1 : 0\n            })\n        }).then(res => res.json()).then(json => {\n            \n        });\n\n        let orderAddr = this.state.orderAddr;\n\n        orderAddr.dom_true = type === true ? 1 : 0;\n        orderAddr.check_dom_true = 1;\n\n        this.setState({\n            newAddrDom: type === true ? 1 : 0,\n            orderAddr: orderAddr,\n            CheckDomTrue: false\n        })\n\n        setTimeout( () => {\n            this.saveData();\n        }, 300 )\n    }\n\n    render() {\n        \n        if(this.state.hasError){\n            return (\n                <>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                    <a href={'https://jacofood.ru/'+this.state.city_name}>На главную</a>\n                </>\n            );\n        }\n        \n        let this_pay = this.state.renderPay.find( (item) => item.type == this.state.orderPay );\n        \n        let this_pic_point = this.state.pic_point.find( (item) => item.id == this.state.orderPic );\n        \n        if( this_pic_point ){\n            this_pic_point = this_pic_point['addr'];\n        }else{\n            this_pic_point = '';\n        }\n        \n        return (\n            <Grid container className=\"Cart mainContainer MuiGrid-spacing-xs-3\">\n                \n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                \n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" component=\"h1\">Корзина</Typography>\n                </Grid>\n                \n                \n                \n                <Grid item container sx={{ display: { xs: 'none', sm: 'flex' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" style={{ paddingTop: 0 }}>\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <FormControl component=\"fieldset\" style={{ width: '100%' }}>\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={ \n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Accordion>\n                            <AccordionSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className=\"newAddr\">Новый адрес</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className=\"newAddr\">\n                                <div>\n                                    <Autocomplete\n                                        freeSolo\n                                        id=\"newAddrStreet\"\n                                        size=\"small\"\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                        options={this.state.all_addr.map((option) => option.value)}\n                                        renderInput={(params) => (\n                                            <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                                        )}\n                                    />\n                                    <TextField \n                                        label=\"Дом\" \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        value={this.state.newAddrHome} \n                                        onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                        onBlur={this.checkNewAddr.bind(this)}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField \n                                        label=\"Подъезд\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrPD} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Этаж\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrET} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />\n                                    <TextField \n                                        label=\"Квартира\" \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        style={{ width: '100%' }}\n                                        value={this.state.newAddrKV} \n                                        onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                        onBlur={this.saveDataCustomAddr.bind(this)}\n                                    />  \n                                </div>\n                                <div>\n                                    <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                        <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                        <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                                    </ButtonGroup>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1}>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className=\"boxPic\" id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </TabPanel>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className='_comment_'>\n                            <TextField\n                                id=\"outlined-multiline-flexible\"\n                                label=\"Комментарий курьеру\"\n                                multiline\n                                rowsMax={2}\n                                value={this.state.orderComment}\n                                onChange={this.changeComment}\n                                variant=\"outlined\" \n                                size={'small'} \n                                type={ 'text' }\n                            />\n\n                        </div>\n                            :\n                        null\n                    }\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Оплата</FormLabel>\n                            <RadioGroup aria-label=\"pays\" name=\"pays\" value={this.state.orderPay} onChange={this.changePay}>\n                                {this.state.renderPay.map((item, key) => \n                                    <FormControlLabel key={key} value={item.type} control={ <Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} /> } label={item.title} />\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Когда приготовить?</FormLabel>\n                            <RadioGroup aria-label=\"times\" name=\"times\" value={this.state.orderTimes} onChange={this.changeTimes}>\n                                <FormControlLabel value='1' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Как можно быстрее\" />\n                                <FormControlLabel value='2' control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label=\"Предзаказ\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                    {this.state.orderTimes == 2 ?\n                        <div>\n                            <FormControl style={{ width: '30%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                    displayEmpty\n                                    value={this.state.orderPredDay}\n                                    onChange={this.changePredDay}\n                                    inputProps={{\n                                    id: 'age-native-simple',\n                                    }}\n                                >\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '20%' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    displayEmpty\n                                    size='small'\n                                    value={this.state.orderPredTime}\n                                    onChange={this.changePredTime}\n                                    inputProps={{\n                                    id: 'age-native-simple1',\n                                    }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                            :\n                        null\n                    }\n                    \n                    <div>\n                        <Typography variant=\"h5\" component=\"h2\">Моя корзина</Typography>\n                    </div>\n                    <div>\n                        <table className=\"tableCart\">\n                            <tbody>\n                                {this.state.cartItems_main.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                {this.state.cartItems_promo.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                                \n                                <tr className=\"rowAboutDop\">\n                                    <td colSpan='3'>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                        <br />\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                                    </td>\n                                </tr>\n                                {this.state.cartItems_dop.map((item, key) =>\n                                    <CartItem key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Доставка:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{this.state.sumDiv} <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan='2'>\n                                        <Typography component=\"span\">Итого:</Typography>\n                                    </td>\n                                    <td>\n                                        <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 20 500 200\"  /></Typography>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"orderSdacha\">\n                            <div>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-weight\">Подготовить сдачу с</InputLabel>\n                                    <Input\n                                        type=\"number\"\n                                        id=\"standard-adornment-weight\"\n                                        value={this.state.orderSdacha}\n                                        onChange={this.changeSdacha}\n                                        endAdornment={<Ruble viewBox=\"-400 0 1200 300\" />}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>    \n                            :\n                        null\n                    }\n                    <div className=\"promoOrder\">\n                        <div>\n                            <Paper component=\"div\" className=\"SpacePromo\">\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.orderPromo}\n                                    onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                    placeholder=\"Промокод\"\n                                    id=\"PROMONAME\"\n                                />\n                                <Divider orientation=\"vertical\" />\n                                <IconButton color=\"primary\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                    <CheckOutlinedIcon />\n                                </IconButton>\n                            </Paper>\n                            {this.state.orderPromoText.length > 0 ?\n                                <div className=\"DescPromo\">\n                                    <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    \n                </Grid>\n            \n            \n                <Grid item container sx={{ display: { xs: 'flex', sm: 'none' } }} spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer mobile\">\n                    <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000', zIndex: 0 }} elevation={0}>\n                        <Tabs value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} onChange={this.changeTab.bind(this)} aria-label=\"simple tabs example\"  style={{ justifyContent: 'center' }}>\n                            <Tab label=\"Доставка\" {...a11yProps(0)} style={{ width: '50%' }} disableRipple={true} />\n                            <Tab label=\"Самовывоз\" {...a11yProps(1)} style={{ width: '50%' }} disableRipple={true} />\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={this.state.orderType || this.state.orderType == 0 ? this.state.orderType : 0} index={0} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ chooseAddr: true })}>\n                            <Typography variant=\"h5\" component=\"span\">Адрес: {this.state.orderAddr ? \n                                this.state.orderAddr.city_name+', '+\n                                this.state.orderAddr.street+' '+\n                                this.state.orderAddr.home+\n                                \n                                ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                    : ''}</Typography>\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={this.state.orderType} index={1} style={{ width: '100%' }}>\n                        <div className=\"boxMobile\" onClick={() => this.setState({ choosePicDialog: true })}>\n                        <Typography variant=\"h5\" component=\"span\">Адрес: { this.state.orderPic > 0 && this.state.pic_point.length > 0 ? this_pic_point : '' }</Typography>\n                        </div>\n                    </TabPanel>\n                    \n                    <div className=\"boxMobile\" onClick={ this.changeTimeMobile.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Приготовим: {this.state.orderTimes == 1 ? 'как можно быстрее' : this.state.orderPredDay+' '+this.state.orderPredTime}</Typography>\n                    </div>\n                    <div className=\"boxMobile\" onClick={ this.changePayMobile_new.bind(this) }>\n                        <Typography variant=\"h5\" component=\"span\">Оплачу: { this_pay ? this_pay['title'] : '' }</Typography>\n                    </div>\n                    <div style={{ marginTop: 15 }}>\n                        <Paper component=\"div\" className=\"SpacePromo\">\n                            <InputBase\n                                onBlur={this.checkPromo.bind(this)}\n                                value={this.state.orderPromo}\n                                onChange={ event => this.setState({ orderPromo: event.target.value }) }\n                                onKeyPress={this.enterPromoMobile}\n                                id=\"PromoMobile\"\n                                placeholder=\"Промокод\"\n                            />\n                            <Divider orientation=\"vertical\" />\n                            <IconButton color=\"primary\" id=\"NextPromo\" aria-label=\"directions\" onClick={this.checkPromo.bind(this)}>\n                                <CheckOutlinedIcon />\n                            </IconButton>\n                        </Paper>\n                        {this.state.orderPromoText.length > 0 ?\n                            <div className=\"DescPromo\">\n                                <Typography variant=\"h5\" component=\"span\">Промокод дает: {this.state.orderPromoText}</Typography>\n                            </div>\n                                :\n                            null\n                        }\n                    </div>\n                    \n                    {this.state.orderType == 0 ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <form noValidate autoComplete=\"off\">\n                                <TextField\n                                    style={{ width: '100%' }}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Комментарий курьеру\"\n                                    multiline\n                                    rowsMax={2}\n                                    value={this.state.orderComment}\n                                    onChange={this.changeComment}\n                                    variant=\"outlined\" \n                                    size={'small'} \n                                    type={ 'text' }\n                                />\n                            </form>\n                        </div>\n                            :\n                        null\n                    }\n                                            \n                    {this.state.orderType == 0 && this.state.orderPay == 'cash' ?\n                        <div className=\"boxMobile_ area\" style={{ paddingTop: 20 }}>\n                            <FormControl  variant=\"outlined\" style={{ width: '100%' }}>\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Подготовить сдачу с</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-password\"\n                                    type=\"number\"\n                                    style={{ width: '100%' }}\n                                    value={this.state.orderSdacha}\n                                    onChange={this.changeSdacha}\n                                    endAdornment={<Ruble viewBox=\"-600 80 1000 300\" />}\n                                    label=\"Подготовить сдачу с\"\n                                />\n                            </FormControl>\n                        </div>\n                        :\n                        null\n                    }\n                    \n                    <div>\n                        <div className=\"tableMobile\">\n                            {this.state.cartItems_main.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"item\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            {this.state.cartItems_promo.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"promo\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            <div className=\"boxItem rowAboutDop\">\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Соевый соус, имбирь и васаби приобретаются отдельно!</Typography>\n                                <br />\n                                <Typography gutterBottom variant=\"h5\" component=\"span\" className=\"\">Не забудьте добавить нужные позиции в корзину.</Typography>\n                            </div>\n                            \n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                            \n                            \n                        </div>\n                        \n                        \n                    </div>\n                \n                    <div className=\"bottomOrder\" style={{ paddingTop: 0 }}>\n                        <div style={{ padding: '5px 0px' }}>\n                            <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div style={{ paddingBottom: 5 }}>\n                            <Typography variant=\"h5\" component=\"span\">К оплате</Typography>\n                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice\">{ this.state.sumDiv + this.state.allPrice } <Ruble width=\"20\" viewBox=\"0 0 600 200\" /></Typography>\n                        </div>\n                        <div>\n                            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={this.startOrder.bind(this)}>\n                                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Оформить заказ</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </Grid>\n                \n                \n                <Dialog\n                    open={this.state.CheckDomTrue}\n                    onClose={() => this.setState({ CheckDomTrue: false })}\n                    className=\"CheckDomTrue\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтвердите работоспособность домофона</Typography>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                :\n                                    ''\n                                }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\" style={{ width: '100%' }}>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, true) }>Домофон работает</Button>\n                            <Button style={{ width: '50%' }} onClick={ this.checkDomTrue.bind(this, false) }>Домофон не работает</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorOpen}\n                    onClose={() => this.setState({ errorOpen: false })}\n                    className=\"DialogErr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ errorOpen: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseAddr: false })}\n                    className=\"DialogChooseAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес доставки</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseAddr: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <FormControl component=\"fieldset\">\n                            <RadioGroup name=\"addrs\" value={ this.state.orderAddr ? this.state.orderAddr.id : 0 } onChange={this.changeAddr}>\n                                {this.state.my_addr.map((item, key) => \n                                    <div key={key} className=\"boxAddr\">\n                                        <FormControlLabel value={item.id} control={<Radio sx={{ '&.Mui-checked': { color: '#c03', }, }} />} label={\n                                            item.city_name+', '+\n                                            item.street+' '+\n                                            item.home+\n                                            ( parseInt(item.pd) == 0 || item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                                            ( parseInt(item.et) == 0 || item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                                            ( parseInt(item.kv) == 0 || item.kv.length == 0 ? '' : ', Кв. '+item.kv )+\n                                            ( parseInt(item.dom_true) == 0 ? ' Домофон не работает' : '' )\n                                        } />\n                                        <FontAwesomeIcon onClick={this.delAddr.bind(this, item.id)} icon={faTimes}/>\n                                    </div>\n                                )}\n                            </RadioGroup>\n                        </FormControl>\n                        <Typography variant=\"h5\" component=\"span\" className=\"newAddrMobile\" onClick={ () => { this.setState({ chooseAddr: false, chooseNewAddr: true }) } } >Новый адрес</Typography>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseNewAddr}\n                    fullWidth={true}\n                    onClose={() => this.setState({ chooseNewAddr: false })}\n                    className=\"DialogChooseNewAddr\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Новый адрес</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ chooseNewAddr: false })} icon={faTimes}/>\n                    <DialogContent style={{ paddingTop: 0 }}>\n                        <div className=\"newAddrMobile\" style={{ paddingTop: 0 }}>\n                            <Autocomplete\n                                freeSolo\n                                id=\"newAddrStreet\"\n                                size=\"small\"\n                                style={{ width: '100%' }}\n                                onBlur={this.checkNewAddr.bind(this)}\n                                options={this.state.all_addr.map((option) => option.value)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Улица\" margin=\"normal\"  />\n                                )}\n                            />\n                            <TextField \n                                label=\"Дом\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrHome} \n                                onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                                onBlur={this.checkNewAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Подъезд\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrPD} \n                                onChange={ event => this.checkSaveData(event, 'newAddrPD') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Этаж\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrET} \n                                onChange={ event => this.checkSaveData(event, 'newAddrET') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />\n                            <TextField \n                                label=\"Квартира\" \n                                size=\"small\"\n                                //variant=\"outlined\" \n                                style={{ width: '100%' }}\n                                value={this.state.newAddrKV} \n                                onChange={ event => this.checkSaveData(event, 'newAddrKV') }\n                                onBlur={this.saveDataCustomAddr.bind(this)}\n                            />  \n                            <ButtonGroup disableElevation variant=\"contained\" className=\"chooseDomTrue\">\n                                <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                                <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                            </ButtonGroup>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseNewAddr: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.choosePicDialog}\n                    fullWidth={true}\n                    onClose={() => this.setState({ choosePicDialog: false })}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Адрес кафе</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePicDialog: false })} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                            {this.state.pic_point.map((item, key) => \n                                <div className={\"boxPic \"+( this.state.orderPic == item.id ? 'active' : '' )} id={'pic_'+item.id} key={key} onClick={this.choosePic.bind(this, item.id)}>\n                                    <Typography variant=\"h5\" component=\"span\">{item.raion}</Typography>\n                                    <Typography variant=\"h5\" component=\"span\">{item.addr}, c 10:00 до 21:30</Typography>\n                                </div>\n                            )}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.chooseTimeDialog}\n                    fullWidth={true}\n                    onClose={this.closeTimeDialog.bind(this)}\n                    className=\"DialogChoosePicDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Время заказа</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.closeTimeDialog.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <FormControl style={{ width: '100%', paddingBottom: 20 }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple\">День</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredDay}\n                                  onChange={this.changePredDay}\n                                  inputProps={{\n                                    id: 'age-native-simple',\n                                  }}\n                                >\n                                    <MenuItem value={0}>Как можно быстрее</MenuItem>\n                                    {this.state.date_pred.map((item, key) => \n                                        <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{ width: '100%', paddingBottom: 20, display: this.state.orderPredDay == 0 ? 'none' : 'inline-flex' }} variant=\"standard\">\n                                <InputLabel htmlFor=\"age-native-simple1\">Время</InputLabel>\n                                <Select\n                                    size='small'\n                                  displayEmpty\n                                  value={this.state.orderPredTime}\n                                  onChange={this.changePredTime}\n                                  inputProps={{\n                                    id: 'age-native-simple1',\n                                  }}\n                                >\n                                    {this.state.timePred.map((item, key) => \n                                        <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ chooseTimeDialog: false })}>\n                            <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Использовать</Button>\n                        </ButtonGroup>\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog \n                    onClose={() => this.setState({ choosePayDialog: false })}\n                    aria-labelledby=\"simple-dialog-title\" \n                    open={this.state.choosePayDialog}\n                    fullWidth={true}\n                    className=\"DialogChoosePayDialog\"\n                >\n                    <DialogTitle id=\"simple-dialog-title\" style={{ paddingBottom: 0 }}>Оплата</DialogTitle>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ choosePayDialog: false })} icon={faTimes}/>\n                    <List>\n                        {this.state.renderPay.map((item, key) => \n                            <ListItem button onClick={this.changePayMobile.bind(this, item.type)} key={key}>\n                                <ListItemAvatar>\n                                    <Avatar style={{ color: '#fff', backgroundColor: '#000' }}>\n                                        { item.type == 'cash' ?\n                                            <FontAwesomeIcon icon={ faMoneyBill } />\n                                                :\n                                            item.type == 'in' ?\n                                                <FontAwesomeIcon icon={ faCashRegister } />\n                                                    :\n                                                <FontAwesomeIcon icon={ faCreditCard } />\n                                        }\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        )}\n                    </List>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDop}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">А как же палочки и соевый соус ?</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.orderCheckDopTea}\n                    fullWidth={true}\n                    onClose={this.startOrderNext.bind(this)}\n                    className=\"DialogOrderCheckDopDialog\"\n                >\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Согреваем, чаем угощаем!</Typography>\n                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Две индивидуальные упаковки ягодно-фруктового чая вам в подарок</Typography>\n                    <FontAwesomeIcon className=\"closeDialog\" onClick={this.startOrderNext.bind(this)} icon={faTimes}/>\n                    <DialogContent>\n                        <div className=\"tableMobile OrderCheckDopDialog\">\n                            {this.state.cartItems_dop_tea.map((item, key) =>\n                                <CartItemMobile key={key} item={item} type=\"dop\" firebaseAnalitic={this.firebaseAnalitic} />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                        <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={this.startOrderNext.bind(this)}>\n                            <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Продолжить</Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n                \n                { this.state.orderCheck === true ?\n                    <Dialog\n                        open={this.state.orderCheck}\n                        fullWidth={true}\n                        onClose={() => this.setState({ orderCheck: false })}\n                        className=\"DialogOrderCheckDialog\"\n                    >\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">Подтверждение заказа</Typography>\n                        <FontAwesomeIcon className=\"closeDialog\" onClick={() => this.setState({ orderCheck: false })} icon={faTimes}/>\n                        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n                            { parseInt( this.state.orderTimes ) == 1 ?\n                                null\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.orderPredDay + ' ' + this.state.orderPredTime}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставим: { this.state.orderAddr ?\n                                    this.state.orderAddr.city_name+', '+\n                                    this.state.orderAddr.street+' '+\n                                    this.state.orderAddr.home+\n                                    ( parseInt(this.state.orderAddr.pd) == 0 || this.state.orderAddr.pd.length == 0 ? '' : ', Пд. '+this.state.orderAddr.pd )+\n                                    ( parseInt(this.state.orderAddr.et) == 0 || this.state.orderAddr.et.length == 0 ? '' : ', Эт. '+this.state.orderAddr.et )+\n                                    ( parseInt(this.state.orderAddr.kv) == 0 || this.state.orderAddr.kv.length == 0 ? '' : ', Кв. '+this.state.orderAddr.kv )\n                                        :\n                                    null\n                                }</Typography>\n                                    :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Заберу: {this.state.picPointInfo ? this.state.picPointInfo.addr : ''}</Typography>\n                            }\n                            { parseInt( this.state.orderType ) == 0 ?\n                                this.state.orderAddr && parseInt(this.state.orderAddr.dom_true) == 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                                        :\n                                    null\n                                    :\n                                null\n                            }\n                            { this.state.orderPromo.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.orderPromo}</Typography>\n                                    :\n                                null\n                            }\n                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Оплачу: {this.state.renderPay.find( (item) => item.type == this.state.orderPay )['title']}</Typography>\n                            \n                            { parseInt( this.state.orderType ) == 0 && this.state.orderPay == 'cash' ?\n                                this.state.orderSdacha.length > 0 ?\n                                    <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.orderSdacha} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        :\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Без сдачи</Typography>\n                                    :\n                                null\n                            }\n                            \n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ color: '#c03' }}>Забрать заказ можно только в маске</Typography>\n                            }\n\n                            { parseInt( this.state.orderType ) != -1 ? null :\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\"><FontAwesomeIcon icon={ faQrcode } /> Уважаемые посетители кафе \"Жако\", посадка в зал осуществляется только при наличии qr - кода и документа, удостоверяющего личность. </Typography>\n                                    <Link\n                                        to={{ pathname: \"https://pravo.samregion.ru/wp-content/uploads/sites/2/2021/11/pgso291.pdf\" }}\n                                        target=\"_blank\"\n                                        style={{ textDecoration: 'none', color: 'inherit', paddingBottom: 10, marginTop: -10 }}\n                                    >\n                                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Постановление губернатора Самарской области от 6.11.2021 г.</Typography>\n                                    </Link>\n                                </>\n                            }\n                            \n                            { parseInt( this.state.orderType ) == 0 && parseInt(this.state.orderAddr.point_id) == 3 && false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Дорогие жители шлюзового района! В связи с ремонтом моста и затруднённой ситуацией на дорогах, доставка займёт больше времени, чем обычно.</Typography>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Благодарим за понимание!</Typography>\n                                </>\n                                    :\n                                null\n                            }\n                            \n                            { this.state.newOrderData && this.state.newOrderData.dop_text && this.state.newOrderData.dop_text.length > 0 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\" style={{ fontWeight: 'bold' }}>{this.state.newOrderData.dop_text}</Typography>\n                                    :\n                                null\n                            }\n                            \n                            \n                            <table className=\"tableOrderCheck\">\n                                <tbody>\n                                    {itemsStore.getItems().map((item, key) => \n                                        parseInt(item.count) > 0 ?\n                                            <tr key={key}>\n                                                <td style={{ width: '60%' }}>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                                </td>\n                                                <td>\n                                                    <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.all_price} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                                </td>\n                                            </tr>\n                                                :\n                                            null\n                                    )}\n                                    {this.state.cartItems_promo.map((item, key) =>\n                                        <tr key={key}>\n                                            <td style={{ width: '60%' }}>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{item.allPrice} <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                    )}\n                                    { parseInt( this.state.orderType ) == 0 ?\n                                        <tr>\n                                            <td colSpan=\"2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                                            </td>\n                                            <td>\n                                                <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ itemsStore.getSumDiv() } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                            </td>\n                                        </tr>\n                                            :\n                                        null\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                                        </td>\n                                        <td>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } <Ruble width=\"20\" viewBox=\"0 0 700 300\" /></Typography>\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </DialogContent>\n                        <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                            { this.state.orderPay == 'card' ? \n                                <a\n                                    href={ this.state.newOrderData.pay.formUrl }\n                                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }}>\n                                        <Button variant=\"contained\" style={{ width: '100%', margin: '0px 10px' }} className=\"BtnCardMain CardInCardItem\">Оплатить заказ</Button>\n                                    </ButtonGroup>\n                                </a>\n                                \n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                                    <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </DialogActions>\n                    </Dialog>\n                        :\n                    null\n                }\n                \n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageAbout extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n            \n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'about' \n        };\n        \n        return axios({\n            method: 'POST',\n            url:config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageAbout');\n        \n        PageAbout.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEabout mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageJob extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'jobs' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageJob');\n        \n        PageJob.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEjob mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageInstPay extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'instpayorders' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageInstPay');\n        \n        PageInstPay.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEinstpay mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PageOferta extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: '',\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'publichnaya-oferta' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PageOferta');\n        \n        PageOferta.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEoferta mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport {Helmet} from \"react-helmet\";\nconst queryString = require('query-string');\nimport axios from 'axios';\n\nfunction get_city(path){\n    \n    path = path.split('/');\n    path = path.filter( (item) => item != '' );\n    \n    return path[ 0 ];\n}\n\nexport class PagePolitika extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            is_load: false,\n            city_name: this.props.city,\n            page: this.props.data ? this.props.data.page : null,\n            title: '',\n            description: ''\n        };\n        \n        itemsStore.setCity(this.props.city);\n    }\n    \n    static fetchData(propsData) {\n        let data = {\n            type: 'get_page_info', \n            city_id: get_city(propsData),\n            page: 'politika-konfidencialnosti' \n        };\n        \n        return axios({\n            method: 'POST',\n            url: config.urlApi,\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: queryString.stringify(data)\n        }).then(response => {\n            if(response['status'] === 200){\n                var json = response['data'];\n                \n                return {\n                    title: json.page.title,\n                    description: json.page.description,\n                    page: json.page,\n                    cats: json.cats,\n                    allItems: json.allItems,\n                    all: json\n                }\n            } \n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false; \n    }\n    \n    componentDidMount(){\n        this._isMounted = true; \n        \n        if( document.querySelector('.activeCat') ){\n            document.querySelector('.activeCat').classList.remove('activeCat');\n        }\n        window.scrollTo(0, 0);\n        itemsStore.setPage('PagePolitika');\n        \n        PagePolitika.fetchData('/'+this.state.city_name).then( data => {\n            data.page.content = data.page.content.replace(\n                /<a href=\\\"\\//g,\n                '<a href=\"/'+this.state.city_name+'/'\n            );\n            \n            this.setState( {\n                title: data.page.title,\n                description: data.page.description,\n                page: data.page\n            } );\n        } );\n    }\n    \n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name=\"description\" content={this.state.description} />\n                </Helmet>\n                \n                <Grid container className=\"PAGEpolitika mainContainer\">\n                    <Grid item xs={12} style={{ paddingBottom: 15 }}>\n                        <Typography variant=\"h5\" component=\"h1\">{ this.state.page ? this.state.page.page_h : '' }</Typography>\n                    </Grid>\n                    \n                    { this.state.page && this.state.page.content ?\n                        <Grid item container spacing={3} md={10} sm={12} xs={12} xl={10} className=\"mainContainer\" dangerouslySetInnerHTML={{__html: this.state.page.content}} />\n                            :\n                        null\n                    }\n                </Grid>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport IconButton from '@mui/material/IconButton';\n\nimport Typography from '@mui/material/Typography';\n\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nimport Popover from '@mui/material/Popover';\nimport { Link as ScrollLink } from \"react-scroll\";\n\nconst queryString = require('query-string');\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputMask from \"react-input-mask\";\nimport Badge from '@mui/material/Badge';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MiniActionsCartButton, IconRuble } from '../../stores/elements';\n\nimport { autorun } from \"mobx\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUtensils, faUser, faGift } from '@fortawesome/free-solid-svg-icons'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nclass CustomBottomNavigation extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            allPrice: 0,\n            thisPage: '',\n            auth: false\n        };\n    }\n    \n    componentDidMount = () => {\n        autorun(() => {\n            this.setState({\n                allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice(),\n                thisPage: itemsStore.getPage(),\n                auth: itemsStore.getToken() ? true : false\n            })\n        })\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.allPrice !== nextState.allPrice ||\n            this.state.thisPage !== nextState.thisPage ||\n            this.state.auth !== nextState.auth\n        );\n    }\n    \n    render(){\n        let this_city = itemsStore.getCity();\n        \n        return(\n            <div className=\"bottomNavigate\">\n                <Link\n                    to={'/'+this_city+'/'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faUtensils } style={{ color: this.state.thisPage == 'home' ? 'black' : 'gray' }} />\n                </Link>\n                <Link\n                    to={'/'+this_city+'/akcii'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faGift } style={{ color: this.state.thisPage == 'actii' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/cart'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                        <Badge badgeContent={ this.state.allPrice } max={500000} color=\"primary\">\n                            <ShoppingCartOutlinedIcon style={{ fill: this.state.thisPage == 'cart' ? '#CC0033' : '#CC0033' }} />\n                        </Badge>\n                    </Typography>\n                }\n                <Link\n                    to={'/'+this_city+'/contacts'}\n                    exact={ true }\n                    className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                >\n                    <FontAwesomeIcon icon={ faMapMarkerAlt } style={{ color: this.state.thisPage == 'contact' ? 'black' : 'gray' }} />\n                </Link>\n                {this.state.auth === true ?\n                    <Link\n                        to={'/'+this_city+'/profile'}\n                        exact={ true }\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\"\n                    >\n                        <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Link>\n                        :\n                    <Typography \n                        component=\"span\"\n                        className=\"MuiButtonBase-root MuiBottomNavigationAction-root\" \n                        onClick={this.props.login}>\n                            <FontAwesomeIcon icon={ faUser } style={{ color: this.state.thisPage == 'profile' ? 'black' : 'gray' }} />\n                    </Typography>\n                }\n            </div>\n        )\n    }\n}\n\nclass SimplePopover extends React.Component{\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            anchorEl: null,\n            cartItems: [],\n            allPrice: 0,\n            sumDiv: 0,\n            promoName: '',\n            promoText: '',\n            promoST: false,\n        };\n    }\n    \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    \n    componentDidMount = () => {\n        this._isMounted = true;\n        \n        if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            this.setState({\n                promoName: localStorage.getItem('promo_name')\n            })\n\n            setTimeout(() => {\n                this.checkPromo();\n            }, 300)\n        }\n\n        let allItems = itemsStore.getAllItems();\n        let cartItems = itemsStore.getItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let newCart = [];\n        \n        cartItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'us';\n                newCart.push(item)\n            }\n        })\n        \n        promoItems.map((item) => {\n            if( item.count > 0 ){\n                item.type == 'promo';\n                newCart.push(item)\n            }\n        })\n        \n        console.log( cartItems )\n\n        cartItems.map( (item, key) => {\n            let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n\n            cartItems[ key ]['img_new'] = this_item['img_new'];\n            cartItems[ key ]['img_new_update'] = this_item['img_new_update'];\n            cartItems[ key ]['img_app'] = this_item['img_app'];\n        } )\n\n        this.setState({\n            cartItems: cartItems\n        })\n        \n        \n        autorun(() => {\n            if( this._isMounted ){\n\n                this.setState({\n                    allPrice: itemsStore.getSumDiv() + itemsStore.getAllPrice()\n                })\n\n                let allItems = itemsStore.getAllItems();\n                let cartItems = itemsStore.getItems();\n                let promoItems = itemsStore.getItemsPromo();\n                let newCart = [];\n                \n                cartItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'us';\n                        newCart.push(item)\n                    }\n                })\n                \n                promoItems.map((item) => {\n                    if( item.count > 0 ){\n                        item.type = 'promo';\n                        newCart.push(item)\n                    }\n                })\n                \n                console.log( newCart )\n                \n                newCart.map( (item, key) => {\n                    let this_item = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) );\n        \n                    newCart[ key ]['img_new'] = this_item['img_new'];\n                    newCart[ key ]['img_new_update'] = this_item['img_new_update'];\n                    newCart[ key ]['img_app'] = this_item['img_app'];\n                } )\n\n                this.setState({\n                    cartItems: newCart,\n                    sumDiv: itemsStore.getSumDiv(),\n                    promoName: localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : ''\n                })\n            }\n        })\n    }\n    \n    add(id){\n        itemsStore.AddItem(id);\n    }\n    \n    minus(id){\n        itemsStore.MinusItem(id);\n    }\n    \n    handleClick = (event) => {\n        if( itemsStore.getPage() !== 'cart' ){\n            this.setState({\n                anchorEl: event.currentTarget\n            })\n        }else{\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    }\n    \n    checkPromo(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'get_promo_web', \n                city_id: itemsStore.getCity(),\n                promo_name: this.state.promoName\n            })\n        }).then(res => res.json()).then(json => {\n            itemsStore.setPromo( JSON.stringify(json), this.state.promoName );\n            let check_promo = itemsStore.checkPromo();\n              \n            if( check_promo.st === false ){\n                //localStorage.removeItem('promo_name')\n            }\n            \n            if( this.state.promoName.length == 0 ){\n                this.setState({\n                    promoText: ''\n                })\n            }else{\n                this.setState({\n                    promoText: check_promo.text,\n                    promoST: check_promo.st\n                })\n            }\n        })\n    }\n    \n    changePromo(event){\n        this.setState({ \n            promoName: event.target.value \n        })\n    }\n\n    checkPromoKey(event){\n        if( parseInt(event.keyCode) == 13 ){\n            this.checkPromo();\n        }\n    }\n\n    render(){\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n        return(\n            <div>\n                <IconButton className=\"ShopIconBTN\" aria-describedby={id} color=\"inherit\" aria-label=\"menu\" onClick={this.handleClick.bind(this)}>\n                    <Badge badgeContent={this.state.allPrice} max={500000} color=\"primary\">\n                        <ShoppingCartOutlinedIcon />\n                    </Badge>\n                </IconButton>\n                \n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose.bind(this)}\n                    //anchorPosition={{ top: 50, right: 50 }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                >\n                    <div>\n                        <table className=\"TableMini\">\n                            <tbody>\n                                {this.state.cartItems.map((item, key) => \n                                    item.type == 'us' ?\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }\n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                            :\n                                        <tr key={key}>\n                                            <td className=\"CellPic\">\n                                                { item.img_app.length > 0 ? \n                                                    <picture>\n                                                        <source srcset={`\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg 138w, \n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_292x292.jpg 146w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_366x366.jpg 183w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_466x466.jpg 233w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_585x585.jpg 292w\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_732x732.jpg 366w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1168x1168.jpg 584w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_1420x1420.jpg 760w,\n                                                            https://storage.yandexcloud.net/site-img/${item.img_app}_2000x2000.jpg 1875w`} \n                                                            sizes=\"(max-width=1439px) 233px, (max-width=1279px) 218px, 292px\" />\n                                                        <img \n                                                            alt={item.name} \n                                                            title={item.name} \n                                                            src={`https://storage.yandexcloud.net/site-img/${item.img_app}_276x276.jpg`} />\n                                                    </picture>\n                                                        : \n                                                    <picture>\n                                                        <source \n                                                            srcSet={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.webp?\"+item.img_new_update} \n                                                            type=\"image/webp\" \n                                                        />\n                                                        <img \n                                                            src={\"https://storage.yandexcloud.net/site-img/\"+item.img_new+\"600х400.jpg?\"+item.img_new_update} \n                                                            alt={item.name}\n                                                            title={item.name}\n                                                        />\n                                                    </picture> \n                                                }   \n                                            </td>\n                                            <td className=\"TableMiniName CellName\">\n                                                <span style={{ height: 40, width: '100%', display: 'flex', alignItems: 'center' }}>{item.name}</span>\n                                            </td>\n                                            <td className=\"CellButton\">\n                                                <MiniActionsCartButton count={item.count} item_id={item.item_id} minus={this.minus.bind(this)} add={this.add.bind(this)} />\n                                            </td>\n                                            <td className=\"CellPrice\"> \n                                                <div className=\"TableMiniPrice\">\n                                                    { new Intl.NumberFormat('ru-RU').format(item.all_price) } \n                                                    <IconRuble style={{ width: 13, height: 13, fill: '#525252', marginLeft: 5 }}/>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                )}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td>Итого:</td>\n                                    <td>\n                                        <div>\n                                            { new Intl.NumberFormat('ru-RU').format(this.state.allPrice) } \n                                            <IconRuble style={{ width: 14, height: 14, fill: '#525252', marginLeft: 5 }} />\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tfoot>      \n                        </table>\n                        <div className=\"SpacePromoRoot\">\n                            <Paper component=\"div\" className=\"SpacePromo\" elevation={0}>\n                                <InputBase\n                                    onBlur={this.checkPromo.bind(this)}\n                                    value={this.state.promoName}\n                                    onKeyDown={this.checkPromoKey.bind(this)}\n                                    onChange={this.changePromo.bind(this)}\n                                    placeholder=\"Есть промокод\"\n                                />\n                                {this.state.promoText.length > 0 ?\n                                    <div className={ this.state.promoST === true ? 'promoIndicator true' : 'promoIndicator false'} />\n                                        :\n                                    null\n                                }\n                            </Paper>\n                            {this.state.promoText.length > 0 && this.state.promoST === false ?\n                                <div className=\"DescPromo\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{this.state.promoText}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        <div className=\"InCart\">\n                            {itemsStore.getToken() !== null ?\n                                <Link\n                                    to={'/'+itemsStore.getCity()+'/cart'}\n                                    exact={ true }\n                                    style={{ textDecoration: 'none' }}\n                                    onClick={this.handleClose.bind(this)}\n                                >\n                                    <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                        <Button variant=\"contained\">Оформить заказ</Button>\n                                    </ButtonGroup>\n                                </Link>\n                                    :\n                                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\">\n                                    <Button variant=\"contained\" onClick={this.props.openLogin}>Оформить заказ</Button>\n                                </ButtonGroup>\n                            }\n                        </div>\n                    </div>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nexport class HeaderCat extends React.Component {\n    render(){\n        return (\n            <Header data={this.props.data} city={this.props.city} this_link={this.props.this_link} />\n        )\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\nexport class Header extends React.Component {\n    is_load = false;\n    \n    sms1 = false;\n    sms2 = false;\n    \n    constructor(props) {\n        super(props);\n        \n        if( this.props && this.props.data ){\n            this.is_load = true;\n            itemsStore.setDops(this.props.data.all.other.cats.need_dop);\n            itemsStore.setAllItems(this.props.data.all.other.cats.all_items);\n            itemsStore.setAllItemsCat(this.props.data.all.other.cats.arr);\n            itemsStore.setAllItemsCatNew(this.props.data.all.other.cats.main_cat);\n            itemsStore.setFreeItems(this.props.data.all.other.cats.free_items);\n            itemsStore.setBanners(this.props.data.all.other.cats.baners)\n            itemsStore.setCityRU(this.props.data.all.other.cats.this_city_name_ru);\n            itemsStore.setCity(this.props.city)\n        }\n        \n        this.state = {      \n            this_link: this.props.this_link ? this.props.this_link : '',\n            categoryItemsNew: this.props.data ? this.props.data.all.other.cats.main_cat : [],\n            \n            categoryItems: this.props.data ? this.props.data.all.other.cats.arr : [],\n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            is_load_new: false,\n            openCity: false,\n            cityName: this.props.city ? this.props.city : '',\n            testData: [1, 2, 3, 4],\n            cityList: this.props.data ? this.props.data.all.other.cats.city_list : [],\n            \n            openLoginNew: false,\n            pwd: '',\n            ResPWD: false,\n            NeedCode: false,\n            typeLogin: 0,\n\n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 89,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            token: '',\n            \n            soc_link: null,\n            \n            anchorEl: null,\n            cityNameRu: this.props.data ? this.props.data.all.other.cats.this_city_name_ru && this.props.data.all.other.cats.this_city_name_ru.length > 0 ? this.props.data.all.other.cats.this_city_name_ru : 'Город' : 'Город'\n        };\n    }\n    \n    componentDidMount = () => {\n        setTimeout(() => {\n\n            let userName = itemsStore.getUserName();\n            let token = itemsStore.getToken();\n\n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( token && token.length == 0 && localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n                this.setToken( localStorage.getItem('token'), '' ); \n                \n                /*fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: localStorage.getItem('token')\n                    })\n                }).then(res => res.json()).then(json => {\n\n                    itemsStore.setToken( localStorage.getItem('token'), json ); \n                    itemsStore.setUserName(json);\n\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json,\n                        token: localStorage.getItem('token')\n                    })\n                })\n                .catch(err => { });*/\n            }\n\n            /*if( !userName || userName.length == 0 ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_user_data', \n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    itemsStore.setUserName(json);\n                    this.is_load = false;\n\n                    this.setState({\n                        userName: json\n                    })\n                })\n                .catch(err => { });\n\n\n                \n            }*/\n\n            if( userName.length > 0 ){\n                itemsStore.setUserName(userName);\n                this.setState({\n                    userName: userName\n                })\n            } \n            \n\n            \n\n\n            let cartData = itemsStore.getCartData();\n\n            if( cartData.orderType || cartData.orderType == 0 ){\n                if( cartData.orderType == 0 && cartData.orderAddr && cartData.orderAddr.id && cartData.orderAddr.id !== -1 ){\n                    let allPrice = itemsStore.getAllPrice();\n                    \n                    if( parseInt(cartData.orderAddr.free_drive) == 1 ){\n                        if( parseInt(allPrice) > 0 ){\n                            itemsStore.setSumDiv(0);\n                        }else{\n                            itemsStore.setSumDiv(1);\n                        }\n                    }else{\n                        itemsStore.setSumDiv(parseInt(cartData.orderAddr.sum_div));\n                    }\n                }\n            }\n            \n            this.setState({\n                is_load: true\n            })\n            \n            this.load();\n        }, 300)\n        \n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                token: !localStorage.getItem('token') || localStorage.getItem('token').length == 0 ? '' : localStorage.getItem('token')\n            })\n\n            if( itemsStore.getCity() !== this.state.cityName ){\n                this.setState({\n                    cityName: itemsStore.getCity()\n                })\n                \n                this.load();\n            }\n            \n            let user_name = itemsStore.getUserName();\n\n            if( !user_name || user_name.length == 0 ){\n\n            }else{\n                this.setState({\n                    userName: user_name\n                })\n            }\n            \n        })\n    }\n    \n    load(){\n        //if( !this.is_load ){\n        //    this.is_load = true;\n            \n            if( itemsStore.getCity() ){\n                fetch(config.urlApi, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type':'application/x-www-form-urlencoded'},\n                    body: queryString.stringify({\n                        type: 'get_cat_web', \n                        city_id: itemsStore.getCity(),\n                        user_id: itemsStore.getToken()\n                    })\n                }).then(res => res.json()).then(json => {\n                    \n                    itemsStore.setUserName(json.user_name);\n                    \n                    itemsStore.setDops(json.need_dop);\n                    itemsStore.setAllItems(json.all_items);\n                    itemsStore.setAllItemsCat(json.arr);\n                    itemsStore.setAllItemsCatNew(json.main_cat);\n                    itemsStore.setFreeItems(json.free_items);\n                    itemsStore.setBanners(json.baners)\n                    itemsStore.setCityRU(json.this_city_name_ru);\n                    \n                    this.setState({\n                        cityList: json.city_list,\n                        categoryItems: json.arr, \n                        categoryItemsNew: json.main_cat,\n                        is_load: true,\n                        cityNameRu: json.this_city_name_ru,\n                        userName: json.user_name\n                    });\n                    this.is_load = false\n                })\n                .catch(err => { });\n        //    }else{\n        //        this.is_load = false;\n            }\n        //}\n    }  \n    \n    openCity(){\n        this.setState({\n            openCity: true\n        })\n    }\n    \n    closeCity(){\n        this.setState({\n            openCity: false\n        })\n    }\n\n    getNewLink(city){\n        let this_addr = window.location.pathname;\n        return this_addr.replace(this.state.cityName, city);\n    }\n\n    openLogin(){\n        if( localStorage.getItem('token') && localStorage.getItem('token').length > 0 ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_user_data', \n                    user_id: localStorage.getItem('token')\n                })\n            }).then(res => res.json()).then(json => {\n                itemsStore.setToken( localStorage.getItem('token'), json ); \n                itemsStore.setUserName(json);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json,\n                    token: localStorage.getItem('token')\n                })\n\n                if (typeof window !== 'undefined') {\n                    window.location.pathname = '/'+this.state.cityName+'/profile';\n                }\n            })\n            .catch(err => { });\n        }else{\n            this.setState({\n                openLoginNew: true\n                //openLogin: true\n            })\n        }\n    }\n    \n    closeLogin(){\n        this.setState({\n            openLogin: false,\n            openLoginNew: false,\n            ResPWD: false,\n            NeedCode: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            pwd: ''\n        })\n    }\n    \n    logIn(){\n        let number = this.state.userLogin;\n            \n        number = number.split(' ').join('');\n        number = number.split('(').join('');\n        number = number.split(')').join('');\n        number = number.split('-').join('');\n        number = number.split('_').join('');\n        \n        number = number.slice(1);\n\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'site_login',\n                number: number,\n                pwd: this.state.pwd \n            })\n        }).then(res => res.json()).then(json => {\n            if( json.st === false ){\n                this.setState({\n                    errPhone: json.text\n                });\n            }else{\n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }\n\n            \n        })\n        .catch(err => { });\n    }\n\n    sendSMS(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                stage_1: false,\n                stage_2: true, \n                errPhone: '',\n                errSMS: ''\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'create_profile', \n                            number: number,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n    \n    repeatSMS(){\n        if( this.sms2 === false ){\n            this.sms2 = true;\n            \n            this.setState({\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'repeat_sms', \n                            number: this.state.userLoginFormat,\n                            token: token\n                        })\n                    }).then(res => res.json()).then(json => {\n                        this.sms2 = false;\n                        \n                        if( json['st'] ){\n                            this.setState({\n                                timerSMS: 89\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                                errSMS: json.text\n                            });\n                        }\n\n                        setTimeout( () => {\n                            this.setState({\n                                is_load_new: false\n                            });\n                        }, 300 )\n                        \n                    });\n                });\n            });\n        }\n    }\n    \n    checkCode(){\n        this.setState({\n            errSMS: ''\n        });\n        \n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'check_profile', \n                cod: this.state.userCode,\n                number: this.state.userLoginFormat\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                itemsStore.setToken(json.token, json.name);\n                this.closeLogin();\n            }else{\n                this.setState({\n                  errSMS: json.text\n                });\n            }\n        });\n    }\n    \n    changeNumber(){\n        this.setState({\n            stage_1: true,\n            stage_2: false,\n            \n            errPhone: '',\n            errSMS: ''\n        })\n    }\n\n    changeCode(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n        \n        if( (parseInt(code)+'').length == 4 ){ \n            setTimeout(()=>{\n                this.checkCode() \n            }, 500)\n        }\n    }\n\n    changeCodeNew(code){\n        code = code.target.value\n        \n        this.setState({\n            userCode: code\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.sendSMS()\n        }\n    }\n    \n    handleClick = (event) => {\n        \n        this.setState({\n            anchorEl: event.currentTarget\n        })\n    };\n    \n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        })\n    };\n    \n    LoginBySMS(){\n        this.setState({\n            openLoginNew: false,\n            openLogin: true,\n            errPhone: '', \n            errSMS: ''\n        })\n\n        this.is_load = false;\n    \n        this.sms1 = false;\n        this.sms2 = false;\n    }\n\n    ResPWD(){\n        this.setState({\n            ResPWD: true,\n            NeedCode: false\n        })\n    }\n\n    sendsmsrp(){\n        if( this.sms1 == false ){\n            this.sms1 = true;\n            \n            this.setState({\n                //stage_1: false,\n                //stage_2: true, \n                errPhone: '',\n                errSMS: '',\n                is_load_new: true\n            });\n            \n            let number = this.state.userLogin;\n            \n            number = number.split(' ').join('');\n            number = number.split('(').join('');\n            number = number.split(')').join('');\n            number = number.split('-').join('');\n            number = number.split('_').join('');\n            \n            number = number.slice(1);\n            \n            this.setState({\n                userLoginFormat: number\n            })\n            \n            grecaptcha.ready(() => {\n                grecaptcha.execute('6LdhWpIdAAAAAA4eceqTfNH242EGuIleuWAGQ2su', {action: 'submit'}).then( (token) => {\n                    fetch(config.urlApi, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type':'application/x-www-form-urlencoded'},\n                        body: queryString.stringify({\n                            type: 'sendsmsrp', \n                            number: number,\n                            pwd: this.state.pwd,\n                            token: token \n                        })\n                    }).then(res => res.json()).then(json => {\n                        if( json['st'] ){\n                            this.setState({ \n                                errPhone: '',\n                                NeedCode: true,\n                                errPhone: '', \n                                errSMS: ''\n                            })\n                        \n                            let timerId = setInterval(() => {\n                                this.setState({\n                                    timerSMS: this.state.timerSMS-1\n                                })\n                                if( this.state.timerSMS == 0 ){\n                                    clearInterval(timerId);\n                                }\n                            }, 1000);\n                        }else{\n                            this.setState({\n                              errPhone: json.text\n                            });\n                        }\n                        \n                        setTimeout( () => {\n                            this.sms1 = false;\n                            this.setState({\n                                is_load_new: false\n                            })\n                        }, 300 )\n                    });\n                });\n            });\n            \n        }\n    }\n\n    checkcoderp(){\n        fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n                type: 'checkcoderp', \n                number: this.state.userLoginFormat,\n                code: this.state.userCode\n            })\n        }).then(res => res.json()).then(json => {\n            if( json['st'] ){\n                this.setState({ \n                    errPhone: '',\n                    NeedCode: true\n                })\n            \n                itemsStore.setToken( json.token, json.name ); \n                itemsStore.setUserName(json.name);\n\n                this.is_load = false;\n\n                this.setState({\n                    userName: json.name,\n                    token: json.token,\n                    errPhone: '', \n                    errSMS: ''\n                })\n\n                this.closeLogin();\n\n                //if (typeof window !== 'undefined') {\n                //    window.location.pathname = '/'+this.state.cityName+'/profile';\n                //}\n            }else{\n                this.setState({\n                  errPhone: json.text\n                });\n            }\n            \n            setTimeout( () => {\n                this.sms1 = false;\n            }, 300 )\n        });\n    }\n\n    render() {\n        let link = this.props.this_link;\n        link = link.split('/');\n        let mainLink = '';\n        \n        let check = link.find( (item) => item == 'menu');\n        \n        if( check && check.length > 0 ){\n            let check2 = link.find( (item) => item == 'item');\n            \n            if( !check2 ){\n                let index = link.findIndex( (item) => item == 'menu');\n                mainLink = link[ index+1 ];\n            }\n        }\n        \n        if( typeof window !== 'undefined' ){\n            let location = window.location.href;\n            \n            if( this.state.this_link != location ){\n                \n                link = location;\n                link = link.split('/');\n                mainLink = '';\n                \n                check = link.find( (item) => item == 'menu');\n                \n                if( check && check.length > 0 ){\n                    let check2 = link.find( (item) => item == 'item');\n                    \n                    if( !check2 ){\n                        let index = link.findIndex( (item) => item == 'menu');\n                        mainLink = link[ index+1 ];\n                    }\n                }\n            }\n        }\n        \n        if( this.state.is_load === false ){\n            return (\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName}>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{itemsStore.getCityRU()} <ArrowDropDownIcon /></Typography>\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                </Grid>\n                                \n                                {this.state.categoryItemsNew.map((item, key) => \n                                    <Grid item key={key}>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/menu/\"+item.link} \n                                            className={\"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </Link>    \n                                    </Grid>    \n                                )}\n                                \n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/akcii\"} \n                                        className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <Link \n                                        style={{ padding: '4px 8px' }}\n                                        to={\"/\"+this.state.cityName+\"/contacts\"} \n                                        className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                    >\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                    </Link>    \n                                </Grid>\n                                <Grid item>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat\">\n                            <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                                {this.state.testData.map((item, key) => \n                                    <Grid item key={key}>\n                                        <div style={{ width: 120, height: 28, marginRight: 12, backgroundColor: '#e5e5e5' }} />    \n                                    </Grid>)\n                                }\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n            )\n        }\n        \n        return (\n            <div>\n                <AppBar position=\"fixed\" className=\"header\" style={{ zIndex: 2 }}>\n                    <Toolbar className=\"sub_header\">\n                        \n                        <Grid style={{ width: '100%' }}>\n                            <Grid item style={{ marginRight: 15 }}>\n                                <Link to={\"/\"+this.state.cityName} onClick={ () => { window.scrollTo({ top: 0, behavior: 'smooth', }) } }>\n                                    <img alt=\"Жако доставка роллов и пиццы\" src=\"https://jacochef.ru/src/img/Bely_fon_logo.png\" />\n                                </Link> \n                            </Grid>\n                            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', width: '100%' }}>\n                                \n                                <Grid item className=\"CityProfileNav\">\n                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openCity.bind(this)} style={{ display: 'flex', flexDirection: 'row' }}>{this.state.cityNameRu} <ArrowDropDownIcon /></Typography>\n                                    \n                                    {this.state.token.length > 0 ?\n                                        this.state.userName.length > 0 ?\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"} className=\"cat\">{this.state.userName}</Link> \n                                                :\n                                            <Link to={\"/\"+this.state.cityName+\"/profile\"}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">Профиль</Typography>\n                                            </Link>\n                                            :\n                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\" onClick={this.openLogin.bind(this)}>Войти</Typography>\n                                    }\n                                </Grid>\n                                \n                                <div style={{ display: 'flex', alignItems: 'baseline', flexDirection: 'row', width: '100%' }}>\n                                    {this.state.categoryItemsNew.map((item, key) => \n                                        <Grid item key={key}>\n                                            {this.state.activePage == 'home' && !check ?\n                                                item.cats.length > 0 ?\n                                                    <>\n                                                        <Link id={'link_'+item.id} name={item.main_link} to={\"/\"+this.state.cityName} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={this.handleClick.bind(this)}>\n                                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                        </Link> \n                                                        \n                                                        <Menu\n                                                            id=\"simple-menu\"\n                                                            anchorEl={this.state.anchorEl}\n                                                            keepMounted\n                                                            open={Boolean(this.state.anchorEl)}\n                                                            onClose={this.handleClose.bind(this)}\n                                                            \n                                                            elevation={2}\n                                                            getContentAnchorEl={null}\n                                                            anchorOrigin={{\n                                                              vertical: 'bottom',\n                                                              horizontal: 'center',\n                                                            }}\n                                                            transformOrigin={{\n                                                              vertical: 'top',\n                                                              horizontal: 'center',\n                                                            }}\n                                                        >\n                                                            {item.cats.map( (it, k) =>\n                                                                <MenuItem key={k} style={{ width: '100%' }}>\n                                                                    <ScrollLink \n                                                                        onClick={this.handleClose.bind(this)}\n                                                                        to={\"cat\"+it.id} \n                                                                        spy={true} \n                                                                        isDynamic={true}\n                                                                        /*onSetActive={(el) => { \n                                                                            if( document.querySelector('.activeCat') ){\n                                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                                            }\n                                                                            document.querySelector('#link_'+it.id).classList.add('activeCat');\n                                                                        }}*/\n                                                                        smooth={true} \n                                                                        offset={-60} \n                                                                        activeClass=\"activeCat\" \n                                                                        //id={'link_'+it.id} \n                                                                        \n                                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw', width: '100%' }}\n                                                                    >\n                                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{it.name}</Typography>\n                                                                    </ScrollLink>\n                                                                </MenuItem>\n                                                            )}\n                                                        </Menu>\n                                                    </>\n                                                        :\n                                                    <ScrollLink \n                                                        key={key}\n                                                        to={\"cat\"+item.id} \n                                                        spy={true} \n                                                        isDynamic={true}\n                                                        onSetActive={(el) => { \n                                                            if( document.querySelector('.activeCat') ){\n                                                                document.querySelector('.activeCat').classList.remove('activeCat');\n                                                            }\n                                                            document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                        }} \n                                                        smooth={true} \n                                                        offset={-60} \n                                                        activeClass=\"activeCat\" \n                                                        id={'link_'+item.id} \n                                                        name={item.main_link}\n                                                        style={{ width: 'max-content', display: 'flex', whiteSpace: 'nowrap', padding: '4px 0.5vw' }}\n                                                    >\n                                                        <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                    </ScrollLink>\n                                                    :\n                                                <Link to={\"/\"+this.state.cityName} name={item.main_link} className=\"catLink\" style={{ padding: '4px 0.5vw' }} onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                    <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                                </Link> \n                                            }\n                                        </Grid>)\n                                    }\n                                    \n                                    \n                                    \n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/akcii\"} \n                                            className={ this.state.activePage == 'actii' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Акции</Typography>\n                                        </Link>    \n                                    </Grid>\n                                    <Grid item>\n                                        <Link \n                                            style={{ padding: '4px 8px' }}\n                                            to={\"/\"+this.state.cityName+\"/contacts\"} \n                                            className={ this.state.activePage == 'contact' ? \"catLink activeCat\" : \"catLink\"}\n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">Контакты</Typography>\n                                        </Link>    \n                                    </Grid>\n                                \n                                </div>\n                                \n                                <Grid item style={{ marginLeft: 'auto' }}>\n                                    <SimplePopover openLogin={this.openLogin.bind(this)} />\n                                </Grid>\n                            </Box>\n                        </Grid>\n                    \n                        <Box sx={{ display: { md: 'none' } }}>\n                            <Typography variant=\"h5\" component=\"span\" className=\"thisCity\" onClick={this.openCity.bind(this)}><FontAwesomeIcon icon={ faMapMarkerAlt } /> {itemsStore.getCityRU()}</Typography>\n                        </Box>\n                                \n                    </Toolbar>\n                    \n                    {this.state.activePage == 'home' ?\n                        <Grid className=\"scrollCat mobile\">\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                {this.state.categoryItems.map((item, key) => \n                                    check && check.length > 0 ?\n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                            name={item.main_link}\n                                            style={{ padding: '3px 5px' }}\n                                        >\n                                            <Link to={\"/\"+this.state.cityName} style={{ padding: '3px 5px' }} className=\"catLink\" onClick={() => { typeof window !== 'undefined' ? localStorage.setItem('goTo', item.id) : {} }}>\n                                                <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                            </Link>\n                                        </ScrollLink>  \n                                            :                                        \n                                        <ScrollLink \n                                            key={key}\n                                            to={\"cat\"+item.id} \n                                            spy={true} \n                                            onSetActive={(el) => { \n                                                if( document.querySelector('.activeCat') ){\n                                                    document.querySelector('.activeCat').classList.remove('activeCat');\n                                                }\n                                                document.querySelector('#link_'+item.id).classList.add('activeCat');\n                                                \n                                                document.getElementById('link_'+item.id).scrollIntoView(true);\n                                                \n                                                /*if( document.querySelector('.scrollCat') ){\n                                                    document.querySelector('.scrollCat').animate({\n                                                        scrollLeft: 200\n                                                    }, 100);\n                                                }*/\n                                            }} \n                                            smooth={true} \n                                            offset={-100} \n                                            activeClass=\"activeCat\" \n                                            id={'link_'+item.id} \n                                        >\n                                            <Typography className=\"cat\" variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                        </ScrollLink>    \n                                        \n                                )}\n                            </Box>\n                        </Grid>\n                            :\n                        null\n                    }\n                </AppBar>\n                \n                <Dialog\n                    open={this.state.openCity}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeCity.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"ModalCity\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\" style={{ paddingBottom: 24, paddingTop: 0 }}>\n                        {this.state.cityList.map((item, key) => \n                            <Link \n                                key={key} \n                                className={ this.state.cityName == item.link ? 'active' : '' } \n                                to={{ pathname: this.getNewLink(item.link) }} \n                                onClick={() => { setTimeout(()=>{ itemsStore.saveCartData([]); window.location.reload(); }, 300) }}\n                            >\n                                <Typography variant=\"h5\" component=\"span\" className={\"ModalLabel\"}>{item.name}</Typography>\n                            </Link> \n                        )}\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog\n                    open={this.state.openLogin}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Вход на сайт</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1\">\n                        <div className=\"ModalContent_1_2\">\n                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                            <InputMask \n                                className=\"InputMask\"\n                                mask=\"8 (999) 999-99-99\" \n                                placeholder=\"8 (999) 999-99-99\" \n                                disabled={!this.state.stage_1}\n                                value={this.state.userLogin}\n                                //onKeyPress={this.handleKeyPress}\n                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                            />\n                            {this.state.stage_2 ?\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.changeNumber.bind(this)}>Изменить номер</Typography>\n                                    :\n                                null\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        {this.state.stage_2 ?\n                            <div className=\"ModalContent_1_3\">\n                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Код из смс</Typography>\n                                <div className=\"ModalContent_1_2\">\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"9999\" \n                                        value={this.state.userCode}\n                                        //onChange={ (event) => { this.changeCode.bind(this, event.target.value) } }\n                                        onChange={ this.changeCode.bind(this) }\n                                    />\n                                    {this.state.timerSMS > 0 ?\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                            :\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                    }\n                                </div>\n                                {this.state.errSMS.length > 0 ?\n                                    <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                        <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                    </div>\n                                        :\n                                    null\n                                }\n                            </div>\n                                :\n                            null\n                        }\n                    </DialogContent>\n                    {this.state.stage_1 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.sendSMS.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Выслать код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                    {this.state.stage_2 ?\n                        <DialogActions style={{ padding: '12px 24px' }}>\n                            <Button onClick={this.checkCode.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить код</Button>\n                        </DialogActions>\n                            :\n                        null\n                    }\n                </Dialog>\n\n\n\n\n                <Dialog\n                    open={this.state.openLoginNew}\n                    fullWidth={true}\n                    maxWidth={'xs'}\n                    onClose={this.closeLogin.bind(this)}\n                    className=\"ModalAuth\"\n                >\n                    <DialogTitle style={{ display: 'none' }}>{this.state.ResPWD === false ? 'Авторизация' : 'Восстановление пароля'}</DialogTitle>\n                    <DialogContent className=\"ModalContent_1_1 newContent\">\n\n                        <Backdrop open={this.state.is_load_new} style={{ zIndex: 999, color: '#fff' }}>\n                            <CircularProgress color=\"inherit\" />\n                        </Backdrop>\n\n                        <Tabs\n                            value={this.state.typeLogin}\n                            onChange={ (event, value) => { this.setState({ typeLogin: value, ResPWD: value == 0 ? false : true, errPhone: '', errSMS: '' }) } }\n                            indicatorColor=\"primary\"\n                            //textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            style={{ backgroundColor: '#fff', color: '#000', marginBottom: 20 }}\n                        >\n                            <Tab style={{ color: '#000' }} label=\"Вход\" {...a11yProps(0)} />\n                            <Tab style={{ color: '#000' }} label=\"Регистрация\" {...a11yProps(1)} />\n                        </Tabs>\n\n                        <div className=\"ModalContent_1_2\">\n                            { this.state.ResPWD === false ?\n                                <>\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                    <InputMask \n                                        className=\"InputMask\"\n                                        mask=\"8 (999) 999-99-99\" \n                                        placeholder=\"8 (999) 999-99-99\" \n                                        disabled={!this.state.stage_1}\n                                        value={this.state.userLogin}\n                                        //onKeyPress={this.handleKeyPress}\n                                        onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Пароль</Typography>\n                                    <TextField \n                                        size=\"small\"\n                                        variant=\"outlined\" \n                                        type=\"password\"\n                                        value={this.state.pwd} \n                                        disabled={!this.state.stage_1}\n                                        onChange={ event => this.setState({ pwd: event.target.value }) }\n                                    />\n                                    <Typography variant=\"h5\" component=\"span\" className=\"changeNumberGray\" onClick={this.LoginBySMS.bind(this)}>Войти по смс</Typography>\n                                    \n                                </>\n                                    :\n                                <>\n                                    { this.state.ResPWD === true && this.state.NeedCode === false ?\n                                        <>\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={!this.state.stage_1}\n                                                value={this.state.userLogin}\n                                                //onKeyPress={this.handleKeyPress}\n                                                onChange={ event => this.state.stage_1 ? this.setState({ userLogin: event.target.value }) : {} }\n                                            />\n\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>{ this.state.typeLogin == 0 ? 'Новый пароль' : 'Придумайте пароль' }</Typography>\n                                            <TextField \n                                                size=\"small\"\n                                                variant=\"outlined\" \n                                                type=\"password\"\n                                                value={this.state.pwd} \n                                                disabled={!this.state.stage_1}\n                                                onChange={ event => this.setState({ pwd: event.target.value }) }\n                                            />\n                                        </>\n                                            :\n                                        <div className=\"ModalContent_1_3\">\n                                            <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\">Номер телефона</Typography>\n                                            <InputMask \n                                                className=\"InputMask\"\n                                                mask=\"8 (999) 999-99-99\" \n                                                placeholder=\"8 (999) 999-99-99\" \n                                                disabled={true}\n                                                value={this.state.userLogin}\n                                            />\n\n                                            <div className=\"ModalContent_1_2\">\n                                                <Typography variant=\"h5\" component=\"span\" className=\"ModalLabel\" style={{ marginTop: 20 }}>Код из смс</Typography>\n                                                <InputMask \n                                                    className=\"InputMask\"\n                                                    mask=\"9999\" \n                                                    value={this.state.userCode}\n                                                    onChange={ this.changeCodeNew.bind(this) }\n                                                />\n                                                {this.state.timerSMS > 0 ?\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10 }}>{'Новое смс доступно через '+this.state.timerSMS+' сек.'}</Typography>\n                                                        :\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '0.8rem', paddingTop: 10, cursor: 'pointer', width: 'fit-content' }} onClick={this.repeatSMS.bind(this)}>Получить новый код</Typography>\n                                                }\n                                            </div>\n                                            {this.state.errSMS.length > 0 ?\n                                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errSMS}</Typography>\n                                                </div>\n                                                    :\n                                                null\n                                            }\n                                        </div>\n                                        \n                                    }\n                                </>\n                            }\n                            {this.state.errPhone.length > 0 ?\n                                <div style={{ marginTop: 10, padding: 16, backgroundColor: '#BB0025', borderRadius: 4 }}>\n                                    <Typography variant=\"h5\" component=\"span\" style={{ fontSize: '1.1rem', color: '#fff' }}>{this.state.errPhone}</Typography>\n                                </div>\n                                    :\n                                null\n                            }\n                        </div>\n                        \n                    </DialogContent>\n                    <DialogActions style={{ padding: '12px 24px' }}>\n                        { this.state.ResPWD === false ?\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', width: '100%', justifyContent: 'space-between' }}>\n                                <Typography variant=\"h5\" component=\"span\" className=\"changeNumber\" onClick={this.ResPWD.bind(this)}>Восстановить пароль</Typography>\n\n                                <Button onClick={this.logIn.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Войти</Button>\n                            </div>\n\n                            \n                                :\n                                this.state.NeedCode === false ?\n                                    <Button onClick={this.sendsmsrp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Подтвердить номер</Button>\n                                        :\n                                    <Button onClick={this.checkcoderp.bind(this)} style={{ backgroundColor: '#BB0025', color: '#fff', padding: '6px 30px' }}>Авторизоваться</Button>\n                        }\n                    </DialogActions>\n                </Dialog>\n                \n\n\n\n                {this.state.activePage == 'home' ?\n                    <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 85, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 88, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 91, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 94, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 97, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 100, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 103, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 106, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 109, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                        <div style={{ width: '100%', height: 3, position: 'fixed', top: 112, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                    </Box>\n                        :\n                    null\n                }    \n                \n                <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                    <CustomBottomNavigation login={ this.openLogin.bind(this) } />\n                </Box>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { HomeCat } from '../home';\nimport { Item } from '../item';\nimport { Contact } from '../contact';\nimport { Actii } from '../actii';\nimport { Profile } from '../profile';\nimport { Cart } from '../cart';\n\nimport { PageAbout } from '../pageAbout';\nimport { PageJob } from '../pageJob';\nimport { PageInstPay } from '../pageInstPay';\nimport { PageOferta } from '../pageOferta';\nimport { PagePolitika } from '../pagePolitika';\n\nimport { HeaderCat } from '../header';\nimport { Header } from '../header';\n\nimport Grid from '@mui/material/Grid';\n\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst queryString = require('query-string');\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nconst stores = { itemsStore };\n\nimport { autorun } from \"mobx\"\n\nimport { VKIcon, OdnIcon, TGIcon } from '../../stores/elements';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nvar firebaseAPP = null;\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nclass StickyFooter extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        /*let pathname = window.location.pathname;\n        \n        pathname = pathname.split('/');\n        pathname = pathname[0];*/\n        \n        this.state = {      \n            soc_link: null,\n            cityName: this.props.cityName,\n            is_load: false,\n            page: ''\n        };\n    }\n    \n    loadPageInfo(){\n        if( itemsStore.getCity() ){\n            fetch(config.urlApi, {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/x-www-form-urlencoded'},\n                body: queryString.stringify({\n                    type: 'get_page_info', \n                    city_id: itemsStore.getCity(),\n                    page: 'info'\n                })\n            }).then(res => res.json()).then(json => {\n                this.setState({\n                    soc_link: json.soc_link,\n                    is_load: true\n                });\n            })\n            .catch(err => { });\n        }\n    }\n    \n    componentDidMount = () => {\n        \n        this.setState({\n            page: itemsStore.getPage()\n        })\n        \n        autorun(() => {\n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n            \n            this.setState({\n                page: itemsStore.getPage()\n            })\n            \n            this.loadPageInfo();\n        })\n    }\n    \n    render(){\n        return (\n            <footer className={\"footer \"+(this.state.page == 'cart' ? this.state.page : '')}>\n                <Grid container className=\"mainContainer\">\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"copy\">\n                        <Typography variant=\"body1\" component=\"h1\">© Жако 2017 - {new Date().getFullYear()}</Typography>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/about' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">О Компании</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/jobs' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Вакансии</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/publichnaya-oferta' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Публичная оферта</Typography>\n                        </Link>\n\n                        { this.state.is_load && this.state.soc_link && this.state.soc_link.link_allergens.length ?\n                            <Link\n                                to={{ pathname: this.state.soc_link.link_allergens }}\n                                target=\"_blank\"\n                                style={{ textDecoration: 'none' }}\n                            >\n                                <Typography variant=\"body1\">Калорийность, состав и аллергены</Typography>\n                            </Link>\n                                :\n                            null\n                        }\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xl={3} xs={12}>\n                        <Link\n                            to={ '/'+this.state.cityName+'/politika-konfidencialnosti' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Политика конфиденциальности</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/contacts' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Доставка и контакты</Typography>\n                        </Link>\n                        <Link\n                            to={ '/'+this.state.cityName+'/instpayorders' }\n                            style={{ textDecoration: 'none' }}\n                        >\n                            <Typography variant=\"body1\">Правила оплаты товаров</Typography>\n                        </Link>\n                    </Grid>\n                    { this.state.is_load ?\n                        <Grid item lg={3} md={3} sm={3} xl={3} xs={12} className=\"socIcons\">\n                            { this.state.soc_link && this.state.soc_link.link_ok ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_ok }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <OdnIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            { this.state.soc_link && this.state.soc_link.link_vk ?\n                                <Link\n                                    to={{ pathname: this.state.soc_link.link_vk }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <VKIcon />\n                                </Link>\n                                    :\n                                null\n                            }\n                            \n                                <Link\n                                    to={{ pathname: 'https://t.me/jacofood' }}\n                                    target=\"_blank\"\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <TGIcon />\n                                </Link>\n                                    \n                        </Grid>\n                            :\n                        null\n                    }\n                </Grid>\n            </footer>\n        );\n    }\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {      \n            categoryItems: [],  \n            cartItems: [],\n            activePage: '',\n            is_load: false,\n            openCity: false,\n            cityName: '',\n            testData: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            cityList: [],\n            \n            openLogin: false,\n            userLogin: '',\n            userLoginFormat: '',\n            userCode: '',\n            \n            stage_1: true,\n            stage_2: false,\n            \n            timerSMS: 59,\n            errPhone: '',\n            errSMS: '',\n            userName: '',\n            \n            soc_link: null,\n        };\n    }\n\n    componentDidMount = () => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyChAHowCT2C7GRwfcxwt1Pi4SCV4CaVpP4\",\n            authDomain: \"jacofoodsite.firebaseapp.com\",\n            projectId: \"jacofoodsite\",\n            storageBucket: \"jacofoodsite.appspot.com\",\n            messagingSenderId: \"692082803779\",\n            appId: \"1:692082803779:web:39a39963cd8bff927000f6\"\n        };\n          \n        // Initialize Firebase\n        firebaseAPP = initializeApp(firebaseConfig);\n        const analytics = getAnalytics(firebaseAPP);\n        const perf = getPerformance(firebaseAPP);\n\n        autorun(() => {\n            this.setState({\n                activePage: itemsStore.getPage()\n            })\n            \n            this.setState({\n                cityName: itemsStore.getCity()\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.state.activePage !== nextState.activePage ||\n            this.state.cityName !== nextState.cityName\n        );\n    }\n    \n    render() {\n        return (\n            <Provider { ...stores }>\n                <div className=\"home\">\n                    <Switch>\n                        <Route\n                            path='/:cityName/contacts'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />   \n                            <Contact data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii/:act_id'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/akcii'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Actii data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Home data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/item/:id'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:catLink/:itemId'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <div style={{ paddingTop: 80 }}>\n                                <Item \n                                    data={this.props.globalState.data} \n                                    city={this.props.globalState.city} \n                                    this_link={this.props.globalState.this_link} \n                                    linkItem={this.props.globalState.linkItem} \n                                    item={this.props.globalState.Item}  \n                                />\n                            </div>\n                        </Route>\n                        <Route \n                            exact \n                            path='/:cityName/profile/'\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Profile data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/menu/:itemLink'\n                            exact={ true }\n                        >\n                            <HeaderCat \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <HomeCat data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/cart'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <Cart data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/about'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageAbout data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/jobs'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageJob data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/instpayorders'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageInstPay data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/publichnaya-oferta'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PageOferta data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/:cityName/politika-konfidencialnosti'\n                            exact={ true }\n                        >\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <PagePolitika data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        <Route\n                            path='/'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        <Route\n                            path='/profile'\n                            exact={ true }\n                        >\n                            <Redirect push\n                                to={\"/togliatti\"}\n                            />\n                        </Route>\n                        \n                        <Route>\n                            <Header \n                                data={this.props.globalState.data} \n                                city={this.props.globalState.city} \n                                this_link={this.props.globalState.this_link} />  \n                            <NotFound data={this.props.globalState.data} city={this.props.globalState.city} this_link={this.props.globalState.this_link}  />\n                        </Route>\n                        \n                    </Switch>\n                    \n                    {this.state.activePage == 'cart' ?\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <Box sx={{ display: { xs: 'none' } }}>\n                                <div className=\"456\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                                \n                            </Box>\n                            <Box sx={{ display: { sm: 'none' } }}>\n                                <div className=\"123\" style={{ width: '100%', height: 3, position: 'fixed', bottom: 72+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                                <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45+99, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                            </Box>\n                        </Box>\n                            :\n                        null\n                    }\n\n                    {this.state.activePage == 'cart' ? null :\n                        <Box sx={{ display: { md: 'none', lg: 'none', xl: 'none' } }}>\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 72, zIndex: 0, backgroundColor: '#bababa', opacity: 0.01 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 69, zIndex: 0, backgroundColor: '#bababa', opacity: 0.02 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 66, zIndex: 0, backgroundColor: '#bababa', opacity: 0.03 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 63, zIndex: 0, backgroundColor: '#bababa', opacity: 0.04 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 60, zIndex: 0, backgroundColor: '#bababa', opacity: 0.05 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 57, zIndex: 0, backgroundColor: '#bababa', opacity: 0.06 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 54, zIndex: 0, backgroundColor: '#bababa', opacity: 0.07 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 51, zIndex: 0, backgroundColor: '#bababa', opacity: 0.08 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 48, zIndex: 0, backgroundColor: '#bababa', opacity: 0.09 }} />\n                            <div style={{ width: '100%', height: 3, position: 'fixed', bottom: 45, zIndex: 0, backgroundColor: '#bababa', opacity: 0.1 }} />\n                        </Box> \n                    }\n\n                    <StickyFooter cityName={ this.props.globalState.city } />\n                </div>\n            </Provider>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App globalState={GLOBAL_STATE} /></BrowserRouter>, document.getElementById( 'app' ) );","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 238,\n\t\"./ru.js\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8028;"],"names":["queryString","require","itemsStore","ItemsStore","items","mainLink","sum_div","parseInt","need_dops","JSON","stringify","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","localStorage","setItem","promo","name","banners","itemsPromo","allItemsCat","allItemsCatNew","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","forEach","push","item_id","one_price","all_price","this","setItems","setTimeout","setToken","getInfoPromo","makeAutoObservable","length","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","orderInfo","getCartData","setItemsPromo","free_drive","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","getAllItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","Date","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","check","map","need_item","find","count_sale","this_item","promo_action","sale","cat_sale","id","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","check_dop","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","need_dop","free_dops_in_cart","unic_id","my_cart_promo","getFreeItems","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","IconRuble","props","style","xmlns","viewBox","d","VKIcon","OdnIcon","TGIcon","IconInfoWhite","fill","cx","cy","r","stroke","strokeWidth","strokeLinecap","IconInfoBlack","fillOpacity","MiniActionsCartButton","ButtonGroup","disableElevation","disableRipple","variant","className","onClick","minus","bind","add","React","ActionsCartButtonStart","Button","Intl","NumberFormat","width","height","marginLeft","paddingBottom","ActionsCartButton","firebaseAPP","Badge","new","color","hit","state","size","view","arrColor","position","top","left","backgroundColor","borderRadius","display","justifyContent","alignItems","Typography","component","fontFamily","fontSize","fontWeight","textTransform","lineHeight","HtmlTooltip","styled","Tooltip","classes","popper","theme","tooltipClasses","maxWidth","typography","pxToRem","border","get_item","path","split","PropTypes","Item","event","newValue","setState","itemTab","is_load","city_name","itemLink","linkItem","title","data","description","openTooltip","_isMounted","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAnalitic","getAnalytics","autorun","link","parseFloat","kkal","protein","fat","carbohydrates","document","querySelector","classList","remove","scrollTo","logEvent","content_type","content_id","img_name","img_app","img_new","img_type","desc","marc_desc_full","tmp_desc","Helmet","content","Box","sx","xs","sm","Grid","container","srcSet","img_new_update","src","alt","minHeight","is_new","is_hit","srcset","sizes","class","marginTop","flexDirection","marginBottom","marginRight","flex","textAlign","count_part_new","borderLeft","size_pizza","count_part","weight","ClickAwayListener","mouseEvent","touchEvent","onClickAway","handleTooltipClose","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","PopperProps","disablePortal","paddingTop","whiteSpace","overflowY","maxHeight","paddingRight","borderBottom","borderRight","padding","order","cursor","handleTooltipOpen","openSetPc","paddingLeft","alignContent","right","openInfo","openModalPCInfo","bottom","minWidth","propsData","page","axios","url","response","cats","all","error","console","log","Element","Scroll","scroller","CoverFlowCarousel","this_count","swiper","Swiper","grabCursor","loop","centeredSlidesBounds","setWrapperSize","autoHeight","centeredSlides","slidesPerView","autoplay","delay","pagination","clickable","renderBullet","index","navigation","nextEl","prevEl","overflow","Ruble","IconClose","handleDragStart","e","preventDefault","get_city","CardItem","is_old_price","old_price","marc_desc","GRID","innerWidth","Card","elevation","CardContent","openItem","CardActions","flexWrap","CardItemBot","nextProps","nextState","href","gutterBottom","info_weight","ShoppingCartOutlined","icon","faMinus","faPlus","Transition","ref","Slide","direction","HomeCat","Home","this_link","now","arrMax","AllItemsCat","addEventListener","elem","getElementById","getBoundingClientRect","scrollTop","Y","main_id","activeID","hash","removeItem","offset","duration","smooth","search","location","checkItem","act_id","openItemPC","pathname","findIndex","fetchData","loadBanners","testData","openItemSet","openModal","openModalPC","openModalPCSet","openModalPCSetItems","openModalPCInfoItems","banners_pc","banners_mobile","other","baners","aktia_id","to","exact","onDragStart","removeEventListener","history","pushState","startMove","pageY","handleClose","page_h","cat","main_link","spacing","margin","md","xl","Backdrop","zIndex","CircularProgress","lg","Dialog","fullScreen","TransitionComponent","DialogTitle","disableTypography","IconButton","itemId","fullWidth","handleClosePC","DialogContent","borderTopRightRadius","borderTopLeftRadius","handleClosePCInfo","handleClosePCSet","borderTop","ControlledAccordions","expanded","setExpanded","points","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","ExpandMore","raion","addr","AccordionDetails","organization","inn","kpp","ogrn","full_addr","phone","Contact","points_zone","point","unic_point","new_point","loadMap","err","is_load_script","script","createElement","head","appendChild","myMap2","ymaps","ready","Map","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","Polygon","address","hintLayout","fillColor","strokeColor","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","phone_new","Actii","actii","indexOf","openDialog","pre_actii","showItem","openMSG","statusMSG","textMSG","act_item","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeAlert","message","promo_title","closeDialog","faTimes","dangerouslySetInnerHTML","__html","DialogActions","activePromo","info","TabPanel","children","value","role","hidden","a11yProps","propTypes","Profile","loadData","valueTab","changeM","target","changeDay","userMail","checked","my_spam","user_id","spam","typeDel","delOrder","errorOpen","arr_day","arr_m","radiogroup_options","label","textDel","spiner","showOrder","p1","bank","order_id","checkPay","i","check_reload","orders","my_orders","status_order","is_delete","user","mail","pay_id","payId","repeat","is_create","trueOrder","pay","actionCodeDescription","text_err","orderComment","orderPay","orderSdacha","my_mail","day","mo","nameM","my_date","my_name","deltype","confirm","ans","order_items","item_","type_order_","street","DialogContentText","action","Close","AppBar","Tabs","changeTab","Tab","date_end","getOrder","date_time_new","Check","steps","time_to_client","noValidate","autoComplete","TextField","changeName","onBlur","saveName","InputProps","readOnly","login","date_bir","InputLabel","FormControl","Select","labelId","displayEmpty","saveDay","MenuItem","changeMail","saveMail","FormGroup","row","FormControlLabel","changeCheck","control","Checkbox","logOut","type_order_addr_new","time_order_name","time_order","this_status_order","is_preorder","text_time","sdacha","sum_order","closeOrder","repeatOrder","RadioGroup","changeAddr","Radio","onFocus","closeOrderTrue","CartItem","onePrice","new_onePrice","cartItems","new_cartItems","promo_cartItems","img","imgUpdate","faGift","CartItemMobile","Cart","cartItems_new","thisitem","main","dop","cartItems_main","cartItems_dop","cartItems_need_dop","sumDiv","promoItems","cartPromoItems","dop_new","cart_item","cartItems_promo","hasError","pic_point","choosePic","renderPay","pays","dev","pic","saveData","my_addr","check_dom_true","CheckDomTrue","chooseAddr","newAddrInfo","newAddrPD","newAddrET","newAddrKV","loadTimePred","blur","orderCheckDopTea","choosePicDialog","chooseTimeDialog","choosePayDialog","chooseNewAddr","orderCheckDop","all_addr","date_pred","picPointInfo","dev_mini","cartItems_dop_tea","timePred","orderCheck","newAddrHome","newAddrDom","orderPromo","orderPromoText","newOrderData","get_addr_pic","get_my_addr","get_addr","pointId","check_promo","home","kv","pd","et","dom_true","xy","pay_active","clickOrderStart","check_need_dop","check_dop_17","check_dop_19","startOrderNext","clearTimeout","startOrderIntervalTimer","payFull","typeOrder","addrPic","comment","addrDev","startOrderInterval","times","saveDataCustomAddr","origin","id_addr","changePredDay","isNaN","addr_id","this_pay","this_pic_point","delAddr","Autocomplete","freeSolo","checkNewAddr","options","option","renderInput","params","checkSaveData","changeDomTrue","multiline","rowsMax","changeComment","FormLabel","changePay","changeTimes","htmlFor","inputProps","changePredTime","colSpan","Input","changeSdacha","endAdornment","Paper","InputBase","placeholder","Divider","orientation","CheckOutlined","startOrder","changeTimeMobile","changePayMobile_new","onKeyPress","enterPromoMobile","OutlinedInput","checkDomTrue","closeTimeDialog","List","ListItem","button","changePayMobile","ListItemAvatar","Avatar","faMoneyBill","faCashRegister","faCreditCard","ListItemText","primary","faQrcode","textDecoration","dop_text","formUrl","PageAbout","replace","PageJob","PageInstPay","PageOferta","PagePolitika","CustomBottomNavigation","thisPage","auth","this_city","faUtensils","badgeContent","faMapMarkerAlt","faUser","SimplePopover","newCart","anchorEl","currentTarget","promoText","promoST","keyCode","Boolean","undefined","handleClick","Popover","transformOrigin","onKeyDown","checkPromoKey","changePromo","openLogin","HeaderCat","Header","token","load","user_name","sendSMS","arr","main_cat","this_city_name_ru","categoryItemsNew","categoryItems","is_load_new","openCity","cityList","city_list","openLoginNew","pwd","ResPWD","NeedCode","typeLogin","userLogin","userLoginFormat","userCode","stage_1","stage_2","timerSMS","errPhone","errSMS","soc_link","cityNameRu","number","join","slice","closeLogin","sms1","grecaptcha","execute","timerId","setInterval","clearInterval","sms2","cod","code","checkCode","Toolbar","ArrowDropDown","behavior","Menu","keepMounted","getContentAnchorEl","spy","isDynamic","activeClass","onSetActive","scrollIntoView","closeCity","getNewLink","reload","mask","disabled","changeNumber","changeCode","repeatSMS","indicatorColor","LoginBySMS","changeCodeNew","logIn","sendsmsrp","checkcoderp","opacity","stores","Status","render","staticContext","status","NotFound","StickyFooter","loadPageInfo","getFullYear","link_allergens","link_ok","link_vk","App","getPerformance","globalState","ReactDOM","GLOBAL_STATE","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve"],"sourceRoot":""}